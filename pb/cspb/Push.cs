// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: push.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gopb {

  /// <summary>Holder for reflection information generated from push.proto</summary>
  public static partial class PushReflection {

    #region Descriptor
    /// <summary>File descriptor for push.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PushReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpwdXNoLnByb3RvEgRnb3BiIjwKDU9uUGxheWVyUmVhZHkSCwoDdWlkGAEg",
            "ASgJEg4KBnNlbGVjdBgCIAMoCRIOCgZnZW5kZXIYAyABKAUivwMKCU9uR2Ft",
            "ZUVuZBIqCgZyZXN1bHQYASADKAsyGi5nb3BiLk9uR2FtZUVuZC5HYW1lUmVz",
            "dWx0EhEKCXRpbWVzdGFtcBgCIAEoAxIuCglMdWNreVN0YXIYAyABKAsyGy5n",
            "b3BiLk9uR2FtZUVuZC5MdWNreVBsYXllchpfCglSb29tQXdhcmQSCgoCaWQY",
            "ASABKAkSEgoKY291cG9uTmFtZRgCIAEoCRIRCgljb3Vwb25JbWcYAyABKAkS",
            "EgoKY291cG9uRGVzYxgEIAEoCRILCgNhaWQYBSABKAUaYgoLTHVja3lQbGF5",
            "ZXISCwoDdWlkGAEgASgJEgwKBG5hbWUYAiABKAkSDgoGYXZhVXJsGAMgASgJ",
            "EigKBWF3YXJkGAQgASgLMhkuZ29wYi5PbkdhbWVFbmQuUm9vbUF3YXJkGn4K",
            "CkdhbWVSZXN1bHQSCwoDdWlkGAEgASgJEg0KBXNjb3JlGAIgASgFEgsKA2hp",
            "dBgDIAEoBRIPCgdwZXJmZWN0GAQgASgFEgwKBHN0YXIYBSABKAUSKAoFYXdh",
            "cmQYBiABKAsyGS5nb3BiLk9uR2FtZUVuZC5Sb29tQXdhcmQiogEKB09uRnJh",
            "bWUSEAoIY3VyRnJhbWUYASABKAUSKAoIY29tbWFuZHMYAiADKAsyFi5nb3Bi",
            "Lk9uRnJhbWUuRkNvbW1hbmQaWwoIRkNvbW1hbmQSDwoHZXhGcmFtZRgBIAEo",
            "BRIPCgdlcEZyYW1lGAIgASgFEgsKA3VpZBgDIAEoCRINCgVjdHlwZRgEIAEo",
            "BRIRCglwYXJhbUxpc3QYBSADKAUioAEKDlB1c2hDb21tb25BcmdzEiwKBGFy",
            "Z3MYASADKAsyHi5nb3BiLlB1c2hDb21tb25BcmdzLkNvbW1vbkFyZxpgCglD",
            "b21tb25BcmcSDwoHc3RyVmFsMRgBIAEoCRIPCgdzdHJWYWwyGAIgASgJEg8K",
            "B2ludFZhbDEYAyABKAUSDwoHaW50VmFsMhgEIAEoBRIPCgdpbnRWYWwzGAUg",
            "ASgFItMBChJPblBsYXllckVudGVyRlJvb20SMwoGcGxheWVyGAEgASgLMiMu",
            "Z29wYi5PblBsYXllckVudGVyRlJvb20uUGxheWVySW5mbxIQCghsZWZ0VElt",
            "ZRgCIAEoAxp2CgpQbGF5ZXJJbmZvEgsKA3VpZBgBIAEoCRIMCgRuYW1lGAIg",
            "ASgJEg4KBmF2YVVybBgDIAEoCRIPCgdpc1JlYWR5GAQgASgIEgwKBGhhdmUY",
            "BiADKAkSDgoGc2VsZWN0GAcgAygJEg4KBmdlbmRlchgIIAEoBSLBAQoRT25S",
            "ZWZyZXNoV2FpdGluZ3MSNAoId2FpdGluZ3MYASADKAsyIi5nb3BiLk9uUmVm",
            "cmVzaFdhaXRpbmdzLlBsYXllckluZm8adgoKUGxheWVySW5mbxILCgN1aWQY",
            "ASABKAkSDAoEbmFtZRgCIAEoCRIOCgZhdmFVcmwYAyABKAkSDwoHaXNSZWFk",
            "eRgEIAEoCBIMCgRoYXZlGAYgAygJEg4KBnNlbGVjdBgHIAMoCRIOCgZnZW5k",
            "ZXIYCCABKAUixwEKDU9uUGxheWVyV2F0Y2gSLgoGcGxheWVyGAEgASgLMh4u",
            "Z29wYi5PblBsYXllcldhdGNoLlBsYXllckluZm8SDgoGdGFyVWlkGAIgASgJ",
            "GnYKClBsYXllckluZm8SCwoDdWlkGAEgASgJEgwKBG5hbWUYAiABKAkSDgoG",
            "YXZhVXJsGAMgASgJEg8KB2lzUmVhZHkYBCABKAgSDAoEaGF2ZRgGIAMoCRIO",
            "CgZzZWxlY3QYByADKAkSDgoGZ2VuZGVyGAggASgFIiIKE09uUGxheWVyQ2xp",
            "ZW50RW50ZXISCwoDdWlkGAEgASgJIoEBCg5PblBsYXllclVwdm90ZRIsCgd1",
            "cHZvdGVzGAEgAygLMhsuZ29wYi5PblBsYXllclVwdm90ZS5VcHZvdGUaQQoG",
            "VXB2b3RlEgsKA3VpZBgBIAEoCRIOCgZ0YXJVaWQYAiABKAkSCwoDbnVtGAMg",
            "ASgFEg0KBXRvdGFsGAQgASgFInYKClBsYXllckluZm8SCwoDdWlkGAEgASgJ",
            "EgwKBG5hbWUYAiABKAkSDgoGYXZhVXJsGAMgASgJEg8KB2lzUmVhZHkYBCAB",
            "KAgSDAoEaGF2ZRgGIAMoCRIOCgZzZWxlY3QYByADKAkSDgoGZ2VuZGVyGAgg",
            "ASgFIscBChVPblNraXBTeW5jQ29tbWFuZERhdGESCwoDdWlkGAEgASgJEg0K",
            "BWN0eXBlGAIgASgJEgkKAXgYAyABKAUSCQoBeRgEIAEoBRILCgNkaXIYBSAB",
            "KAUSDQoFc3RhdGUYBiABKAUSEAoIYm94U3BlZWQYByABKAUSDQoFc2NvcmUY",
            "CCABKAUSDAoEdGltZRgJIAEoBRINCgVyZXFJRBgKIAEoBRIQCghqdW1wVGlt",
            "ZRgLIAEoBRIQCghzdG9wVGltZRgMIAEoBSKUAQoLT25Sb29tU3RhdGUSCwoD",
            "dWlkGAEgASgJEhAKCGJveENvdW50GAIgASgFEg0KBXNjb3JlGAMgASgFEhIK",
            "CnBvcHVsYXJpdHkYBCABKAUSFAoMbGVmdEdhbWVUaW1lGAUgASgFEhgKEG1h",
            "eFBvcHVsYXJpdHlVaWQYBiABKAkSEwoLcGxheWVySW5kZXgYByABKAViBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnPlayerReady), global::Gopb.OnPlayerReady.Parser, new[]{ "Uid", "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnGameEnd), global::Gopb.OnGameEnd.Parser, new[]{ "Result", "Timestamp", "LuckyStar" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnGameEnd.Types.RoomAward), global::Gopb.OnGameEnd.Types.RoomAward.Parser, new[]{ "Id", "CouponName", "CouponImg", "CouponDesc", "Aid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnGameEnd.Types.LuckyPlayer), global::Gopb.OnGameEnd.Types.LuckyPlayer.Parser, new[]{ "Uid", "Name", "AvaUrl", "Award" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnGameEnd.Types.GameResult), global::Gopb.OnGameEnd.Types.GameResult.Parser, new[]{ "Uid", "Score", "Hit", "Perfect", "Star", "Award" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnFrame), global::Gopb.OnFrame.Parser, new[]{ "CurFrame", "Commands" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnFrame.Types.FCommand), global::Gopb.OnFrame.Types.FCommand.Parser, new[]{ "ExFrame", "EpFrame", "Uid", "Ctype", "ParamList" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.PushCommonArgs), global::Gopb.PushCommonArgs.Parser, new[]{ "Args" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.PushCommonArgs.Types.CommonArg), global::Gopb.PushCommonArgs.Types.CommonArg.Parser, new[]{ "StrVal1", "StrVal2", "IntVal1", "IntVal2", "IntVal3" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnPlayerEnterFRoom), global::Gopb.OnPlayerEnterFRoom.Parser, new[]{ "Player", "LeftTIme" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnPlayerEnterFRoom.Types.PlayerInfo), global::Gopb.OnPlayerEnterFRoom.Types.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnRefreshWaitings), global::Gopb.OnRefreshWaitings.Parser, new[]{ "Waitings" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnRefreshWaitings.Types.PlayerInfo), global::Gopb.OnRefreshWaitings.Types.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnPlayerWatch), global::Gopb.OnPlayerWatch.Parser, new[]{ "Player", "TarUid" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnPlayerWatch.Types.PlayerInfo), global::Gopb.OnPlayerWatch.Types.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnPlayerClientEnter), global::Gopb.OnPlayerClientEnter.Parser, new[]{ "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnPlayerUpvote), global::Gopb.OnPlayerUpvote.Parser, new[]{ "Upvotes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnPlayerUpvote.Types.Upvote), global::Gopb.OnPlayerUpvote.Types.Upvote.Parser, new[]{ "Uid", "TarUid", "Num", "Total" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.PlayerInfo), global::Gopb.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnSkipSyncCommandData), global::Gopb.OnSkipSyncCommandData.Parser, new[]{ "Uid", "Ctype", "X", "Y", "Dir", "State", "BoxSpeed", "Score", "Time", "ReqID", "JumpTime", "StopTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.OnRoomState), global::Gopb.OnRoomState.Parser, new[]{ "Uid", "BoxCount", "Score", "Popularity", "LeftGameTime", "MaxPopularityUid", "PlayerIndex" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///玩家准备发单个信息给所有人
  /// </summary>
  public sealed partial class OnPlayerReady : pb::IMessage<OnPlayerReady>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnPlayerReady> _parser = new pb::MessageParser<OnPlayerReady>(() => new OnPlayerReady());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnPlayerReady> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerReady() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerReady(OnPlayerReady other) : this() {
      uid_ = other.uid_;
      select_ = other.select_.Clone();
      gender_ = other.gender_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerReady Clone() {
      return new OnPlayerReady(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "select" field.</summary>
    public const int SelectFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_select_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Select {
      get { return select_; }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 3;
    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnPlayerReady);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnPlayerReady other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if(!select_.Equals(other.select_)) return false;
      if (Gender != other.Gender) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      hash ^= select_.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      select_.WriteTo(output, _repeated_select_codec);
      if (Gender != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      select_.WriteTo(ref output, _repeated_select_codec);
      if (Gender != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      size += select_.CalculateSize(_repeated_select_codec);
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnPlayerReady other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      select_.Add(other.select_);
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            select_.AddEntriesFrom(input, _repeated_select_codec);
            break;
          }
          case 24: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            select_.AddEntriesFrom(ref input, _repeated_select_codec);
            break;
          }
          case 24: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OnGameEnd : pb::IMessage<OnGameEnd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnGameEnd> _parser = new pb::MessageParser<OnGameEnd>(() => new OnGameEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnGameEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnGameEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnGameEnd(OnGameEnd other) : this() {
      result_ = other.result_.Clone();
      timestamp_ = other.timestamp_;
      luckyStar_ = other.luckyStar_ != null ? other.luckyStar_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnGameEnd Clone() {
      return new OnGameEnd(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gopb.OnGameEnd.Types.GameResult> _repeated_result_codec
        = pb::FieldCodec.ForMessage(10, global::Gopb.OnGameEnd.Types.GameResult.Parser);
    private readonly pbc::RepeatedField<global::Gopb.OnGameEnd.Types.GameResult> result_ = new pbc::RepeatedField<global::Gopb.OnGameEnd.Types.GameResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.OnGameEnd.Types.GameResult> Result {
      get { return result_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "LuckyStar" field.</summary>
    public const int LuckyStarFieldNumber = 3;
    private global::Gopb.OnGameEnd.Types.LuckyPlayer luckyStar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gopb.OnGameEnd.Types.LuckyPlayer LuckyStar {
      get { return luckyStar_; }
      set {
        luckyStar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnGameEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnGameEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!result_.Equals(other.result_)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(LuckyStar, other.LuckyStar)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= result_.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (luckyStar_ != null) hash ^= LuckyStar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      result_.WriteTo(output, _repeated_result_codec);
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (luckyStar_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LuckyStar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      result_.WriteTo(ref output, _repeated_result_codec);
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (luckyStar_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LuckyStar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += result_.CalculateSize(_repeated_result_codec);
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (luckyStar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LuckyStar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnGameEnd other) {
      if (other == null) {
        return;
      }
      result_.Add(other.result_);
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.luckyStar_ != null) {
        if (luckyStar_ == null) {
          LuckyStar = new global::Gopb.OnGameEnd.Types.LuckyPlayer();
        }
        LuckyStar.MergeFrom(other.LuckyStar);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            if (luckyStar_ == null) {
              LuckyStar = new global::Gopb.OnGameEnd.Types.LuckyPlayer();
            }
            input.ReadMessage(LuckyStar);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            result_.AddEntriesFrom(ref input, _repeated_result_codec);
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            if (luckyStar_ == null) {
              LuckyStar = new global::Gopb.OnGameEnd.Types.LuckyPlayer();
            }
            input.ReadMessage(LuckyStar);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OnGameEnd message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class RoomAward : pb::IMessage<RoomAward>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoomAward> _parser = new pb::MessageParser<RoomAward>(() => new RoomAward());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoomAward> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.OnGameEnd.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward(RoomAward other) : this() {
          id_ = other.id_;
          couponName_ = other.couponName_;
          couponImg_ = other.couponImg_;
          couponDesc_ = other.couponDesc_;
          aid_ = other.aid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward Clone() {
          return new RoomAward(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponName" field.</summary>
        public const int CouponNameFieldNumber = 2;
        private string couponName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponName {
          get { return couponName_; }
          set {
            couponName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponImg" field.</summary>
        public const int CouponImgFieldNumber = 3;
        private string couponImg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponImg {
          get { return couponImg_; }
          set {
            couponImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponDesc" field.</summary>
        public const int CouponDescFieldNumber = 4;
        private string couponDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponDesc {
          get { return couponDesc_; }
          set {
            couponDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "aid" field.</summary>
        public const int AidFieldNumber = 5;
        private int aid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Aid {
          get { return aid_; }
          set {
            aid_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoomAward);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoomAward other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (CouponName != other.CouponName) return false;
          if (CouponImg != other.CouponImg) return false;
          if (CouponDesc != other.CouponDesc) return false;
          if (Aid != other.Aid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (CouponName.Length != 0) hash ^= CouponName.GetHashCode();
          if (CouponImg.Length != 0) hash ^= CouponImg.GetHashCode();
          if (CouponDesc.Length != 0) hash ^= CouponDesc.GetHashCode();
          if (Aid != 0) hash ^= Aid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CouponName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CouponName);
          }
          if (CouponImg.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CouponDesc);
          }
          if (Aid != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Aid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CouponName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CouponName);
          }
          if (CouponImg.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CouponDesc);
          }
          if (Aid != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Aid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (CouponName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponName);
          }
          if (CouponImg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponDesc);
          }
          if (Aid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Aid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoomAward other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.CouponName.Length != 0) {
            CouponName = other.CouponName;
          }
          if (other.CouponImg.Length != 0) {
            CouponImg = other.CouponImg;
          }
          if (other.CouponDesc.Length != 0) {
            CouponDesc = other.CouponDesc;
          }
          if (other.Aid != 0) {
            Aid = other.Aid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                CouponName = input.ReadString();
                break;
              }
              case 26: {
                CouponImg = input.ReadString();
                break;
              }
              case 34: {
                CouponDesc = input.ReadString();
                break;
              }
              case 40: {
                Aid = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                CouponName = input.ReadString();
                break;
              }
              case 26: {
                CouponImg = input.ReadString();
                break;
              }
              case 34: {
                CouponDesc = input.ReadString();
                break;
              }
              case 40: {
                Aid = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class LuckyPlayer : pb::IMessage<LuckyPlayer>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LuckyPlayer> _parser = new pb::MessageParser<LuckyPlayer>(() => new LuckyPlayer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LuckyPlayer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.OnGameEnd.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LuckyPlayer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LuckyPlayer(LuckyPlayer other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          award_ = other.award_ != null ? other.award_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LuckyPlayer Clone() {
          return new LuckyPlayer(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "award" field.</summary>
        public const int AwardFieldNumber = 4;
        private global::Gopb.OnGameEnd.Types.RoomAward award_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Gopb.OnGameEnd.Types.RoomAward Award {
          get { return award_; }
          set {
            award_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LuckyPlayer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LuckyPlayer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (!object.Equals(Award, other.Award)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (award_ != null) hash ^= Award.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (award_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Award);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (award_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Award);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (award_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Award);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LuckyPlayer other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.award_ != null) {
            if (award_ == null) {
              Award = new global::Gopb.OnGameEnd.Types.RoomAward();
            }
            Award.MergeFrom(other.Award);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 34: {
                if (award_ == null) {
                  Award = new global::Gopb.OnGameEnd.Types.RoomAward();
                }
                input.ReadMessage(Award);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 34: {
                if (award_ == null) {
                  Award = new global::Gopb.OnGameEnd.Types.RoomAward();
                }
                input.ReadMessage(Award);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class GameResult : pb::IMessage<GameResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GameResult> _parser = new pb::MessageParser<GameResult>(() => new GameResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GameResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.OnGameEnd.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GameResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GameResult(GameResult other) : this() {
          uid_ = other.uid_;
          score_ = other.score_;
          hit_ = other.hit_;
          perfect_ = other.perfect_;
          star_ = other.star_;
          award_ = other.award_ != null ? other.award_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GameResult Clone() {
          return new GameResult(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "score" field.</summary>
        public const int ScoreFieldNumber = 2;
        private int score_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Score {
          get { return score_; }
          set {
            score_ = value;
          }
        }

        /// <summary>Field number for the "hit" field.</summary>
        public const int HitFieldNumber = 3;
        private int hit_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Hit {
          get { return hit_; }
          set {
            hit_ = value;
          }
        }

        /// <summary>Field number for the "perfect" field.</summary>
        public const int PerfectFieldNumber = 4;
        private int perfect_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Perfect {
          get { return perfect_; }
          set {
            perfect_ = value;
          }
        }

        /// <summary>Field number for the "star" field.</summary>
        public const int StarFieldNumber = 5;
        private int star_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Star {
          get { return star_; }
          set {
            star_ = value;
          }
        }

        /// <summary>Field number for the "award" field.</summary>
        public const int AwardFieldNumber = 6;
        private global::Gopb.OnGameEnd.Types.RoomAward award_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Gopb.OnGameEnd.Types.RoomAward Award {
          get { return award_; }
          set {
            award_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GameResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GameResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Score != other.Score) return false;
          if (Hit != other.Hit) return false;
          if (Perfect != other.Perfect) return false;
          if (Star != other.Star) return false;
          if (!object.Equals(Award, other.Award)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Score != 0) hash ^= Score.GetHashCode();
          if (Hit != 0) hash ^= Hit.GetHashCode();
          if (Perfect != 0) hash ^= Perfect.GetHashCode();
          if (Star != 0) hash ^= Star.GetHashCode();
          if (award_ != null) hash ^= Award.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Score != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Score);
          }
          if (Hit != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Hit);
          }
          if (Perfect != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Perfect);
          }
          if (Star != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Star);
          }
          if (award_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Award);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Score != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Score);
          }
          if (Hit != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Hit);
          }
          if (Perfect != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Perfect);
          }
          if (Star != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Star);
          }
          if (award_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Award);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Score != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
          }
          if (Hit != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hit);
          }
          if (Perfect != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Perfect);
          }
          if (Star != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
          }
          if (award_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Award);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GameResult other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Score != 0) {
            Score = other.Score;
          }
          if (other.Hit != 0) {
            Hit = other.Hit;
          }
          if (other.Perfect != 0) {
            Perfect = other.Perfect;
          }
          if (other.Star != 0) {
            Star = other.Star;
          }
          if (other.award_ != null) {
            if (award_ == null) {
              Award = new global::Gopb.OnGameEnd.Types.RoomAward();
            }
            Award.MergeFrom(other.Award);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 16: {
                Score = input.ReadInt32();
                break;
              }
              case 24: {
                Hit = input.ReadInt32();
                break;
              }
              case 32: {
                Perfect = input.ReadInt32();
                break;
              }
              case 40: {
                Star = input.ReadInt32();
                break;
              }
              case 50: {
                if (award_ == null) {
                  Award = new global::Gopb.OnGameEnd.Types.RoomAward();
                }
                input.ReadMessage(Award);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 16: {
                Score = input.ReadInt32();
                break;
              }
              case 24: {
                Hit = input.ReadInt32();
                break;
              }
              case 32: {
                Perfect = input.ReadInt32();
                break;
              }
              case 40: {
                Star = input.ReadInt32();
                break;
              }
              case 50: {
                if (award_ == null) {
                  Award = new global::Gopb.OnGameEnd.Types.RoomAward();
                }
                input.ReadMessage(Award);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///frame
  /// </summary>
  public sealed partial class OnFrame : pb::IMessage<OnFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnFrame> _parser = new pb::MessageParser<OnFrame>(() => new OnFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFrame(OnFrame other) : this() {
      curFrame_ = other.curFrame_;
      commands_ = other.commands_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFrame Clone() {
      return new OnFrame(this);
    }

    /// <summary>Field number for the "curFrame" field.</summary>
    public const int CurFrameFieldNumber = 1;
    private int curFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurFrame {
      get { return curFrame_; }
      set {
        curFrame_ = value;
      }
    }

    /// <summary>Field number for the "commands" field.</summary>
    public const int CommandsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Gopb.OnFrame.Types.FCommand> _repeated_commands_codec
        = pb::FieldCodec.ForMessage(18, global::Gopb.OnFrame.Types.FCommand.Parser);
    private readonly pbc::RepeatedField<global::Gopb.OnFrame.Types.FCommand> commands_ = new pbc::RepeatedField<global::Gopb.OnFrame.Types.FCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.OnFrame.Types.FCommand> Commands {
      get { return commands_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurFrame != other.CurFrame) return false;
      if(!commands_.Equals(other.commands_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurFrame != 0) hash ^= CurFrame.GetHashCode();
      hash ^= commands_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurFrame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurFrame);
      }
      commands_.WriteTo(output, _repeated_commands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurFrame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurFrame);
      }
      commands_.WriteTo(ref output, _repeated_commands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurFrame);
      }
      size += commands_.CalculateSize(_repeated_commands_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnFrame other) {
      if (other == null) {
        return;
      }
      if (other.CurFrame != 0) {
        CurFrame = other.CurFrame;
      }
      commands_.Add(other.commands_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurFrame = input.ReadInt32();
            break;
          }
          case 18: {
            commands_.AddEntriesFrom(input, _repeated_commands_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurFrame = input.ReadInt32();
            break;
          }
          case 18: {
            commands_.AddEntriesFrom(ref input, _repeated_commands_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OnFrame message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FCommand : pb::IMessage<FCommand>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FCommand> _parser = new pb::MessageParser<FCommand>(() => new FCommand());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FCommand> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.OnFrame.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand(FCommand other) : this() {
          exFrame_ = other.exFrame_;
          epFrame_ = other.epFrame_;
          uid_ = other.uid_;
          ctype_ = other.ctype_;
          paramList_ = other.paramList_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand Clone() {
          return new FCommand(this);
        }

        /// <summary>Field number for the "exFrame" field.</summary>
        public const int ExFrameFieldNumber = 1;
        private int exFrame_;
        /// <summary>
        ///期望执行帧
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ExFrame {
          get { return exFrame_; }
          set {
            exFrame_ = value;
          }
        }

        /// <summary>Field number for the "epFrame" field.</summary>
        public const int EpFrameFieldNumber = 2;
        private int epFrame_;
        /// <summary>
        ///最终执行帧
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int EpFrame {
          get { return epFrame_; }
          set {
            epFrame_ = value;
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 3;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ctype" field.</summary>
        public const int CtypeFieldNumber = 4;
        private int ctype_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Ctype {
          get { return ctype_; }
          set {
            ctype_ = value;
          }
        }

        /// <summary>Field number for the "paramList" field.</summary>
        public const int ParamListFieldNumber = 5;
        private static readonly pb::FieldCodec<int> _repeated_paramList_codec
            = pb::FieldCodec.ForInt32(42);
        private readonly pbc::RepeatedField<int> paramList_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> ParamList {
          get { return paramList_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FCommand);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FCommand other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExFrame != other.ExFrame) return false;
          if (EpFrame != other.EpFrame) return false;
          if (Uid != other.Uid) return false;
          if (Ctype != other.Ctype) return false;
          if(!paramList_.Equals(other.paramList_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ExFrame != 0) hash ^= ExFrame.GetHashCode();
          if (EpFrame != 0) hash ^= EpFrame.GetHashCode();
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Ctype != 0) hash ^= Ctype.GetHashCode();
          hash ^= paramList_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ExFrame != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ExFrame);
          }
          if (EpFrame != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(EpFrame);
          }
          if (Uid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Uid);
          }
          if (Ctype != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Ctype);
          }
          paramList_.WriteTo(output, _repeated_paramList_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ExFrame != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ExFrame);
          }
          if (EpFrame != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(EpFrame);
          }
          if (Uid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Uid);
          }
          if (Ctype != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Ctype);
          }
          paramList_.WriteTo(ref output, _repeated_paramList_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ExFrame != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExFrame);
          }
          if (EpFrame != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(EpFrame);
          }
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Ctype != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ctype);
          }
          size += paramList_.CalculateSize(_repeated_paramList_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FCommand other) {
          if (other == null) {
            return;
          }
          if (other.ExFrame != 0) {
            ExFrame = other.ExFrame;
          }
          if (other.EpFrame != 0) {
            EpFrame = other.EpFrame;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Ctype != 0) {
            Ctype = other.Ctype;
          }
          paramList_.Add(other.paramList_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ExFrame = input.ReadInt32();
                break;
              }
              case 16: {
                EpFrame = input.ReadInt32();
                break;
              }
              case 26: {
                Uid = input.ReadString();
                break;
              }
              case 32: {
                Ctype = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                paramList_.AddEntriesFrom(input, _repeated_paramList_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ExFrame = input.ReadInt32();
                break;
              }
              case 16: {
                EpFrame = input.ReadInt32();
                break;
              }
              case 26: {
                Uid = input.ReadString();
                break;
              }
              case 32: {
                Ctype = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                paramList_.AddEntriesFrom(ref input, _repeated_paramList_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class PushCommonArgs : pb::IMessage<PushCommonArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PushCommonArgs> _parser = new pb::MessageParser<PushCommonArgs>(() => new PushCommonArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushCommonArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushCommonArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushCommonArgs(PushCommonArgs other) : this() {
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushCommonArgs Clone() {
      return new PushCommonArgs(this);
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gopb.PushCommonArgs.Types.CommonArg> _repeated_args_codec
        = pb::FieldCodec.ForMessage(10, global::Gopb.PushCommonArgs.Types.CommonArg.Parser);
    private readonly pbc::RepeatedField<global::Gopb.PushCommonArgs.Types.CommonArg> args_ = new pbc::RepeatedField<global::Gopb.PushCommonArgs.Types.CommonArg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.PushCommonArgs.Types.CommonArg> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushCommonArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushCommonArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      args_.WriteTo(ref output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushCommonArgs other) {
      if (other == null) {
        return;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            args_.AddEntriesFrom(ref input, _repeated_args_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PushCommonArgs message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CommonArg : pb::IMessage<CommonArg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CommonArg> _parser = new pb::MessageParser<CommonArg>(() => new CommonArg());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CommonArg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.PushCommonArgs.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommonArg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommonArg(CommonArg other) : this() {
          strVal1_ = other.strVal1_;
          strVal2_ = other.strVal2_;
          intVal1_ = other.intVal1_;
          intVal2_ = other.intVal2_;
          intVal3_ = other.intVal3_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommonArg Clone() {
          return new CommonArg(this);
        }

        /// <summary>Field number for the "strVal1" field.</summary>
        public const int StrVal1FieldNumber = 1;
        private string strVal1_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrVal1 {
          get { return strVal1_; }
          set {
            strVal1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "strVal2" field.</summary>
        public const int StrVal2FieldNumber = 2;
        private string strVal2_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrVal2 {
          get { return strVal2_; }
          set {
            strVal2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "intVal1" field.</summary>
        public const int IntVal1FieldNumber = 3;
        private int intVal1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int IntVal1 {
          get { return intVal1_; }
          set {
            intVal1_ = value;
          }
        }

        /// <summary>Field number for the "intVal2" field.</summary>
        public const int IntVal2FieldNumber = 4;
        private int intVal2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int IntVal2 {
          get { return intVal2_; }
          set {
            intVal2_ = value;
          }
        }

        /// <summary>Field number for the "intVal3" field.</summary>
        public const int IntVal3FieldNumber = 5;
        private int intVal3_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int IntVal3 {
          get { return intVal3_; }
          set {
            intVal3_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CommonArg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CommonArg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StrVal1 != other.StrVal1) return false;
          if (StrVal2 != other.StrVal2) return false;
          if (IntVal1 != other.IntVal1) return false;
          if (IntVal2 != other.IntVal2) return false;
          if (IntVal3 != other.IntVal3) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (StrVal1.Length != 0) hash ^= StrVal1.GetHashCode();
          if (StrVal2.Length != 0) hash ^= StrVal2.GetHashCode();
          if (IntVal1 != 0) hash ^= IntVal1.GetHashCode();
          if (IntVal2 != 0) hash ^= IntVal2.GetHashCode();
          if (IntVal3 != 0) hash ^= IntVal3.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (StrVal1.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(StrVal1);
          }
          if (StrVal2.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(StrVal2);
          }
          if (IntVal1 != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(IntVal1);
          }
          if (IntVal2 != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(IntVal2);
          }
          if (IntVal3 != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(IntVal3);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (StrVal1.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(StrVal1);
          }
          if (StrVal2.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(StrVal2);
          }
          if (IntVal1 != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(IntVal1);
          }
          if (IntVal2 != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(IntVal2);
          }
          if (IntVal3 != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(IntVal3);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (StrVal1.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrVal1);
          }
          if (StrVal2.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrVal2);
          }
          if (IntVal1 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal1);
          }
          if (IntVal2 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal2);
          }
          if (IntVal3 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal3);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CommonArg other) {
          if (other == null) {
            return;
          }
          if (other.StrVal1.Length != 0) {
            StrVal1 = other.StrVal1;
          }
          if (other.StrVal2.Length != 0) {
            StrVal2 = other.StrVal2;
          }
          if (other.IntVal1 != 0) {
            IntVal1 = other.IntVal1;
          }
          if (other.IntVal2 != 0) {
            IntVal2 = other.IntVal2;
          }
          if (other.IntVal3 != 0) {
            IntVal3 = other.IntVal3;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                StrVal1 = input.ReadString();
                break;
              }
              case 18: {
                StrVal2 = input.ReadString();
                break;
              }
              case 24: {
                IntVal1 = input.ReadInt32();
                break;
              }
              case 32: {
                IntVal2 = input.ReadInt32();
                break;
              }
              case 40: {
                IntVal3 = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                StrVal1 = input.ReadString();
                break;
              }
              case 18: {
                StrVal2 = input.ReadString();
                break;
              }
              case 24: {
                IntVal1 = input.ReadInt32();
                break;
              }
              case 32: {
                IntVal2 = input.ReadInt32();
                break;
              }
              case 40: {
                IntVal3 = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class OnPlayerEnterFRoom : pb::IMessage<OnPlayerEnterFRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnPlayerEnterFRoom> _parser = new pb::MessageParser<OnPlayerEnterFRoom>(() => new OnPlayerEnterFRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnPlayerEnterFRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerEnterFRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerEnterFRoom(OnPlayerEnterFRoom other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      leftTIme_ = other.leftTIme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerEnterFRoom Clone() {
      return new OnPlayerEnterFRoom(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::Gopb.OnPlayerEnterFRoom.Types.PlayerInfo player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gopb.OnPlayerEnterFRoom.Types.PlayerInfo Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "leftTIme" field.</summary>
    public const int LeftTImeFieldNumber = 2;
    private long leftTIme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LeftTIme {
      get { return leftTIme_; }
      set {
        leftTIme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnPlayerEnterFRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnPlayerEnterFRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      if (LeftTIme != other.LeftTIme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (LeftTIme != 0L) hash ^= LeftTIme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (LeftTIme != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LeftTIme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (LeftTIme != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LeftTIme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (LeftTIme != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LeftTIme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnPlayerEnterFRoom other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Gopb.OnPlayerEnterFRoom.Types.PlayerInfo();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.LeftTIme != 0L) {
        LeftTIme = other.LeftTIme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Gopb.OnPlayerEnterFRoom.Types.PlayerInfo();
            }
            input.ReadMessage(Player);
            break;
          }
          case 16: {
            LeftTIme = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Gopb.OnPlayerEnterFRoom.Types.PlayerInfo();
            }
            input.ReadMessage(Player);
            break;
          }
          case 16: {
            LeftTIme = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OnPlayerEnterFRoom message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.OnPlayerEnterFRoom.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          isReady_ = other.isReady_;
          have_ = other.have_.Clone();
          select_ = other.select_.Clone();
          gender_ = other.gender_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone() {
          return new PlayerInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isReady" field.</summary>
        public const int IsReadyFieldNumber = 4;
        private bool isReady_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsReady {
          get { return isReady_; }
          set {
            isReady_ = value;
          }
        }

        /// <summary>Field number for the "have" field.</summary>
        public const int HaveFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_have_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Have {
          get { return have_; }
        }

        /// <summary>Field number for the "select" field.</summary>
        public const int SelectFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _repeated_select_codec
            = pb::FieldCodec.ForString(58);
        private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Select {
          get { return select_; }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 8;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (IsReady != other.IsReady) return false;
          if(!have_.Equals(other.have_)) return false;
          if(!select_.Equals(other.select_)) return false;
          if (Gender != other.Gender) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (IsReady != false) hash ^= IsReady.GetHashCode();
          hash ^= have_.GetHashCode();
          hash ^= select_.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(output, _repeated_have_codec);
          select_.WriteTo(output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(ref output, _repeated_have_codec);
          select_.WriteTo(ref output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (IsReady != false) {
            size += 1 + 1;
          }
          size += have_.CalculateSize(_repeated_have_codec);
          size += select_.CalculateSize(_repeated_select_codec);
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.IsReady != false) {
            IsReady = other.IsReady;
          }
          have_.Add(other.have_);
          select_.Add(other.select_);
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 50: {
                have_.AddEntriesFrom(input, _repeated_have_codec);
                break;
              }
              case 58: {
                select_.AddEntriesFrom(input, _repeated_select_codec);
                break;
              }
              case 64: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 50: {
                have_.AddEntriesFrom(ref input, _repeated_have_codec);
                break;
              }
              case 58: {
                select_.AddEntriesFrom(ref input, _repeated_select_codec);
                break;
              }
              case 64: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class OnRefreshWaitings : pb::IMessage<OnRefreshWaitings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnRefreshWaitings> _parser = new pb::MessageParser<OnRefreshWaitings>(() => new OnRefreshWaitings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnRefreshWaitings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRefreshWaitings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRefreshWaitings(OnRefreshWaitings other) : this() {
      waitings_ = other.waitings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRefreshWaitings Clone() {
      return new OnRefreshWaitings(this);
    }

    /// <summary>Field number for the "waitings" field.</summary>
    public const int WaitingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gopb.OnRefreshWaitings.Types.PlayerInfo> _repeated_waitings_codec
        = pb::FieldCodec.ForMessage(10, global::Gopb.OnRefreshWaitings.Types.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.OnRefreshWaitings.Types.PlayerInfo> waitings_ = new pbc::RepeatedField<global::Gopb.OnRefreshWaitings.Types.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.OnRefreshWaitings.Types.PlayerInfo> Waitings {
      get { return waitings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnRefreshWaitings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnRefreshWaitings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!waitings_.Equals(other.waitings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= waitings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      waitings_.WriteTo(output, _repeated_waitings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      waitings_.WriteTo(ref output, _repeated_waitings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += waitings_.CalculateSize(_repeated_waitings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnRefreshWaitings other) {
      if (other == null) {
        return;
      }
      waitings_.Add(other.waitings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            waitings_.AddEntriesFrom(input, _repeated_waitings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            waitings_.AddEntriesFrom(ref input, _repeated_waitings_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OnRefreshWaitings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.OnRefreshWaitings.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          isReady_ = other.isReady_;
          have_ = other.have_.Clone();
          select_ = other.select_.Clone();
          gender_ = other.gender_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone() {
          return new PlayerInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isReady" field.</summary>
        public const int IsReadyFieldNumber = 4;
        private bool isReady_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsReady {
          get { return isReady_; }
          set {
            isReady_ = value;
          }
        }

        /// <summary>Field number for the "have" field.</summary>
        public const int HaveFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_have_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Have {
          get { return have_; }
        }

        /// <summary>Field number for the "select" field.</summary>
        public const int SelectFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _repeated_select_codec
            = pb::FieldCodec.ForString(58);
        private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Select {
          get { return select_; }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 8;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (IsReady != other.IsReady) return false;
          if(!have_.Equals(other.have_)) return false;
          if(!select_.Equals(other.select_)) return false;
          if (Gender != other.Gender) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (IsReady != false) hash ^= IsReady.GetHashCode();
          hash ^= have_.GetHashCode();
          hash ^= select_.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(output, _repeated_have_codec);
          select_.WriteTo(output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(ref output, _repeated_have_codec);
          select_.WriteTo(ref output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (IsReady != false) {
            size += 1 + 1;
          }
          size += have_.CalculateSize(_repeated_have_codec);
          size += select_.CalculateSize(_repeated_select_codec);
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.IsReady != false) {
            IsReady = other.IsReady;
          }
          have_.Add(other.have_);
          select_.Add(other.select_);
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 50: {
                have_.AddEntriesFrom(input, _repeated_have_codec);
                break;
              }
              case 58: {
                select_.AddEntriesFrom(input, _repeated_select_codec);
                break;
              }
              case 64: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 50: {
                have_.AddEntriesFrom(ref input, _repeated_have_codec);
                break;
              }
              case 58: {
                select_.AddEntriesFrom(ref input, _repeated_select_codec);
                break;
              }
              case 64: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class OnPlayerWatch : pb::IMessage<OnPlayerWatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnPlayerWatch> _parser = new pb::MessageParser<OnPlayerWatch>(() => new OnPlayerWatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnPlayerWatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerWatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerWatch(OnPlayerWatch other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      tarUid_ = other.tarUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerWatch Clone() {
      return new OnPlayerWatch(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::Gopb.OnPlayerWatch.Types.PlayerInfo player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gopb.OnPlayerWatch.Types.PlayerInfo Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "tarUid" field.</summary>
    public const int TarUidFieldNumber = 2;
    private string tarUid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TarUid {
      get { return tarUid_; }
      set {
        tarUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnPlayerWatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnPlayerWatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      if (TarUid != other.TarUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (TarUid.Length != 0) hash ^= TarUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (TarUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TarUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (TarUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TarUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (TarUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TarUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnPlayerWatch other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Gopb.OnPlayerWatch.Types.PlayerInfo();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.TarUid.Length != 0) {
        TarUid = other.TarUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Gopb.OnPlayerWatch.Types.PlayerInfo();
            }
            input.ReadMessage(Player);
            break;
          }
          case 18: {
            TarUid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Gopb.OnPlayerWatch.Types.PlayerInfo();
            }
            input.ReadMessage(Player);
            break;
          }
          case 18: {
            TarUid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OnPlayerWatch message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.OnPlayerWatch.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          isReady_ = other.isReady_;
          have_ = other.have_.Clone();
          select_ = other.select_.Clone();
          gender_ = other.gender_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone() {
          return new PlayerInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isReady" field.</summary>
        public const int IsReadyFieldNumber = 4;
        private bool isReady_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsReady {
          get { return isReady_; }
          set {
            isReady_ = value;
          }
        }

        /// <summary>Field number for the "have" field.</summary>
        public const int HaveFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_have_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Have {
          get { return have_; }
        }

        /// <summary>Field number for the "select" field.</summary>
        public const int SelectFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _repeated_select_codec
            = pb::FieldCodec.ForString(58);
        private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Select {
          get { return select_; }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 8;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (IsReady != other.IsReady) return false;
          if(!have_.Equals(other.have_)) return false;
          if(!select_.Equals(other.select_)) return false;
          if (Gender != other.Gender) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (IsReady != false) hash ^= IsReady.GetHashCode();
          hash ^= have_.GetHashCode();
          hash ^= select_.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(output, _repeated_have_codec);
          select_.WriteTo(output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(ref output, _repeated_have_codec);
          select_.WriteTo(ref output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (IsReady != false) {
            size += 1 + 1;
          }
          size += have_.CalculateSize(_repeated_have_codec);
          size += select_.CalculateSize(_repeated_select_codec);
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.IsReady != false) {
            IsReady = other.IsReady;
          }
          have_.Add(other.have_);
          select_.Add(other.select_);
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 50: {
                have_.AddEntriesFrom(input, _repeated_have_codec);
                break;
              }
              case 58: {
                select_.AddEntriesFrom(input, _repeated_select_codec);
                break;
              }
              case 64: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 50: {
                have_.AddEntriesFrom(ref input, _repeated_have_codec);
                break;
              }
              case 58: {
                select_.AddEntriesFrom(ref input, _repeated_select_codec);
                break;
              }
              case 64: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class OnPlayerClientEnter : pb::IMessage<OnPlayerClientEnter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnPlayerClientEnter> _parser = new pb::MessageParser<OnPlayerClientEnter>(() => new OnPlayerClientEnter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnPlayerClientEnter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerClientEnter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerClientEnter(OnPlayerClientEnter other) : this() {
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerClientEnter Clone() {
      return new OnPlayerClientEnter(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnPlayerClientEnter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnPlayerClientEnter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnPlayerClientEnter other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OnPlayerUpvote : pb::IMessage<OnPlayerUpvote>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnPlayerUpvote> _parser = new pb::MessageParser<OnPlayerUpvote>(() => new OnPlayerUpvote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnPlayerUpvote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerUpvote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerUpvote(OnPlayerUpvote other) : this() {
      upvotes_ = other.upvotes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnPlayerUpvote Clone() {
      return new OnPlayerUpvote(this);
    }

    /// <summary>Field number for the "upvotes" field.</summary>
    public const int UpvotesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gopb.OnPlayerUpvote.Types.Upvote> _repeated_upvotes_codec
        = pb::FieldCodec.ForMessage(10, global::Gopb.OnPlayerUpvote.Types.Upvote.Parser);
    private readonly pbc::RepeatedField<global::Gopb.OnPlayerUpvote.Types.Upvote> upvotes_ = new pbc::RepeatedField<global::Gopb.OnPlayerUpvote.Types.Upvote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.OnPlayerUpvote.Types.Upvote> Upvotes {
      get { return upvotes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnPlayerUpvote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnPlayerUpvote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!upvotes_.Equals(other.upvotes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= upvotes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      upvotes_.WriteTo(output, _repeated_upvotes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      upvotes_.WriteTo(ref output, _repeated_upvotes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += upvotes_.CalculateSize(_repeated_upvotes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnPlayerUpvote other) {
      if (other == null) {
        return;
      }
      upvotes_.Add(other.upvotes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            upvotes_.AddEntriesFrom(input, _repeated_upvotes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            upvotes_.AddEntriesFrom(ref input, _repeated_upvotes_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OnPlayerUpvote message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Upvote : pb::IMessage<Upvote>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Upvote> _parser = new pb::MessageParser<Upvote>(() => new Upvote());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Upvote> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.OnPlayerUpvote.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Upvote() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Upvote(Upvote other) : this() {
          uid_ = other.uid_;
          tarUid_ = other.tarUid_;
          num_ = other.num_;
          total_ = other.total_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Upvote Clone() {
          return new Upvote(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tarUid" field.</summary>
        public const int TarUidFieldNumber = 2;
        private string tarUid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TarUid {
          get { return tarUid_; }
          set {
            tarUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "num" field.</summary>
        public const int NumFieldNumber = 3;
        private int num_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Num {
          get { return num_; }
          set {
            num_ = value;
          }
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 4;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Upvote);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Upvote other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (TarUid != other.TarUid) return false;
          if (Num != other.Num) return false;
          if (Total != other.Total) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (TarUid.Length != 0) hash ^= TarUid.GetHashCode();
          if (Num != 0) hash ^= Num.GetHashCode();
          if (Total != 0) hash ^= Total.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Num != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Num);
          }
          if (Total != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Total);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Num != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Num);
          }
          if (Total != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Total);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (TarUid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TarUid);
          }
          if (Num != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
          }
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Upvote other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.TarUid.Length != 0) {
            TarUid = other.TarUid;
          }
          if (other.Num != 0) {
            Num = other.Num;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Num = input.ReadInt32();
                break;
              }
              case 32: {
                Total = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Num = input.ReadInt32();
                break;
              }
              case 32: {
                Total = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      uid_ = other.uid_;
      name_ = other.name_;
      avaUrl_ = other.avaUrl_;
      isReady_ = other.isReady_;
      have_ = other.have_.Clone();
      select_ = other.select_.Clone();
      gender_ = other.gender_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avaUrl" field.</summary>
    public const int AvaUrlFieldNumber = 3;
    private string avaUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvaUrl {
      get { return avaUrl_; }
      set {
        avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isReady" field.</summary>
    public const int IsReadyFieldNumber = 4;
    private bool isReady_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReady {
      get { return isReady_; }
      set {
        isReady_ = value;
      }
    }

    /// <summary>Field number for the "have" field.</summary>
    public const int HaveFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_have_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Have {
      get { return have_; }
    }

    /// <summary>Field number for the "select" field.</summary>
    public const int SelectFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_select_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Select {
      get { return select_; }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 8;
    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (AvaUrl != other.AvaUrl) return false;
      if (IsReady != other.IsReady) return false;
      if(!have_.Equals(other.have_)) return false;
      if(!select_.Equals(other.select_)) return false;
      if (Gender != other.Gender) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
      if (IsReady != false) hash ^= IsReady.GetHashCode();
      hash ^= have_.GetHashCode();
      hash ^= select_.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (AvaUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AvaUrl);
      }
      if (IsReady != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsReady);
      }
      have_.WriteTo(output, _repeated_have_codec);
      select_.WriteTo(output, _repeated_select_codec);
      if (Gender != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (AvaUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AvaUrl);
      }
      if (IsReady != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsReady);
      }
      have_.WriteTo(ref output, _repeated_have_codec);
      select_.WriteTo(ref output, _repeated_select_codec);
      if (Gender != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AvaUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
      }
      if (IsReady != false) {
        size += 1 + 1;
      }
      size += have_.CalculateSize(_repeated_have_codec);
      size += select_.CalculateSize(_repeated_select_codec);
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AvaUrl.Length != 0) {
        AvaUrl = other.AvaUrl;
      }
      if (other.IsReady != false) {
        IsReady = other.IsReady;
      }
      have_.Add(other.have_);
      select_.Add(other.select_);
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            AvaUrl = input.ReadString();
            break;
          }
          case 32: {
            IsReady = input.ReadBool();
            break;
          }
          case 50: {
            have_.AddEntriesFrom(input, _repeated_have_codec);
            break;
          }
          case 58: {
            select_.AddEntriesFrom(input, _repeated_select_codec);
            break;
          }
          case 64: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            AvaUrl = input.ReadString();
            break;
          }
          case 32: {
            IsReady = input.ReadBool();
            break;
          }
          case 50: {
            have_.AddEntriesFrom(ref input, _repeated_have_codec);
            break;
          }
          case 58: {
            select_.AddEntriesFrom(ref input, _repeated_select_codec);
            break;
          }
          case 64: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///--------------client proto--------------
  /// </summary>
  public sealed partial class OnSkipSyncCommandData : pb::IMessage<OnSkipSyncCommandData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnSkipSyncCommandData> _parser = new pb::MessageParser<OnSkipSyncCommandData>(() => new OnSkipSyncCommandData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnSkipSyncCommandData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnSkipSyncCommandData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnSkipSyncCommandData(OnSkipSyncCommandData other) : this() {
      uid_ = other.uid_;
      ctype_ = other.ctype_;
      x_ = other.x_;
      y_ = other.y_;
      dir_ = other.dir_;
      state_ = other.state_;
      boxSpeed_ = other.boxSpeed_;
      score_ = other.score_;
      time_ = other.time_;
      reqID_ = other.reqID_;
      jumpTime_ = other.jumpTime_;
      stopTime_ = other.stopTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnSkipSyncCommandData Clone() {
      return new OnSkipSyncCommandData(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ctype" field.</summary>
    public const int CtypeFieldNumber = 2;
    private string ctype_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ctype {
      get { return ctype_; }
      set {
        ctype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 5;
    private int dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "boxSpeed" field.</summary>
    public const int BoxSpeedFieldNumber = 7;
    private int boxSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoxSpeed {
      get { return boxSpeed_; }
      set {
        boxSpeed_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 8;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 9;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "reqID" field.</summary>
    public const int ReqIDFieldNumber = 10;
    private int reqID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqID {
      get { return reqID_; }
      set {
        reqID_ = value;
      }
    }

    /// <summary>Field number for the "jumpTime" field.</summary>
    public const int JumpTimeFieldNumber = 11;
    private int jumpTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JumpTime {
      get { return jumpTime_; }
      set {
        jumpTime_ = value;
      }
    }

    /// <summary>Field number for the "stopTime" field.</summary>
    public const int StopTimeFieldNumber = 12;
    private int stopTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StopTime {
      get { return stopTime_; }
      set {
        stopTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnSkipSyncCommandData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnSkipSyncCommandData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Ctype != other.Ctype) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Dir != other.Dir) return false;
      if (State != other.State) return false;
      if (BoxSpeed != other.BoxSpeed) return false;
      if (Score != other.Score) return false;
      if (Time != other.Time) return false;
      if (ReqID != other.ReqID) return false;
      if (JumpTime != other.JumpTime) return false;
      if (StopTime != other.StopTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Ctype.Length != 0) hash ^= Ctype.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Dir != 0) hash ^= Dir.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (BoxSpeed != 0) hash ^= BoxSpeed.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (ReqID != 0) hash ^= ReqID.GetHashCode();
      if (JumpTime != 0) hash ^= JumpTime.GetHashCode();
      if (StopTime != 0) hash ^= StopTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Ctype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ctype);
      }
      if (X != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (Dir != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Dir);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(State);
      }
      if (BoxSpeed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BoxSpeed);
      }
      if (Score != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Score);
      }
      if (Time != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Time);
      }
      if (ReqID != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ReqID);
      }
      if (JumpTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(JumpTime);
      }
      if (StopTime != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(StopTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Ctype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ctype);
      }
      if (X != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (Dir != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Dir);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(State);
      }
      if (BoxSpeed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BoxSpeed);
      }
      if (Score != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Score);
      }
      if (Time != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Time);
      }
      if (ReqID != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ReqID);
      }
      if (JumpTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(JumpTime);
      }
      if (StopTime != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(StopTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Ctype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ctype);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Dir != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dir);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (BoxSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoxSpeed);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (ReqID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqID);
      }
      if (JumpTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JumpTime);
      }
      if (StopTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StopTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnSkipSyncCommandData other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Ctype.Length != 0) {
        Ctype = other.Ctype;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Dir != 0) {
        Dir = other.Dir;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.BoxSpeed != 0) {
        BoxSpeed = other.BoxSpeed;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.ReqID != 0) {
        ReqID = other.ReqID;
      }
      if (other.JumpTime != 0) {
        JumpTime = other.JumpTime;
      }
      if (other.StopTime != 0) {
        StopTime = other.StopTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Ctype = input.ReadString();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Dir = input.ReadInt32();
            break;
          }
          case 48: {
            State = input.ReadInt32();
            break;
          }
          case 56: {
            BoxSpeed = input.ReadInt32();
            break;
          }
          case 64: {
            Score = input.ReadInt32();
            break;
          }
          case 72: {
            Time = input.ReadInt32();
            break;
          }
          case 80: {
            ReqID = input.ReadInt32();
            break;
          }
          case 88: {
            JumpTime = input.ReadInt32();
            break;
          }
          case 96: {
            StopTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Ctype = input.ReadString();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Dir = input.ReadInt32();
            break;
          }
          case 48: {
            State = input.ReadInt32();
            break;
          }
          case 56: {
            BoxSpeed = input.ReadInt32();
            break;
          }
          case 64: {
            Score = input.ReadInt32();
            break;
          }
          case 72: {
            Time = input.ReadInt32();
            break;
          }
          case 80: {
            ReqID = input.ReadInt32();
            break;
          }
          case 88: {
            JumpTime = input.ReadInt32();
            break;
          }
          case 96: {
            StopTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///跳一跳房间状态
  /// </summary>
  public sealed partial class OnRoomState : pb::IMessage<OnRoomState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnRoomState> _parser = new pb::MessageParser<OnRoomState>(() => new OnRoomState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnRoomState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.PushReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRoomState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRoomState(OnRoomState other) : this() {
      uid_ = other.uid_;
      boxCount_ = other.boxCount_;
      score_ = other.score_;
      popularity_ = other.popularity_;
      leftGameTime_ = other.leftGameTime_;
      maxPopularityUid_ = other.maxPopularityUid_;
      playerIndex_ = other.playerIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRoomState Clone() {
      return new OnRoomState(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boxCount" field.</summary>
    public const int BoxCountFieldNumber = 2;
    private int boxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoxCount {
      get { return boxCount_; }
      set {
        boxCount_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "popularity" field.</summary>
    public const int PopularityFieldNumber = 4;
    private int popularity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Popularity {
      get { return popularity_; }
      set {
        popularity_ = value;
      }
    }

    /// <summary>Field number for the "leftGameTime" field.</summary>
    public const int LeftGameTimeFieldNumber = 5;
    private int leftGameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftGameTime {
      get { return leftGameTime_; }
      set {
        leftGameTime_ = value;
      }
    }

    /// <summary>Field number for the "maxPopularityUid" field.</summary>
    public const int MaxPopularityUidFieldNumber = 6;
    private string maxPopularityUid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxPopularityUid {
      get { return maxPopularityUid_; }
      set {
        maxPopularityUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerIndex" field.</summary>
    public const int PlayerIndexFieldNumber = 7;
    private int playerIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerIndex {
      get { return playerIndex_; }
      set {
        playerIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnRoomState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnRoomState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (BoxCount != other.BoxCount) return false;
      if (Score != other.Score) return false;
      if (Popularity != other.Popularity) return false;
      if (LeftGameTime != other.LeftGameTime) return false;
      if (MaxPopularityUid != other.MaxPopularityUid) return false;
      if (PlayerIndex != other.PlayerIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (BoxCount != 0) hash ^= BoxCount.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Popularity != 0) hash ^= Popularity.GetHashCode();
      if (LeftGameTime != 0) hash ^= LeftGameTime.GetHashCode();
      if (MaxPopularityUid.Length != 0) hash ^= MaxPopularityUid.GetHashCode();
      if (PlayerIndex != 0) hash ^= PlayerIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (BoxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoxCount);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Popularity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Popularity);
      }
      if (LeftGameTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PlayerIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (BoxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoxCount);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Popularity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Popularity);
      }
      if (LeftGameTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PlayerIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (BoxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoxCount);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Popularity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Popularity);
      }
      if (LeftGameTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnRoomState other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.BoxCount != 0) {
        BoxCount = other.BoxCount;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Popularity != 0) {
        Popularity = other.Popularity;
      }
      if (other.LeftGameTime != 0) {
        LeftGameTime = other.LeftGameTime;
      }
      if (other.MaxPopularityUid.Length != 0) {
        MaxPopularityUid = other.MaxPopularityUid;
      }
      if (other.PlayerIndex != 0) {
        PlayerIndex = other.PlayerIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            BoxCount = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Popularity = input.ReadInt32();
            break;
          }
          case 40: {
            LeftGameTime = input.ReadInt32();
            break;
          }
          case 50: {
            MaxPopularityUid = input.ReadString();
            break;
          }
          case 56: {
            PlayerIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            BoxCount = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Popularity = input.ReadInt32();
            break;
          }
          case 40: {
            LeftGameTime = input.ReadInt32();
            break;
          }
          case 50: {
            MaxPopularityUid = input.ReadString();
            break;
          }
          case 56: {
            PlayerIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
