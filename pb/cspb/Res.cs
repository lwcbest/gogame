// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: res.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gopb {

  /// <summary>Holder for reflection information generated from res.proto</summary>
  public static partial class ResReflection {

    #region Descriptor
    /// <summary>File descriptor for res.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglyZXMucHJvdG8SBGdvcGIiywEKC1Jlc05ldExvZ2luEgwKBGNvZGUYASAB",
            "KAUSCwoDbXNnGAIgASgJEigKBnBsYXllchgDIAEoCzIYLmdvcGIuUmVzTmV0",
            "TG9naW4uUGxheWVyEhIKCmdhbWVDb25maWcYBCABKAkaYwoGUGxheWVyEhAK",
            "CHVzZXJuYW1lGAEgASgJEgsKA3VpZBgCIAEoCRIMCgRuYW1lGAMgASgJEg4K",
            "BmF2YVVybBgEIAEoCRINCgVzY29yZRgFIAEoBRINCgVsZXZlbBgGIAEoBSJA",
            "ChVSZXNOZXRFbnRlck1hdGNoUXVldWUSDAoEY29kZRgBIAEoBRILCgNtc2cY",
            "AiABKAkSDAoEZGF0YRgDIAEoCSIlCghSZXNFcnJvchIMCgRjb2RlGAEgASgF",
            "EgsKA21zZxgCIAEoCSI4Cg5SZXNWZXJzaW9uQWRkchIMCgRjb2RlGAEgASgF",
            "EgsKA21zZxgCIAEoCRILCgN1cmwYAyABKAki4gUKEFJlc05ldEVudGVyRlJv",
            "b20SDAoEY29kZRgBIAEoBRILCgNtc2cYAiABKAkSEQoJZnJhbWVUaW1lGAMg",
            "ASgFEhAKCGtleUZyYW1lGAQgASgFEhAKCHJhbmRTZWVkGAUgASgDEhEKCXJv",
            "b21TdGF0ZRgGIAEoBRIyCgdwbGF5ZXJzGAcgAygLMiEuZ29wYi5SZXNOZXRF",
            "bnRlckZSb29tLlBsYXllckluZm8SNQoMaW5pdENvbW1hbmRzGAggAygLMh8u",
            "Z29wYi5SZXNOZXRFbnRlckZSb29tLkZDb21tYW5kEjYKDWRvaW5nQ29tbWFu",
            "ZHMYCSADKAsyHy5nb3BiLlJlc05ldEVudGVyRlJvb20uRkNvbW1hbmQSDAoE",
            "aGF2ZRgKIAMoCRIQCghzZXJ2ZXJJZBgLIAEoCRIOCgZyb29tSWQYDCABKAkS",
            "EAoIY3VyRnJhbWUYDSABKAUSNAoId2F0Y2hlcnMYDiADKAsyIi5nb3BiLlJl",
            "c05ldEVudGVyRlJvb20uV2F0Y2hlckluZm8SDgoGY29uZmlnGA8gASgJEhAK",
            "CHdhaXRUaW1lGBAgASgDGlsKCEZDb21tYW5kEg8KB2V4RnJhbWUYASABKAUS",
            "DwoHZXBGcmFtZRgCIAEoBRILCgN1aWQYAyABKAkSDQoFY3R5cGUYBCABKAUS",
            "EQoJcGFyYW1MaXN0GAUgAygFGnYKClBsYXllckluZm8SCwoDdWlkGAEgASgJ",
            "EgwKBG5hbWUYAiABKAkSDgoGYXZhVXJsGAMgASgJEg8KB2lzUmVhZHkYBCAB",
            "KAgSDAoEaGF2ZRgFIAMoCRIOCgZzZWxlY3QYBiADKAkSDgoGZ2VuZGVyGAcg",
            "ASgFGlcKC1dhdGNoZXJJbmZvEgsKA3VpZBgBIAEoCRIOCgZ0YXJVaWQYAiAB",
            "KAkSDQoFdG90YWwYAyABKAUSDAoEbmFtZRgEIAEoCRIOCgZhdmFVcmwYBSAB",
            "KAki9QkKEVJlc05ldENyZWF0ZUZSb29tEgwKBGNvZGUYASABKAUSCwoDbXNn",
            "GAIgASgJEhEKCXJvb21TdGF0ZRgDIAEoBRIQCgh3YWl0VGltZRgEIAEoAxIN",
            "CgVxclVybBgFIAEoCRIRCglmcmFtZVRpbWUYBiABKAUSEAoIa2V5RnJhbWUY",
            "ByABKAUSEAoIcmFuZFNlZWQYCCABKAMSNgoMaW5pdENvbW1hbmRzGAkgAygL",
            "MiAuZ29wYi5SZXNOZXRDcmVhdGVGUm9vbS5GQ29tbWFuZBI3Cg1kb2luZ0Nv",
            "bW1hbmRzGAogAygLMiAuZ29wYi5SZXNOZXRDcmVhdGVGUm9vbS5GQ29tbWFu",
            "ZBI2CgtzdGFyMUF3YXJkcxgLIAMoCzIhLmdvcGIuUmVzTmV0Q3JlYXRlRlJv",
            "b20uUm9vbUF3YXJkEjYKC3N0YXIyQXdhcmRzGAwgAygLMiEuZ29wYi5SZXNO",
            "ZXRDcmVhdGVGUm9vbS5Sb29tQXdhcmQSNgoLc3RhcjNBd2FyZHMYDSADKAsy",
            "IS5nb3BiLlJlc05ldENyZWF0ZUZSb29tLlJvb21Bd2FyZBI5CgxzdGFyM1Bs",
            "YXllcnMYDyADKAsyIy5nb3BiLlJlc05ldENyZWF0ZUZSb29tLlN0YXIzUGxh",
            "eWVyEjMKB3BsYXllcnMYECADKAsyIi5nb3BiLlJlc05ldENyZWF0ZUZSb29t",
            "LlBsYXllckluZm8SNAoId2FpdGluZ3MYESADKAsyIi5nb3BiLlJlc05ldENy",
            "ZWF0ZUZSb29tLlBsYXllckluZm8SNQoId2F0Y2hlcnMYEiADKAsyIy5nb3Bi",
            "LlJlc05ldENyZWF0ZUZSb29tLldhdGNoZXJJbmZvEhAKCGN1ckZyYW1lGBMg",
            "ASgFEg8KB3JvdW5kSWQYFCABKAMSDgoGY29uZmlnGBUgASgJGkoKBFJhbmsS",
            "EAoIbmlja05hbWUYASABKAkSEQoJYXZhdGFyVXJsGAIgASgJEg4KBmdlbmRl",
            "chgDIAEoBRINCgVzY29yZRgEIAEoBRpECgtTdGFyM1BsYXllchIQCghuaWNr",
            "TmFtZRgBIAEoCRIRCglhdmF0YXJVcmwYAiABKAkSEAoIaXRlbU5hbWUYAyAB",
            "KAkaWwoIRkNvbW1hbmQSDwoHZXhGcmFtZRgBIAEoBRIPCgdlcEZyYW1lGAIg",
            "ASgFEgsKA3VpZBgDIAEoCRINCgVjdHlwZRgEIAEoBRIRCglwYXJhbUxpc3QY",
            "BSADKAUadgoKUGxheWVySW5mbxILCgN1aWQYASABKAkSDAoEbmFtZRgCIAEo",
            "CRIOCgZhdmFVcmwYAyABKAkSDwoHaXNSZWFkeRgEIAEoCBIMCgRoYXZlGAUg",
            "AygJEg4KBnNlbGVjdBgGIAMoCRIOCgZnZW5kZXIYByABKAUaVwoLV2F0Y2hl",
            "ckluZm8SCwoDdWlkGAEgASgJEg4KBnRhclVpZBgCIAEoCRINCgV0b3RhbBgD",
            "IAEoBRIMCgRuYW1lGAQgASgJEg4KBmF2YVVybBgFIAEoCRpxCglSb29tQXdh",
            "cmQSCgoCaWQYASABKAkSEgoKY291cG9uTmFtZRgCIAEoCRIRCgljb3Vwb25J",
            "bWcYAyABKAkSEgoKY291cG9uRGVzYxgEIAEoCRIOCgZ3ZWlnaHQYBSABKAUS",
            "DQoFc3RvY2sYBiABKAUitggKEVJlc05ldENyZWF0ZVNSb29tEgwKBGNvZGUY",
            "ASABKAUSCwoDbXNnGAIgASgJEhAKCHNlcnZlcklkGAMgASgJEg4KBnJvb21J",
            "ZBgEIAEoCRINCgVxclVybBgFIAEoCRIRCglyb29tU3RhdGUYBiABKAUSEAoI",
            "d2FpdFRpbWUYByABKAMSDwoHcnVuVGltZRgIIAEoAxI2CgtzdGFyMUF3YXJk",
            "cxgJIAMoCzIhLmdvcGIuUmVzTmV0Q3JlYXRlU1Jvb20uUm9vbUF3YXJkEjYK",
            "C3N0YXIyQXdhcmRzGAogAygLMiEuZ29wYi5SZXNOZXRDcmVhdGVTUm9vbS5S",
            "b29tQXdhcmQSNgoLc3RhcjNBd2FyZHMYCyADKAsyIS5nb3BiLlJlc05ldENy",
            "ZWF0ZVNSb29tLlJvb21Bd2FyZBI5CgxzdGFyM1BsYXllcnMYDCADKAsyIy5n",
            "b3BiLlJlc05ldENyZWF0ZVNSb29tLlN0YXIzUGxheWVyEjMKB3BsYXllcnMY",
            "DSADKAsyIi5nb3BiLlJlc05ldENyZWF0ZVNSb29tLlBsYXllckluZm8SNAoI",
            "d2FpdGluZ3MYDiADKAsyIi5nb3BiLlJlc05ldENyZWF0ZVNSb29tLlBsYXll",
            "ckluZm8SNQoId2F0Y2hlcnMYDyADKAsyIy5nb3BiLlJlc05ldENyZWF0ZVNS",
            "b29tLldhdGNoZXJJbmZvEjUKCnN5bmNTdGF0ZXMYECADKAsyIS5nb3BiLlJl",
            "c05ldENyZWF0ZVNSb29tLlJvb21TdGF0ZRIPCgdyb3VuZElkGBEgASgDEg4K",
            "BmNvbmZpZxgSIAEoCRIQCghyYW5kU2VlZBgTIAEoAxomCglSb29tU3RhdGUS",
            "CwoDdWlkGAEgASgJEgwKBGRhdGEYAiABKAwadgoKUGxheWVySW5mbxILCgN1",
            "aWQYASABKAkSDAoEbmFtZRgCIAEoCRIOCgZhdmFVcmwYAyABKAkSDwoHaXNS",
            "ZWFkeRgEIAEoCBIMCgRoYXZlGAUgAygJEg4KBnNlbGVjdBgGIAMoCRIOCgZn",
            "ZW5kZXIYByABKAUaVwoLV2F0Y2hlckluZm8SCwoDdWlkGAEgASgJEg4KBnRh",
            "clVpZBgCIAEoCRINCgV0b3RhbBgDIAEoBRIMCgRuYW1lGAQgASgJEg4KBmF2",
            "YVVybBgFIAEoCRpxCglSb29tQXdhcmQSCgoCaWQYASABKAkSEgoKY291cG9u",
            "TmFtZRgCIAEoCRIRCgljb3Vwb25JbWcYAyABKAkSEgoKY291cG9uRGVzYxgE",
            "IAEoCRIOCgZ3ZWlnaHQYBSABKAUSDQoFc3RvY2sYBiABKAUaRAoLU3RhcjNQ",
            "bGF5ZXISEAoIbmlja05hbWUYASABKAkSEQoJYXZhdGFyVXJsGAIgASgJEhAK",
            "CGl0ZW1OYW1lGAMgASgJIrwEChBSZXNOZXRFbnRlclNSb29tEgwKBGNvZGUY",
            "ASABKAUSCwoDbXNnGAIgASgJEhEKCXJvb21TdGF0ZRgDIAEoBRIQCgh3YWl0",
            "VGltZRgEIAEoAxIPCgdydW5UaW1lGAUgASgDEgwKBGhhdmUYBiADKAkSDgoG",
            "c2VsZWN0GAcgAygJEjIKB3BsYXllcnMYCCADKAsyIS5nb3BiLlJlc05ldEVu",
            "dGVyU1Jvb20uUGxheWVySW5mbxI0Cgh3YXRjaGVycxgJIAMoCzIiLmdvcGIu",
            "UmVzTmV0RW50ZXJTUm9vbS5XYXRjaGVySW5mbxI0CgpzeW5jU3RhdGVzGAog",
            "AygLMiAuZ29wYi5SZXNOZXRFbnRlclNSb29tLlJvb21TdGF0ZRIOCgZjb25m",
            "aWcYCyABKAkSEAoIcmFuZFNlZWQYDCABKAMaJgoJUm9vbVN0YXRlEgsKA3Vp",
            "ZBgBIAEoCRIMCgRkYXRhGAIgASgMGnYKClBsYXllckluZm8SCwoDdWlkGAEg",
            "ASgJEgwKBG5hbWUYAiABKAkSDgoGYXZhVXJsGAMgASgJEg8KB2lzUmVhZHkY",
            "BCABKAgSDAoEaGF2ZRgFIAMoCRIOCgZzZWxlY3QYBiADKAkSDgoGZ2VuZGVy",
            "GAcgASgFGlcKC1dhdGNoZXJJbmZvEgsKA3VpZBgBIAEoCRIOCgZ0YXJVaWQY",
            "AiABKAkSDQoFdG90YWwYAyABKAUSDAoEbmFtZRgEIAEoCRIOCgZhdmFVcmwY",
            "BSABKAkimgEKEVJlc1N5bmNQbGF5ZXJEYXRhEgsKA3VpZBgBIAEoCRIQCghi",
            "b3hDb3VudBgCIAEoBRINCgVzY29yZRgDIAEoBRISCgpwb3B1bGFyaXR5GAQg",
            "ASgFEhQKDGxlZnRHYW1lVGltZRgFIAEoBRIYChBtYXhQb3B1bGFyaXR5VWlk",
            "GAYgASgJEhMKC3BsYXllckluZGV4GAcgASgFInUKEVJlc0dhbVJhbmRvbUF3",
            "YXJkEgwKBGNvZGUYASABKAUSCwoDbXNnGAIgASgJEgoKAmlkGAMgASgJEhIK",
            "CmNvdXBvbk5hbWUYBCABKAkSEQoJY291cG9uSW1nGAUgASgJEhIKCmNvdXBv",
            "bkRlc2MYBiABKAkisgUKEFJlc05ldEVudGVyVFJvb20SDAoEY29kZRgBIAEo",
            "BRILCgNtc2cYAiABKAkSEAoId2FpdFRpbWUYAyABKAMSDwoHcnVuVGltZRgE",
            "IAEoAxIMCgRoYXZlGAUgAygJEg4KBnNlbGVjdBgGIAMoCRIyCgdwbGF5ZXJz",
            "GAcgAygLMiEuZ29wYi5SZXNOZXRFbnRlclRSb29tLlBsYXllckluZm8SNAoK",
            "c3luY1N0YXRlcxgIIAMoCzIgLmdvcGIuUmVzTmV0RW50ZXJUUm9vbS5Sb29t",
            "U3RhdGUSDgoGY29uZmlnGAkgASgJEjUKC3N0YXIxQXdhcmRzGAogAygLMiAu",
            "Z29wYi5SZXNOZXRFbnRlclRSb29tLlJvb21Bd2FyZBI1CgtzdGFyMkF3YXJk",
            "cxgLIAMoCzIgLmdvcGIuUmVzTmV0RW50ZXJUUm9vbS5Sb29tQXdhcmQSNQoL",
            "c3RhcjNBd2FyZHMYDCADKAsyIC5nb3BiLlJlc05ldEVudGVyVFJvb20uUm9v",
            "bUF3YXJkEhAKCHJhbmRTZWVkGA0gASgDGiYKCVJvb21TdGF0ZRILCgN1aWQY",
            "ASABKAkSDAoEZGF0YRgCIAEoDBp2CgpQbGF5ZXJJbmZvEgsKA3VpZBgBIAEo",
            "CRIMCgRuYW1lGAIgASgJEg4KBmF2YVVybBgDIAEoCRIPCgdpc1JlYWR5GAQg",
            "ASgIEgwKBGhhdmUYBSADKAkSDgoGc2VsZWN0GAYgAygJEg4KBmdlbmRlchgH",
            "IAEoBRpxCglSb29tQXdhcmQSCgoCaWQYASABKAkSEgoKY291cG9uTmFtZRgC",
            "IAEoCRIRCgljb3Vwb25JbWcYAyABKAkSEgoKY291cG9uRGVzYxgEIAEoCRIO",
            "CgZ3ZWlnaHQYBSABKAUSDQoFc3RvY2sYBiABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetLogin), global::Gopb.ResNetLogin.Parser, new[]{ "Code", "Msg", "Player", "GameConfig" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetLogin.Types.Player), global::Gopb.ResNetLogin.Types.Player.Parser, new[]{ "Username", "Uid", "Name", "AvaUrl", "Score", "Level" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterMatchQueue), global::Gopb.ResNetEnterMatchQueue.Parser, new[]{ "Code", "Msg", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResError), global::Gopb.ResError.Parser, new[]{ "Code", "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResVersionAddr), global::Gopb.ResVersionAddr.Parser, new[]{ "Code", "Msg", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterFRoom), global::Gopb.ResNetEnterFRoom.Parser, new[]{ "Code", "Msg", "FrameTime", "KeyFrame", "RandSeed", "RoomState", "Players", "InitCommands", "DoingCommands", "Have", "ServerId", "RoomId", "CurFrame", "Watchers", "Config", "WaitTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterFRoom.Types.FCommand), global::Gopb.ResNetEnterFRoom.Types.FCommand.Parser, new[]{ "ExFrame", "EpFrame", "Uid", "Ctype", "ParamList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterFRoom.Types.PlayerInfo), global::Gopb.ResNetEnterFRoom.Types.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterFRoom.Types.WatcherInfo), global::Gopb.ResNetEnterFRoom.Types.WatcherInfo.Parser, new[]{ "Uid", "TarUid", "Total", "Name", "AvaUrl" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateFRoom), global::Gopb.ResNetCreateFRoom.Parser, new[]{ "Code", "Msg", "RoomState", "WaitTime", "QrUrl", "FrameTime", "KeyFrame", "RandSeed", "InitCommands", "DoingCommands", "Star1Awards", "Star2Awards", "Star3Awards", "Star3Players", "Players", "Waitings", "Watchers", "CurFrame", "RoundId", "Config" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateFRoom.Types.Rank), global::Gopb.ResNetCreateFRoom.Types.Rank.Parser, new[]{ "NickName", "AvatarUrl", "Gender", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateFRoom.Types.Star3Player), global::Gopb.ResNetCreateFRoom.Types.Star3Player.Parser, new[]{ "NickName", "AvatarUrl", "ItemName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateFRoom.Types.FCommand), global::Gopb.ResNetCreateFRoom.Types.FCommand.Parser, new[]{ "ExFrame", "EpFrame", "Uid", "Ctype", "ParamList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateFRoom.Types.PlayerInfo), global::Gopb.ResNetCreateFRoom.Types.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateFRoom.Types.WatcherInfo), global::Gopb.ResNetCreateFRoom.Types.WatcherInfo.Parser, new[]{ "Uid", "TarUid", "Total", "Name", "AvaUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateFRoom.Types.RoomAward), global::Gopb.ResNetCreateFRoom.Types.RoomAward.Parser, new[]{ "Id", "CouponName", "CouponImg", "CouponDesc", "Weight", "Stock" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateSRoom), global::Gopb.ResNetCreateSRoom.Parser, new[]{ "Code", "Msg", "ServerId", "RoomId", "QrUrl", "RoomState", "WaitTime", "RunTime", "Star1Awards", "Star2Awards", "Star3Awards", "Star3Players", "Players", "Waitings", "Watchers", "SyncStates", "RoundId", "Config", "RandSeed" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateSRoom.Types.RoomState), global::Gopb.ResNetCreateSRoom.Types.RoomState.Parser, new[]{ "Uid", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateSRoom.Types.PlayerInfo), global::Gopb.ResNetCreateSRoom.Types.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateSRoom.Types.WatcherInfo), global::Gopb.ResNetCreateSRoom.Types.WatcherInfo.Parser, new[]{ "Uid", "TarUid", "Total", "Name", "AvaUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateSRoom.Types.RoomAward), global::Gopb.ResNetCreateSRoom.Types.RoomAward.Parser, new[]{ "Id", "CouponName", "CouponImg", "CouponDesc", "Weight", "Stock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetCreateSRoom.Types.Star3Player), global::Gopb.ResNetCreateSRoom.Types.Star3Player.Parser, new[]{ "NickName", "AvatarUrl", "ItemName" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterSRoom), global::Gopb.ResNetEnterSRoom.Parser, new[]{ "Code", "Msg", "RoomState", "WaitTime", "RunTime", "Have", "Select", "Players", "Watchers", "SyncStates", "Config", "RandSeed" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterSRoom.Types.RoomState), global::Gopb.ResNetEnterSRoom.Types.RoomState.Parser, new[]{ "Uid", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterSRoom.Types.PlayerInfo), global::Gopb.ResNetEnterSRoom.Types.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterSRoom.Types.WatcherInfo), global::Gopb.ResNetEnterSRoom.Types.WatcherInfo.Parser, new[]{ "Uid", "TarUid", "Total", "Name", "AvaUrl" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResSyncPlayerData), global::Gopb.ResSyncPlayerData.Parser, new[]{ "Uid", "BoxCount", "Score", "Popularity", "LeftGameTime", "MaxPopularityUid", "PlayerIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResGamRandomAward), global::Gopb.ResGamRandomAward.Parser, new[]{ "Code", "Msg", "Id", "CouponName", "CouponImg", "CouponDesc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterTRoom), global::Gopb.ResNetEnterTRoom.Parser, new[]{ "Code", "Msg", "WaitTime", "RunTime", "Have", "Select", "Players", "SyncStates", "Config", "Star1Awards", "Star2Awards", "Star3Awards", "RandSeed" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterTRoom.Types.RoomState), global::Gopb.ResNetEnterTRoom.Types.RoomState.Parser, new[]{ "Uid", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterTRoom.Types.PlayerInfo), global::Gopb.ResNetEnterTRoom.Types.PlayerInfo.Parser, new[]{ "Uid", "Name", "AvaUrl", "IsReady", "Have", "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ResNetEnterTRoom.Types.RoomAward), global::Gopb.ResNetEnterTRoom.Types.RoomAward.Parser, new[]{ "Id", "CouponName", "CouponImg", "CouponDesc", "Weight", "Stock" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Net
  /// </summary>
  public sealed partial class ResNetLogin : pb::IMessage<ResNetLogin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResNetLogin> _parser = new pb::MessageParser<ResNetLogin>(() => new ResNetLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResNetLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetLogin(ResNetLogin other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      gameConfig_ = other.gameConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetLogin Clone() {
      return new ResNetLogin(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private global::Gopb.ResNetLogin.Types.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gopb.ResNetLogin.Types.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "gameConfig" field.</summary>
    public const int GameConfigFieldNumber = 4;
    private string gameConfig_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameConfig {
      get { return gameConfig_; }
      set {
        gameConfig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResNetLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResNetLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if (GameConfig != other.GameConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (GameConfig.Length != 0) hash ^= GameConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (GameConfig.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GameConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (GameConfig.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GameConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (GameConfig.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResNetLogin other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Gopb.ResNetLogin.Types.Player();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.GameConfig.Length != 0) {
        GameConfig = other.GameConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::Gopb.ResNetLogin.Types.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 34: {
            GameConfig = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::Gopb.ResNetLogin.Types.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 34: {
            GameConfig = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResNetLogin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Player : pb::IMessage<Player>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Player> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetLogin.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Player() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Player(Player other) : this() {
          username_ = other.username_;
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          score_ = other.score_;
          level_ = other.level_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Player Clone() {
          return new Player(this);
        }

        /// <summary>Field number for the "username" field.</summary>
        public const int UsernameFieldNumber = 1;
        private string username_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username {
          get { return username_; }
          set {
            username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 2;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 4;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "score" field.</summary>
        public const int ScoreFieldNumber = 5;
        private int score_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Score {
          get { return score_; }
          set {
            score_ = value;
          }
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 6;
        private int level_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Player);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Player other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Username != other.Username) return false;
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (Score != other.Score) return false;
          if (Level != other.Level) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Username.Length != 0) hash ^= Username.GetHashCode();
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (Score != 0) hash ^= Score.GetHashCode();
          if (Level != 0) hash ^= Level.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Username.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Username);
          }
          if (Uid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(AvaUrl);
          }
          if (Score != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Score);
          }
          if (Level != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Username.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Username);
          }
          if (Uid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(AvaUrl);
          }
          if (Score != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Score);
          }
          if (Level != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Username.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
          }
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (Score != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
          }
          if (Level != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Player other) {
          if (other == null) {
            return;
          }
          if (other.Username.Length != 0) {
            Username = other.Username;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.Score != 0) {
            Score = other.Score;
          }
          if (other.Level != 0) {
            Level = other.Level;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Username = input.ReadString();
                break;
              }
              case 18: {
                Uid = input.ReadString();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                AvaUrl = input.ReadString();
                break;
              }
              case 40: {
                Score = input.ReadInt32();
                break;
              }
              case 48: {
                Level = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Username = input.ReadString();
                break;
              }
              case 18: {
                Uid = input.ReadString();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                AvaUrl = input.ReadString();
                break;
              }
              case 40: {
                Score = input.ReadInt32();
                break;
              }
              case 48: {
                Level = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ResNetEnterMatchQueue : pb::IMessage<ResNetEnterMatchQueue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResNetEnterMatchQueue> _parser = new pb::MessageParser<ResNetEnterMatchQueue>(() => new ResNetEnterMatchQueue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResNetEnterMatchQueue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterMatchQueue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterMatchQueue(ResNetEnterMatchQueue other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterMatchQueue Clone() {
      return new ResNetEnterMatchQueue(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResNetEnterMatchQueue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResNetEnterMatchQueue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResNetEnterMatchQueue other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResError : pb::IMessage<ResError>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResError> _parser = new pb::MessageParser<ResError>(() => new ResError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResError(ResError other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResError Clone() {
      return new ResError(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResError other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResVersionAddr : pb::IMessage<ResVersionAddr>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResVersionAddr> _parser = new pb::MessageParser<ResVersionAddr>(() => new ResVersionAddr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResVersionAddr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResVersionAddr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResVersionAddr(ResVersionAddr other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResVersionAddr Clone() {
      return new ResVersionAddr(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResVersionAddr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResVersionAddr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResVersionAddr other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///临时 帧同步房间
  /// </summary>
  public sealed partial class ResNetEnterFRoom : pb::IMessage<ResNetEnterFRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResNetEnterFRoom> _parser = new pb::MessageParser<ResNetEnterFRoom>(() => new ResNetEnterFRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResNetEnterFRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterFRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterFRoom(ResNetEnterFRoom other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      frameTime_ = other.frameTime_;
      keyFrame_ = other.keyFrame_;
      randSeed_ = other.randSeed_;
      roomState_ = other.roomState_;
      players_ = other.players_.Clone();
      initCommands_ = other.initCommands_.Clone();
      doingCommands_ = other.doingCommands_.Clone();
      have_ = other.have_.Clone();
      serverId_ = other.serverId_;
      roomId_ = other.roomId_;
      curFrame_ = other.curFrame_;
      watchers_ = other.watchers_.Clone();
      config_ = other.config_;
      waitTime_ = other.waitTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterFRoom Clone() {
      return new ResNetEnterFRoom(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frameTime" field.</summary>
    public const int FrameTimeFieldNumber = 3;
    private int frameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrameTime {
      get { return frameTime_; }
      set {
        frameTime_ = value;
      }
    }

    /// <summary>Field number for the "keyFrame" field.</summary>
    public const int KeyFrameFieldNumber = 4;
    private int keyFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KeyFrame {
      get { return keyFrame_; }
      set {
        keyFrame_ = value;
      }
    }

    /// <summary>Field number for the "randSeed" field.</summary>
    public const int RandSeedFieldNumber = 5;
    private long randSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RandSeed {
      get { return randSeed_; }
      set {
        randSeed_ = value;
      }
    }

    /// <summary>Field number for the "roomState" field.</summary>
    public const int RoomStateFieldNumber = 6;
    private int roomState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomState {
      get { return roomState_; }
      set {
        roomState_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterFRoom.Types.PlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(58, global::Gopb.ResNetEnterFRoom.Types.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.PlayerInfo> players_ = new pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.PlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "initCommands" field.</summary>
    public const int InitCommandsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterFRoom.Types.FCommand> _repeated_initCommands_codec
        = pb::FieldCodec.ForMessage(66, global::Gopb.ResNetEnterFRoom.Types.FCommand.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.FCommand> initCommands_ = new pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.FCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.FCommand> InitCommands {
      get { return initCommands_; }
    }

    /// <summary>Field number for the "doingCommands" field.</summary>
    public const int DoingCommandsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterFRoom.Types.FCommand> _repeated_doingCommands_codec
        = pb::FieldCodec.ForMessage(74, global::Gopb.ResNetEnterFRoom.Types.FCommand.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.FCommand> doingCommands_ = new pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.FCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.FCommand> DoingCommands {
      get { return doingCommands_; }
    }

    /// <summary>Field number for the "have" field.</summary>
    public const int HaveFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_have_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Have {
      get { return have_; }
    }

    /// <summary>Field number for the "serverId" field.</summary>
    public const int ServerIdFieldNumber = 11;
    private string serverId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerId {
      get { return serverId_; }
      set {
        serverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 12;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "curFrame" field.</summary>
    public const int CurFrameFieldNumber = 13;
    private int curFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurFrame {
      get { return curFrame_; }
      set {
        curFrame_ = value;
      }
    }

    /// <summary>Field number for the "watchers" field.</summary>
    public const int WatchersFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterFRoom.Types.WatcherInfo> _repeated_watchers_codec
        = pb::FieldCodec.ForMessage(114, global::Gopb.ResNetEnterFRoom.Types.WatcherInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.WatcherInfo> watchers_ = new pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.WatcherInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterFRoom.Types.WatcherInfo> Watchers {
      get { return watchers_; }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 15;
    private string config_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Config {
      get { return config_; }
      set {
        config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "waitTime" field.</summary>
    public const int WaitTimeFieldNumber = 16;
    private long waitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResNetEnterFRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResNetEnterFRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (FrameTime != other.FrameTime) return false;
      if (KeyFrame != other.KeyFrame) return false;
      if (RandSeed != other.RandSeed) return false;
      if (RoomState != other.RoomState) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!initCommands_.Equals(other.initCommands_)) return false;
      if(!doingCommands_.Equals(other.doingCommands_)) return false;
      if(!have_.Equals(other.have_)) return false;
      if (ServerId != other.ServerId) return false;
      if (RoomId != other.RoomId) return false;
      if (CurFrame != other.CurFrame) return false;
      if(!watchers_.Equals(other.watchers_)) return false;
      if (Config != other.Config) return false;
      if (WaitTime != other.WaitTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (FrameTime != 0) hash ^= FrameTime.GetHashCode();
      if (KeyFrame != 0) hash ^= KeyFrame.GetHashCode();
      if (RandSeed != 0L) hash ^= RandSeed.GetHashCode();
      if (RoomState != 0) hash ^= RoomState.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= initCommands_.GetHashCode();
      hash ^= doingCommands_.GetHashCode();
      hash ^= have_.GetHashCode();
      if (ServerId.Length != 0) hash ^= ServerId.GetHashCode();
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (CurFrame != 0) hash ^= CurFrame.GetHashCode();
      hash ^= watchers_.GetHashCode();
      if (Config.Length != 0) hash ^= Config.GetHashCode();
      if (WaitTime != 0L) hash ^= WaitTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (FrameTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FrameTime);
      }
      if (KeyFrame != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(KeyFrame);
      }
      if (RandSeed != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RandSeed);
      }
      if (RoomState != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RoomState);
      }
      players_.WriteTo(output, _repeated_players_codec);
      initCommands_.WriteTo(output, _repeated_initCommands_codec);
      doingCommands_.WriteTo(output, _repeated_doingCommands_codec);
      have_.WriteTo(output, _repeated_have_codec);
      if (ServerId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ServerId);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RoomId);
      }
      if (CurFrame != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(CurFrame);
      }
      watchers_.WriteTo(output, _repeated_watchers_codec);
      if (Config.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Config);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(WaitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (FrameTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FrameTime);
      }
      if (KeyFrame != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(KeyFrame);
      }
      if (RandSeed != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RandSeed);
      }
      if (RoomState != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RoomState);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      initCommands_.WriteTo(ref output, _repeated_initCommands_codec);
      doingCommands_.WriteTo(ref output, _repeated_doingCommands_codec);
      have_.WriteTo(ref output, _repeated_have_codec);
      if (ServerId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ServerId);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RoomId);
      }
      if (CurFrame != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(CurFrame);
      }
      watchers_.WriteTo(ref output, _repeated_watchers_codec);
      if (Config.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Config);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(WaitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (FrameTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameTime);
      }
      if (KeyFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeyFrame);
      }
      if (RandSeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RandSeed);
      }
      if (RoomState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomState);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      size += initCommands_.CalculateSize(_repeated_initCommands_codec);
      size += doingCommands_.CalculateSize(_repeated_doingCommands_codec);
      size += have_.CalculateSize(_repeated_have_codec);
      if (ServerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerId);
      }
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (CurFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurFrame);
      }
      size += watchers_.CalculateSize(_repeated_watchers_codec);
      if (Config.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Config);
      }
      if (WaitTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(WaitTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResNetEnterFRoom other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.FrameTime != 0) {
        FrameTime = other.FrameTime;
      }
      if (other.KeyFrame != 0) {
        KeyFrame = other.KeyFrame;
      }
      if (other.RandSeed != 0L) {
        RandSeed = other.RandSeed;
      }
      if (other.RoomState != 0) {
        RoomState = other.RoomState;
      }
      players_.Add(other.players_);
      initCommands_.Add(other.initCommands_);
      doingCommands_.Add(other.doingCommands_);
      have_.Add(other.have_);
      if (other.ServerId.Length != 0) {
        ServerId = other.ServerId;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.CurFrame != 0) {
        CurFrame = other.CurFrame;
      }
      watchers_.Add(other.watchers_);
      if (other.Config.Length != 0) {
        Config = other.Config;
      }
      if (other.WaitTime != 0L) {
        WaitTime = other.WaitTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            FrameTime = input.ReadInt32();
            break;
          }
          case 32: {
            KeyFrame = input.ReadInt32();
            break;
          }
          case 40: {
            RandSeed = input.ReadInt64();
            break;
          }
          case 48: {
            RoomState = input.ReadInt32();
            break;
          }
          case 58: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 66: {
            initCommands_.AddEntriesFrom(input, _repeated_initCommands_codec);
            break;
          }
          case 74: {
            doingCommands_.AddEntriesFrom(input, _repeated_doingCommands_codec);
            break;
          }
          case 82: {
            have_.AddEntriesFrom(input, _repeated_have_codec);
            break;
          }
          case 90: {
            ServerId = input.ReadString();
            break;
          }
          case 98: {
            RoomId = input.ReadString();
            break;
          }
          case 104: {
            CurFrame = input.ReadInt32();
            break;
          }
          case 114: {
            watchers_.AddEntriesFrom(input, _repeated_watchers_codec);
            break;
          }
          case 122: {
            Config = input.ReadString();
            break;
          }
          case 128: {
            WaitTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            FrameTime = input.ReadInt32();
            break;
          }
          case 32: {
            KeyFrame = input.ReadInt32();
            break;
          }
          case 40: {
            RandSeed = input.ReadInt64();
            break;
          }
          case 48: {
            RoomState = input.ReadInt32();
            break;
          }
          case 58: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 66: {
            initCommands_.AddEntriesFrom(ref input, _repeated_initCommands_codec);
            break;
          }
          case 74: {
            doingCommands_.AddEntriesFrom(ref input, _repeated_doingCommands_codec);
            break;
          }
          case 82: {
            have_.AddEntriesFrom(ref input, _repeated_have_codec);
            break;
          }
          case 90: {
            ServerId = input.ReadString();
            break;
          }
          case 98: {
            RoomId = input.ReadString();
            break;
          }
          case 104: {
            CurFrame = input.ReadInt32();
            break;
          }
          case 114: {
            watchers_.AddEntriesFrom(ref input, _repeated_watchers_codec);
            break;
          }
          case 122: {
            Config = input.ReadString();
            break;
          }
          case 128: {
            WaitTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResNetEnterFRoom message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FCommand : pb::IMessage<FCommand>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FCommand> _parser = new pb::MessageParser<FCommand>(() => new FCommand());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FCommand> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterFRoom.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand(FCommand other) : this() {
          exFrame_ = other.exFrame_;
          epFrame_ = other.epFrame_;
          uid_ = other.uid_;
          ctype_ = other.ctype_;
          paramList_ = other.paramList_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand Clone() {
          return new FCommand(this);
        }

        /// <summary>Field number for the "exFrame" field.</summary>
        public const int ExFrameFieldNumber = 1;
        private int exFrame_;
        /// <summary>
        ///期望执行帧
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ExFrame {
          get { return exFrame_; }
          set {
            exFrame_ = value;
          }
        }

        /// <summary>Field number for the "epFrame" field.</summary>
        public const int EpFrameFieldNumber = 2;
        private int epFrame_;
        /// <summary>
        ///最终执行帧
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int EpFrame {
          get { return epFrame_; }
          set {
            epFrame_ = value;
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 3;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ctype" field.</summary>
        public const int CtypeFieldNumber = 4;
        private int ctype_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Ctype {
          get { return ctype_; }
          set {
            ctype_ = value;
          }
        }

        /// <summary>Field number for the "paramList" field.</summary>
        public const int ParamListFieldNumber = 5;
        private static readonly pb::FieldCodec<int> _repeated_paramList_codec
            = pb::FieldCodec.ForInt32(42);
        private readonly pbc::RepeatedField<int> paramList_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> ParamList {
          get { return paramList_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FCommand);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FCommand other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExFrame != other.ExFrame) return false;
          if (EpFrame != other.EpFrame) return false;
          if (Uid != other.Uid) return false;
          if (Ctype != other.Ctype) return false;
          if(!paramList_.Equals(other.paramList_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ExFrame != 0) hash ^= ExFrame.GetHashCode();
          if (EpFrame != 0) hash ^= EpFrame.GetHashCode();
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Ctype != 0) hash ^= Ctype.GetHashCode();
          hash ^= paramList_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ExFrame != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ExFrame);
          }
          if (EpFrame != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(EpFrame);
          }
          if (Uid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Uid);
          }
          if (Ctype != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Ctype);
          }
          paramList_.WriteTo(output, _repeated_paramList_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ExFrame != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ExFrame);
          }
          if (EpFrame != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(EpFrame);
          }
          if (Uid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Uid);
          }
          if (Ctype != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Ctype);
          }
          paramList_.WriteTo(ref output, _repeated_paramList_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ExFrame != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExFrame);
          }
          if (EpFrame != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(EpFrame);
          }
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Ctype != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ctype);
          }
          size += paramList_.CalculateSize(_repeated_paramList_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FCommand other) {
          if (other == null) {
            return;
          }
          if (other.ExFrame != 0) {
            ExFrame = other.ExFrame;
          }
          if (other.EpFrame != 0) {
            EpFrame = other.EpFrame;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Ctype != 0) {
            Ctype = other.Ctype;
          }
          paramList_.Add(other.paramList_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ExFrame = input.ReadInt32();
                break;
              }
              case 16: {
                EpFrame = input.ReadInt32();
                break;
              }
              case 26: {
                Uid = input.ReadString();
                break;
              }
              case 32: {
                Ctype = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                paramList_.AddEntriesFrom(input, _repeated_paramList_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ExFrame = input.ReadInt32();
                break;
              }
              case 16: {
                EpFrame = input.ReadInt32();
                break;
              }
              case 26: {
                Uid = input.ReadString();
                break;
              }
              case 32: {
                Ctype = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                paramList_.AddEntriesFrom(ref input, _repeated_paramList_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterFRoom.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          isReady_ = other.isReady_;
          have_ = other.have_.Clone();
          select_ = other.select_.Clone();
          gender_ = other.gender_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone() {
          return new PlayerInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isReady" field.</summary>
        public const int IsReadyFieldNumber = 4;
        private bool isReady_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsReady {
          get { return isReady_; }
          set {
            isReady_ = value;
          }
        }

        /// <summary>Field number for the "have" field.</summary>
        public const int HaveFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _repeated_have_codec
            = pb::FieldCodec.ForString(42);
        private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Have {
          get { return have_; }
        }

        /// <summary>Field number for the "select" field.</summary>
        public const int SelectFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_select_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Select {
          get { return select_; }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 7;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (IsReady != other.IsReady) return false;
          if(!have_.Equals(other.have_)) return false;
          if(!select_.Equals(other.select_)) return false;
          if (Gender != other.Gender) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (IsReady != false) hash ^= IsReady.GetHashCode();
          hash ^= have_.GetHashCode();
          hash ^= select_.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(output, _repeated_have_codec);
          select_.WriteTo(output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(ref output, _repeated_have_codec);
          select_.WriteTo(ref output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (IsReady != false) {
            size += 1 + 1;
          }
          size += have_.CalculateSize(_repeated_have_codec);
          size += select_.CalculateSize(_repeated_select_codec);
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.IsReady != false) {
            IsReady = other.IsReady;
          }
          have_.Add(other.have_);
          select_.Add(other.select_);
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(ref input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(ref input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class WatcherInfo : pb::IMessage<WatcherInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WatcherInfo> _parser = new pb::MessageParser<WatcherInfo>(() => new WatcherInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WatcherInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterFRoom.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo(WatcherInfo other) : this() {
          uid_ = other.uid_;
          tarUid_ = other.tarUid_;
          total_ = other.total_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo Clone() {
          return new WatcherInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tarUid" field.</summary>
        public const int TarUidFieldNumber = 2;
        private string tarUid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TarUid {
          get { return tarUid_; }
          set {
            tarUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 3;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 4;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 5;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WatcherInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WatcherInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (TarUid != other.TarUid) return false;
          if (Total != other.Total) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (TarUid.Length != 0) hash ^= TarUid.GetHashCode();
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Total != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Total);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AvaUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Total != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Total);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AvaUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (TarUid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TarUid);
          }
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WatcherInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.TarUid.Length != 0) {
            TarUid = other.TarUid;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Total = input.ReadInt32();
                break;
              }
              case 34: {
                Name = input.ReadString();
                break;
              }
              case 42: {
                AvaUrl = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Total = input.ReadInt32();
                break;
              }
              case 34: {
                Name = input.ReadString();
                break;
              }
              case 42: {
                AvaUrl = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ResNetCreateFRoom : pb::IMessage<ResNetCreateFRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResNetCreateFRoom> _parser = new pb::MessageParser<ResNetCreateFRoom>(() => new ResNetCreateFRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResNetCreateFRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetCreateFRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetCreateFRoom(ResNetCreateFRoom other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      roomState_ = other.roomState_;
      waitTime_ = other.waitTime_;
      qrUrl_ = other.qrUrl_;
      frameTime_ = other.frameTime_;
      keyFrame_ = other.keyFrame_;
      randSeed_ = other.randSeed_;
      initCommands_ = other.initCommands_.Clone();
      doingCommands_ = other.doingCommands_.Clone();
      star1Awards_ = other.star1Awards_.Clone();
      star2Awards_ = other.star2Awards_.Clone();
      star3Awards_ = other.star3Awards_.Clone();
      star3Players_ = other.star3Players_.Clone();
      players_ = other.players_.Clone();
      waitings_ = other.waitings_.Clone();
      watchers_ = other.watchers_.Clone();
      curFrame_ = other.curFrame_;
      roundId_ = other.roundId_;
      config_ = other.config_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetCreateFRoom Clone() {
      return new ResNetCreateFRoom(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomState" field.</summary>
    public const int RoomStateFieldNumber = 3;
    private int roomState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomState {
      get { return roomState_; }
      set {
        roomState_ = value;
      }
    }

    /// <summary>Field number for the "waitTime" field.</summary>
    public const int WaitTimeFieldNumber = 4;
    private long waitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    /// <summary>Field number for the "qrUrl" field.</summary>
    public const int QrUrlFieldNumber = 5;
    private string qrUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QrUrl {
      get { return qrUrl_; }
      set {
        qrUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frameTime" field.</summary>
    public const int FrameTimeFieldNumber = 6;
    private int frameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrameTime {
      get { return frameTime_; }
      set {
        frameTime_ = value;
      }
    }

    /// <summary>Field number for the "keyFrame" field.</summary>
    public const int KeyFrameFieldNumber = 7;
    private int keyFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KeyFrame {
      get { return keyFrame_; }
      set {
        keyFrame_ = value;
      }
    }

    /// <summary>Field number for the "randSeed" field.</summary>
    public const int RandSeedFieldNumber = 8;
    private long randSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RandSeed {
      get { return randSeed_; }
      set {
        randSeed_ = value;
      }
    }

    /// <summary>Field number for the "initCommands" field.</summary>
    public const int InitCommandsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.FCommand> _repeated_initCommands_codec
        = pb::FieldCodec.ForMessage(74, global::Gopb.ResNetCreateFRoom.Types.FCommand.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.FCommand> initCommands_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.FCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.FCommand> InitCommands {
      get { return initCommands_; }
    }

    /// <summary>Field number for the "doingCommands" field.</summary>
    public const int DoingCommandsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.FCommand> _repeated_doingCommands_codec
        = pb::FieldCodec.ForMessage(82, global::Gopb.ResNetCreateFRoom.Types.FCommand.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.FCommand> doingCommands_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.FCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.FCommand> DoingCommands {
      get { return doingCommands_; }
    }

    /// <summary>Field number for the "star1Awards" field.</summary>
    public const int Star1AwardsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.RoomAward> _repeated_star1Awards_codec
        = pb::FieldCodec.ForMessage(90, global::Gopb.ResNetCreateFRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward> star1Awards_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward> Star1Awards {
      get { return star1Awards_; }
    }

    /// <summary>Field number for the "star2Awards" field.</summary>
    public const int Star2AwardsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.RoomAward> _repeated_star2Awards_codec
        = pb::FieldCodec.ForMessage(98, global::Gopb.ResNetCreateFRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward> star2Awards_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward> Star2Awards {
      get { return star2Awards_; }
    }

    /// <summary>Field number for the "star3Awards" field.</summary>
    public const int Star3AwardsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.RoomAward> _repeated_star3Awards_codec
        = pb::FieldCodec.ForMessage(106, global::Gopb.ResNetCreateFRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward> star3Awards_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.RoomAward> Star3Awards {
      get { return star3Awards_; }
    }

    /// <summary>Field number for the "star3Players" field.</summary>
    public const int Star3PlayersFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.Star3Player> _repeated_star3Players_codec
        = pb::FieldCodec.ForMessage(122, global::Gopb.ResNetCreateFRoom.Types.Star3Player.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.Star3Player> star3Players_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.Star3Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.Star3Player> Star3Players {
      get { return star3Players_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.PlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(130, global::Gopb.ResNetCreateFRoom.Types.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.PlayerInfo> players_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.PlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "waitings" field.</summary>
    public const int WaitingsFieldNumber = 17;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.PlayerInfo> _repeated_waitings_codec
        = pb::FieldCodec.ForMessage(138, global::Gopb.ResNetCreateFRoom.Types.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.PlayerInfo> waitings_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.PlayerInfo> Waitings {
      get { return waitings_; }
    }

    /// <summary>Field number for the "watchers" field.</summary>
    public const int WatchersFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateFRoom.Types.WatcherInfo> _repeated_watchers_codec
        = pb::FieldCodec.ForMessage(146, global::Gopb.ResNetCreateFRoom.Types.WatcherInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.WatcherInfo> watchers_ = new pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.WatcherInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateFRoom.Types.WatcherInfo> Watchers {
      get { return watchers_; }
    }

    /// <summary>Field number for the "curFrame" field.</summary>
    public const int CurFrameFieldNumber = 19;
    private int curFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurFrame {
      get { return curFrame_; }
      set {
        curFrame_ = value;
      }
    }

    /// <summary>Field number for the "roundId" field.</summary>
    public const int RoundIdFieldNumber = 20;
    private long roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 21;
    private string config_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Config {
      get { return config_; }
      set {
        config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResNetCreateFRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResNetCreateFRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (RoomState != other.RoomState) return false;
      if (WaitTime != other.WaitTime) return false;
      if (QrUrl != other.QrUrl) return false;
      if (FrameTime != other.FrameTime) return false;
      if (KeyFrame != other.KeyFrame) return false;
      if (RandSeed != other.RandSeed) return false;
      if(!initCommands_.Equals(other.initCommands_)) return false;
      if(!doingCommands_.Equals(other.doingCommands_)) return false;
      if(!star1Awards_.Equals(other.star1Awards_)) return false;
      if(!star2Awards_.Equals(other.star2Awards_)) return false;
      if(!star3Awards_.Equals(other.star3Awards_)) return false;
      if(!star3Players_.Equals(other.star3Players_)) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!waitings_.Equals(other.waitings_)) return false;
      if(!watchers_.Equals(other.watchers_)) return false;
      if (CurFrame != other.CurFrame) return false;
      if (RoundId != other.RoundId) return false;
      if (Config != other.Config) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (RoomState != 0) hash ^= RoomState.GetHashCode();
      if (WaitTime != 0L) hash ^= WaitTime.GetHashCode();
      if (QrUrl.Length != 0) hash ^= QrUrl.GetHashCode();
      if (FrameTime != 0) hash ^= FrameTime.GetHashCode();
      if (KeyFrame != 0) hash ^= KeyFrame.GetHashCode();
      if (RandSeed != 0L) hash ^= RandSeed.GetHashCode();
      hash ^= initCommands_.GetHashCode();
      hash ^= doingCommands_.GetHashCode();
      hash ^= star1Awards_.GetHashCode();
      hash ^= star2Awards_.GetHashCode();
      hash ^= star3Awards_.GetHashCode();
      hash ^= star3Players_.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= waitings_.GetHashCode();
      hash ^= watchers_.GetHashCode();
      if (CurFrame != 0) hash ^= CurFrame.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (Config.Length != 0) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (RoomState != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomState);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(WaitTime);
      }
      if (QrUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(QrUrl);
      }
      if (FrameTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FrameTime);
      }
      if (KeyFrame != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(KeyFrame);
      }
      if (RandSeed != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(RandSeed);
      }
      initCommands_.WriteTo(output, _repeated_initCommands_codec);
      doingCommands_.WriteTo(output, _repeated_doingCommands_codec);
      star1Awards_.WriteTo(output, _repeated_star1Awards_codec);
      star2Awards_.WriteTo(output, _repeated_star2Awards_codec);
      star3Awards_.WriteTo(output, _repeated_star3Awards_codec);
      star3Players_.WriteTo(output, _repeated_star3Players_codec);
      players_.WriteTo(output, _repeated_players_codec);
      waitings_.WriteTo(output, _repeated_waitings_codec);
      watchers_.WriteTo(output, _repeated_watchers_codec);
      if (CurFrame != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CurFrame);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(RoundId);
      }
      if (Config.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (RoomState != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomState);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(WaitTime);
      }
      if (QrUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(QrUrl);
      }
      if (FrameTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FrameTime);
      }
      if (KeyFrame != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(KeyFrame);
      }
      if (RandSeed != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(RandSeed);
      }
      initCommands_.WriteTo(ref output, _repeated_initCommands_codec);
      doingCommands_.WriteTo(ref output, _repeated_doingCommands_codec);
      star1Awards_.WriteTo(ref output, _repeated_star1Awards_codec);
      star2Awards_.WriteTo(ref output, _repeated_star2Awards_codec);
      star3Awards_.WriteTo(ref output, _repeated_star3Awards_codec);
      star3Players_.WriteTo(ref output, _repeated_star3Players_codec);
      players_.WriteTo(ref output, _repeated_players_codec);
      waitings_.WriteTo(ref output, _repeated_waitings_codec);
      watchers_.WriteTo(ref output, _repeated_watchers_codec);
      if (CurFrame != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CurFrame);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(RoundId);
      }
      if (Config.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (RoomState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomState);
      }
      if (WaitTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WaitTime);
      }
      if (QrUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QrUrl);
      }
      if (FrameTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameTime);
      }
      if (KeyFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeyFrame);
      }
      if (RandSeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RandSeed);
      }
      size += initCommands_.CalculateSize(_repeated_initCommands_codec);
      size += doingCommands_.CalculateSize(_repeated_doingCommands_codec);
      size += star1Awards_.CalculateSize(_repeated_star1Awards_codec);
      size += star2Awards_.CalculateSize(_repeated_star2Awards_codec);
      size += star3Awards_.CalculateSize(_repeated_star3Awards_codec);
      size += star3Players_.CalculateSize(_repeated_star3Players_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      size += waitings_.CalculateSize(_repeated_waitings_codec);
      size += watchers_.CalculateSize(_repeated_watchers_codec);
      if (CurFrame != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurFrame);
      }
      if (RoundId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (Config.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResNetCreateFRoom other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.RoomState != 0) {
        RoomState = other.RoomState;
      }
      if (other.WaitTime != 0L) {
        WaitTime = other.WaitTime;
      }
      if (other.QrUrl.Length != 0) {
        QrUrl = other.QrUrl;
      }
      if (other.FrameTime != 0) {
        FrameTime = other.FrameTime;
      }
      if (other.KeyFrame != 0) {
        KeyFrame = other.KeyFrame;
      }
      if (other.RandSeed != 0L) {
        RandSeed = other.RandSeed;
      }
      initCommands_.Add(other.initCommands_);
      doingCommands_.Add(other.doingCommands_);
      star1Awards_.Add(other.star1Awards_);
      star2Awards_.Add(other.star2Awards_);
      star3Awards_.Add(other.star3Awards_);
      star3Players_.Add(other.star3Players_);
      players_.Add(other.players_);
      waitings_.Add(other.waitings_);
      watchers_.Add(other.watchers_);
      if (other.CurFrame != 0) {
        CurFrame = other.CurFrame;
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.Config.Length != 0) {
        Config = other.Config;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            RoomState = input.ReadInt32();
            break;
          }
          case 32: {
            WaitTime = input.ReadInt64();
            break;
          }
          case 42: {
            QrUrl = input.ReadString();
            break;
          }
          case 48: {
            FrameTime = input.ReadInt32();
            break;
          }
          case 56: {
            KeyFrame = input.ReadInt32();
            break;
          }
          case 64: {
            RandSeed = input.ReadInt64();
            break;
          }
          case 74: {
            initCommands_.AddEntriesFrom(input, _repeated_initCommands_codec);
            break;
          }
          case 82: {
            doingCommands_.AddEntriesFrom(input, _repeated_doingCommands_codec);
            break;
          }
          case 90: {
            star1Awards_.AddEntriesFrom(input, _repeated_star1Awards_codec);
            break;
          }
          case 98: {
            star2Awards_.AddEntriesFrom(input, _repeated_star2Awards_codec);
            break;
          }
          case 106: {
            star3Awards_.AddEntriesFrom(input, _repeated_star3Awards_codec);
            break;
          }
          case 122: {
            star3Players_.AddEntriesFrom(input, _repeated_star3Players_codec);
            break;
          }
          case 130: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 138: {
            waitings_.AddEntriesFrom(input, _repeated_waitings_codec);
            break;
          }
          case 146: {
            watchers_.AddEntriesFrom(input, _repeated_watchers_codec);
            break;
          }
          case 152: {
            CurFrame = input.ReadInt32();
            break;
          }
          case 160: {
            RoundId = input.ReadInt64();
            break;
          }
          case 170: {
            Config = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            RoomState = input.ReadInt32();
            break;
          }
          case 32: {
            WaitTime = input.ReadInt64();
            break;
          }
          case 42: {
            QrUrl = input.ReadString();
            break;
          }
          case 48: {
            FrameTime = input.ReadInt32();
            break;
          }
          case 56: {
            KeyFrame = input.ReadInt32();
            break;
          }
          case 64: {
            RandSeed = input.ReadInt64();
            break;
          }
          case 74: {
            initCommands_.AddEntriesFrom(ref input, _repeated_initCommands_codec);
            break;
          }
          case 82: {
            doingCommands_.AddEntriesFrom(ref input, _repeated_doingCommands_codec);
            break;
          }
          case 90: {
            star1Awards_.AddEntriesFrom(ref input, _repeated_star1Awards_codec);
            break;
          }
          case 98: {
            star2Awards_.AddEntriesFrom(ref input, _repeated_star2Awards_codec);
            break;
          }
          case 106: {
            star3Awards_.AddEntriesFrom(ref input, _repeated_star3Awards_codec);
            break;
          }
          case 122: {
            star3Players_.AddEntriesFrom(ref input, _repeated_star3Players_codec);
            break;
          }
          case 130: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 138: {
            waitings_.AddEntriesFrom(ref input, _repeated_waitings_codec);
            break;
          }
          case 146: {
            watchers_.AddEntriesFrom(ref input, _repeated_watchers_codec);
            break;
          }
          case 152: {
            CurFrame = input.ReadInt32();
            break;
          }
          case 160: {
            RoundId = input.ReadInt64();
            break;
          }
          case 170: {
            Config = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResNetCreateFRoom message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Rank : pb::IMessage<Rank>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rank> _parser = new pb::MessageParser<Rank>(() => new Rank());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Rank> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateFRoom.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rank() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rank(Rank other) : this() {
          nickName_ = other.nickName_;
          avatarUrl_ = other.avatarUrl_;
          gender_ = other.gender_;
          score_ = other.score_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rank Clone() {
          return new Rank(this);
        }

        /// <summary>Field number for the "nickName" field.</summary>
        public const int NickNameFieldNumber = 1;
        private string nickName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NickName {
          get { return nickName_; }
          set {
            nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatarUrl" field.</summary>
        public const int AvatarUrlFieldNumber = 2;
        private string avatarUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvatarUrl {
          get { return avatarUrl_; }
          set {
            avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 3;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        /// <summary>Field number for the "score" field.</summary>
        public const int ScoreFieldNumber = 4;
        private int score_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Score {
          get { return score_; }
          set {
            score_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Rank);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Rank other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NickName != other.NickName) return false;
          if (AvatarUrl != other.AvatarUrl) return false;
          if (Gender != other.Gender) return false;
          if (Score != other.Score) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NickName.Length != 0) hash ^= NickName.GetHashCode();
          if (AvatarUrl.Length != 0) hash ^= AvatarUrl.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (Score != 0) hash ^= Score.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NickName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NickName);
          }
          if (AvatarUrl.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AvatarUrl);
          }
          if (Gender != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Gender);
          }
          if (Score != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Score);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NickName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NickName);
          }
          if (AvatarUrl.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AvatarUrl);
          }
          if (Gender != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Gender);
          }
          if (Score != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Score);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NickName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
          }
          if (AvatarUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
          }
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (Score != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Rank other) {
          if (other == null) {
            return;
          }
          if (other.NickName.Length != 0) {
            NickName = other.NickName;
          }
          if (other.AvatarUrl.Length != 0) {
            AvatarUrl = other.AvatarUrl;
          }
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          if (other.Score != 0) {
            Score = other.Score;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                NickName = input.ReadString();
                break;
              }
              case 18: {
                AvatarUrl = input.ReadString();
                break;
              }
              case 24: {
                Gender = input.ReadInt32();
                break;
              }
              case 32: {
                Score = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                NickName = input.ReadString();
                break;
              }
              case 18: {
                AvatarUrl = input.ReadString();
                break;
              }
              case 24: {
                Gender = input.ReadInt32();
                break;
              }
              case 32: {
                Score = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Star3Player : pb::IMessage<Star3Player>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Star3Player> _parser = new pb::MessageParser<Star3Player>(() => new Star3Player());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Star3Player> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateFRoom.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Star3Player() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Star3Player(Star3Player other) : this() {
          nickName_ = other.nickName_;
          avatarUrl_ = other.avatarUrl_;
          itemName_ = other.itemName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Star3Player Clone() {
          return new Star3Player(this);
        }

        /// <summary>Field number for the "nickName" field.</summary>
        public const int NickNameFieldNumber = 1;
        private string nickName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NickName {
          get { return nickName_; }
          set {
            nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatarUrl" field.</summary>
        public const int AvatarUrlFieldNumber = 2;
        private string avatarUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvatarUrl {
          get { return avatarUrl_; }
          set {
            avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "itemName" field.</summary>
        public const int ItemNameFieldNumber = 3;
        private string itemName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ItemName {
          get { return itemName_; }
          set {
            itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Star3Player);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Star3Player other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NickName != other.NickName) return false;
          if (AvatarUrl != other.AvatarUrl) return false;
          if (ItemName != other.ItemName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NickName.Length != 0) hash ^= NickName.GetHashCode();
          if (AvatarUrl.Length != 0) hash ^= AvatarUrl.GetHashCode();
          if (ItemName.Length != 0) hash ^= ItemName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NickName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NickName);
          }
          if (AvatarUrl.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AvatarUrl);
          }
          if (ItemName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ItemName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NickName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NickName);
          }
          if (AvatarUrl.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AvatarUrl);
          }
          if (ItemName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ItemName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NickName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
          }
          if (AvatarUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
          }
          if (ItemName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Star3Player other) {
          if (other == null) {
            return;
          }
          if (other.NickName.Length != 0) {
            NickName = other.NickName;
          }
          if (other.AvatarUrl.Length != 0) {
            AvatarUrl = other.AvatarUrl;
          }
          if (other.ItemName.Length != 0) {
            ItemName = other.ItemName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                NickName = input.ReadString();
                break;
              }
              case 18: {
                AvatarUrl = input.ReadString();
                break;
              }
              case 26: {
                ItemName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                NickName = input.ReadString();
                break;
              }
              case 18: {
                AvatarUrl = input.ReadString();
                break;
              }
              case 26: {
                ItemName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class FCommand : pb::IMessage<FCommand>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FCommand> _parser = new pb::MessageParser<FCommand>(() => new FCommand());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FCommand> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateFRoom.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand(FCommand other) : this() {
          exFrame_ = other.exFrame_;
          epFrame_ = other.epFrame_;
          uid_ = other.uid_;
          ctype_ = other.ctype_;
          paramList_ = other.paramList_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FCommand Clone() {
          return new FCommand(this);
        }

        /// <summary>Field number for the "exFrame" field.</summary>
        public const int ExFrameFieldNumber = 1;
        private int exFrame_;
        /// <summary>
        ///期望执行帧
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ExFrame {
          get { return exFrame_; }
          set {
            exFrame_ = value;
          }
        }

        /// <summary>Field number for the "epFrame" field.</summary>
        public const int EpFrameFieldNumber = 2;
        private int epFrame_;
        /// <summary>
        ///最终执行帧
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int EpFrame {
          get { return epFrame_; }
          set {
            epFrame_ = value;
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 3;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ctype" field.</summary>
        public const int CtypeFieldNumber = 4;
        private int ctype_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Ctype {
          get { return ctype_; }
          set {
            ctype_ = value;
          }
        }

        /// <summary>Field number for the "paramList" field.</summary>
        public const int ParamListFieldNumber = 5;
        private static readonly pb::FieldCodec<int> _repeated_paramList_codec
            = pb::FieldCodec.ForInt32(42);
        private readonly pbc::RepeatedField<int> paramList_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> ParamList {
          get { return paramList_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FCommand);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FCommand other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExFrame != other.ExFrame) return false;
          if (EpFrame != other.EpFrame) return false;
          if (Uid != other.Uid) return false;
          if (Ctype != other.Ctype) return false;
          if(!paramList_.Equals(other.paramList_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ExFrame != 0) hash ^= ExFrame.GetHashCode();
          if (EpFrame != 0) hash ^= EpFrame.GetHashCode();
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Ctype != 0) hash ^= Ctype.GetHashCode();
          hash ^= paramList_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ExFrame != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ExFrame);
          }
          if (EpFrame != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(EpFrame);
          }
          if (Uid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Uid);
          }
          if (Ctype != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Ctype);
          }
          paramList_.WriteTo(output, _repeated_paramList_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ExFrame != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ExFrame);
          }
          if (EpFrame != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(EpFrame);
          }
          if (Uid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Uid);
          }
          if (Ctype != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Ctype);
          }
          paramList_.WriteTo(ref output, _repeated_paramList_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ExFrame != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExFrame);
          }
          if (EpFrame != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(EpFrame);
          }
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Ctype != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ctype);
          }
          size += paramList_.CalculateSize(_repeated_paramList_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FCommand other) {
          if (other == null) {
            return;
          }
          if (other.ExFrame != 0) {
            ExFrame = other.ExFrame;
          }
          if (other.EpFrame != 0) {
            EpFrame = other.EpFrame;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Ctype != 0) {
            Ctype = other.Ctype;
          }
          paramList_.Add(other.paramList_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ExFrame = input.ReadInt32();
                break;
              }
              case 16: {
                EpFrame = input.ReadInt32();
                break;
              }
              case 26: {
                Uid = input.ReadString();
                break;
              }
              case 32: {
                Ctype = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                paramList_.AddEntriesFrom(input, _repeated_paramList_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ExFrame = input.ReadInt32();
                break;
              }
              case 16: {
                EpFrame = input.ReadInt32();
                break;
              }
              case 26: {
                Uid = input.ReadString();
                break;
              }
              case 32: {
                Ctype = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                paramList_.AddEntriesFrom(ref input, _repeated_paramList_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateFRoom.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          isReady_ = other.isReady_;
          have_ = other.have_.Clone();
          select_ = other.select_.Clone();
          gender_ = other.gender_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone() {
          return new PlayerInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isReady" field.</summary>
        public const int IsReadyFieldNumber = 4;
        private bool isReady_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsReady {
          get { return isReady_; }
          set {
            isReady_ = value;
          }
        }

        /// <summary>Field number for the "have" field.</summary>
        public const int HaveFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _repeated_have_codec
            = pb::FieldCodec.ForString(42);
        private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Have {
          get { return have_; }
        }

        /// <summary>Field number for the "select" field.</summary>
        public const int SelectFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_select_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Select {
          get { return select_; }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 7;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (IsReady != other.IsReady) return false;
          if(!have_.Equals(other.have_)) return false;
          if(!select_.Equals(other.select_)) return false;
          if (Gender != other.Gender) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (IsReady != false) hash ^= IsReady.GetHashCode();
          hash ^= have_.GetHashCode();
          hash ^= select_.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(output, _repeated_have_codec);
          select_.WriteTo(output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(ref output, _repeated_have_codec);
          select_.WriteTo(ref output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (IsReady != false) {
            size += 1 + 1;
          }
          size += have_.CalculateSize(_repeated_have_codec);
          size += select_.CalculateSize(_repeated_select_codec);
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.IsReady != false) {
            IsReady = other.IsReady;
          }
          have_.Add(other.have_);
          select_.Add(other.select_);
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(ref input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(ref input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class WatcherInfo : pb::IMessage<WatcherInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WatcherInfo> _parser = new pb::MessageParser<WatcherInfo>(() => new WatcherInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WatcherInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateFRoom.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo(WatcherInfo other) : this() {
          uid_ = other.uid_;
          tarUid_ = other.tarUid_;
          total_ = other.total_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo Clone() {
          return new WatcherInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tarUid" field.</summary>
        public const int TarUidFieldNumber = 2;
        private string tarUid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TarUid {
          get { return tarUid_; }
          set {
            tarUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 3;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 4;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 5;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WatcherInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WatcherInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (TarUid != other.TarUid) return false;
          if (Total != other.Total) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (TarUid.Length != 0) hash ^= TarUid.GetHashCode();
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Total != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Total);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AvaUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Total != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Total);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AvaUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (TarUid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TarUid);
          }
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WatcherInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.TarUid.Length != 0) {
            TarUid = other.TarUid;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Total = input.ReadInt32();
                break;
              }
              case 34: {
                Name = input.ReadString();
                break;
              }
              case 42: {
                AvaUrl = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Total = input.ReadInt32();
                break;
              }
              case 34: {
                Name = input.ReadString();
                break;
              }
              case 42: {
                AvaUrl = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RoomAward : pb::IMessage<RoomAward>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoomAward> _parser = new pb::MessageParser<RoomAward>(() => new RoomAward());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoomAward> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateFRoom.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward(RoomAward other) : this() {
          id_ = other.id_;
          couponName_ = other.couponName_;
          couponImg_ = other.couponImg_;
          couponDesc_ = other.couponDesc_;
          weight_ = other.weight_;
          stock_ = other.stock_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward Clone() {
          return new RoomAward(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponName" field.</summary>
        public const int CouponNameFieldNumber = 2;
        private string couponName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponName {
          get { return couponName_; }
          set {
            couponName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponImg" field.</summary>
        public const int CouponImgFieldNumber = 3;
        private string couponImg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponImg {
          get { return couponImg_; }
          set {
            couponImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponDesc" field.</summary>
        public const int CouponDescFieldNumber = 4;
        private string couponDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponDesc {
          get { return couponDesc_; }
          set {
            couponDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "weight" field.</summary>
        public const int WeightFieldNumber = 5;
        private int weight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Weight {
          get { return weight_; }
          set {
            weight_ = value;
          }
        }

        /// <summary>Field number for the "stock" field.</summary>
        public const int StockFieldNumber = 6;
        private int stock_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Stock {
          get { return stock_; }
          set {
            stock_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoomAward);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoomAward other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (CouponName != other.CouponName) return false;
          if (CouponImg != other.CouponImg) return false;
          if (CouponDesc != other.CouponDesc) return false;
          if (Weight != other.Weight) return false;
          if (Stock != other.Stock) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (CouponName.Length != 0) hash ^= CouponName.GetHashCode();
          if (CouponImg.Length != 0) hash ^= CouponImg.GetHashCode();
          if (CouponDesc.Length != 0) hash ^= CouponDesc.GetHashCode();
          if (Weight != 0) hash ^= Weight.GetHashCode();
          if (Stock != 0) hash ^= Stock.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CouponName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CouponName);
          }
          if (CouponImg.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CouponDesc);
          }
          if (Weight != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Weight);
          }
          if (Stock != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Stock);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CouponName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CouponName);
          }
          if (CouponImg.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CouponDesc);
          }
          if (Weight != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Weight);
          }
          if (Stock != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Stock);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (CouponName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponName);
          }
          if (CouponImg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponDesc);
          }
          if (Weight != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
          }
          if (Stock != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stock);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoomAward other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.CouponName.Length != 0) {
            CouponName = other.CouponName;
          }
          if (other.CouponImg.Length != 0) {
            CouponImg = other.CouponImg;
          }
          if (other.CouponDesc.Length != 0) {
            CouponDesc = other.CouponDesc;
          }
          if (other.Weight != 0) {
            Weight = other.Weight;
          }
          if (other.Stock != 0) {
            Stock = other.Stock;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                CouponName = input.ReadString();
                break;
              }
              case 26: {
                CouponImg = input.ReadString();
                break;
              }
              case 34: {
                CouponDesc = input.ReadString();
                break;
              }
              case 40: {
                Weight = input.ReadInt32();
                break;
              }
              case 48: {
                Stock = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                CouponName = input.ReadString();
                break;
              }
              case 26: {
                CouponImg = input.ReadString();
                break;
              }
              case 34: {
                CouponDesc = input.ReadString();
                break;
              }
              case 40: {
                Weight = input.ReadInt32();
                break;
              }
              case 48: {
                Stock = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///大屏创建状态同步房间
  /// </summary>
  public sealed partial class ResNetCreateSRoom : pb::IMessage<ResNetCreateSRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResNetCreateSRoom> _parser = new pb::MessageParser<ResNetCreateSRoom>(() => new ResNetCreateSRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResNetCreateSRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetCreateSRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetCreateSRoom(ResNetCreateSRoom other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      serverId_ = other.serverId_;
      roomId_ = other.roomId_;
      qrUrl_ = other.qrUrl_;
      roomState_ = other.roomState_;
      waitTime_ = other.waitTime_;
      runTime_ = other.runTime_;
      star1Awards_ = other.star1Awards_.Clone();
      star2Awards_ = other.star2Awards_.Clone();
      star3Awards_ = other.star3Awards_.Clone();
      star3Players_ = other.star3Players_.Clone();
      players_ = other.players_.Clone();
      waitings_ = other.waitings_.Clone();
      watchers_ = other.watchers_.Clone();
      syncStates_ = other.syncStates_.Clone();
      roundId_ = other.roundId_;
      config_ = other.config_;
      randSeed_ = other.randSeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetCreateSRoom Clone() {
      return new ResNetCreateSRoom(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverId" field.</summary>
    public const int ServerIdFieldNumber = 3;
    private string serverId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerId {
      get { return serverId_; }
      set {
        serverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 4;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qrUrl" field.</summary>
    public const int QrUrlFieldNumber = 5;
    private string qrUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QrUrl {
      get { return qrUrl_; }
      set {
        qrUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomState" field.</summary>
    public const int RoomStateFieldNumber = 6;
    private int roomState_;
    /// <summary>
    /// 1准备阶段2已经准备3游戏中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomState {
      get { return roomState_; }
      set {
        roomState_ = value;
      }
    }

    /// <summary>Field number for the "waitTime" field.</summary>
    public const int WaitTimeFieldNumber = 7;
    private long waitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    /// <summary>Field number for the "runTime" field.</summary>
    public const int RunTimeFieldNumber = 8;
    private long runTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RunTime {
      get { return runTime_; }
      set {
        runTime_ = value;
      }
    }

    /// <summary>Field number for the "star1Awards" field.</summary>
    public const int Star1AwardsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateSRoom.Types.RoomAward> _repeated_star1Awards_codec
        = pb::FieldCodec.ForMessage(74, global::Gopb.ResNetCreateSRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward> star1Awards_ = new pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward> Star1Awards {
      get { return star1Awards_; }
    }

    /// <summary>Field number for the "star2Awards" field.</summary>
    public const int Star2AwardsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateSRoom.Types.RoomAward> _repeated_star2Awards_codec
        = pb::FieldCodec.ForMessage(82, global::Gopb.ResNetCreateSRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward> star2Awards_ = new pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward> Star2Awards {
      get { return star2Awards_; }
    }

    /// <summary>Field number for the "star3Awards" field.</summary>
    public const int Star3AwardsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateSRoom.Types.RoomAward> _repeated_star3Awards_codec
        = pb::FieldCodec.ForMessage(90, global::Gopb.ResNetCreateSRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward> star3Awards_ = new pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomAward> Star3Awards {
      get { return star3Awards_; }
    }

    /// <summary>Field number for the "star3Players" field.</summary>
    public const int Star3PlayersFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateSRoom.Types.Star3Player> _repeated_star3Players_codec
        = pb::FieldCodec.ForMessage(98, global::Gopb.ResNetCreateSRoom.Types.Star3Player.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.Star3Player> star3Players_ = new pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.Star3Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.Star3Player> Star3Players {
      get { return star3Players_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateSRoom.Types.PlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(106, global::Gopb.ResNetCreateSRoom.Types.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.PlayerInfo> players_ = new pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.PlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "waitings" field.</summary>
    public const int WaitingsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateSRoom.Types.PlayerInfo> _repeated_waitings_codec
        = pb::FieldCodec.ForMessage(114, global::Gopb.ResNetCreateSRoom.Types.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.PlayerInfo> waitings_ = new pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.PlayerInfo> Waitings {
      get { return waitings_; }
    }

    /// <summary>Field number for the "watchers" field.</summary>
    public const int WatchersFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateSRoom.Types.WatcherInfo> _repeated_watchers_codec
        = pb::FieldCodec.ForMessage(122, global::Gopb.ResNetCreateSRoom.Types.WatcherInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.WatcherInfo> watchers_ = new pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.WatcherInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.WatcherInfo> Watchers {
      get { return watchers_; }
    }

    /// <summary>Field number for the "syncStates" field.</summary>
    public const int SyncStatesFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Gopb.ResNetCreateSRoom.Types.RoomState> _repeated_syncStates_codec
        = pb::FieldCodec.ForMessage(130, global::Gopb.ResNetCreateSRoom.Types.RoomState.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomState> syncStates_ = new pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetCreateSRoom.Types.RoomState> SyncStates {
      get { return syncStates_; }
    }

    /// <summary>Field number for the "roundId" field.</summary>
    public const int RoundIdFieldNumber = 17;
    private long roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 18;
    private string config_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Config {
      get { return config_; }
      set {
        config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "randSeed" field.</summary>
    public const int RandSeedFieldNumber = 19;
    private long randSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RandSeed {
      get { return randSeed_; }
      set {
        randSeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResNetCreateSRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResNetCreateSRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (ServerId != other.ServerId) return false;
      if (RoomId != other.RoomId) return false;
      if (QrUrl != other.QrUrl) return false;
      if (RoomState != other.RoomState) return false;
      if (WaitTime != other.WaitTime) return false;
      if (RunTime != other.RunTime) return false;
      if(!star1Awards_.Equals(other.star1Awards_)) return false;
      if(!star2Awards_.Equals(other.star2Awards_)) return false;
      if(!star3Awards_.Equals(other.star3Awards_)) return false;
      if(!star3Players_.Equals(other.star3Players_)) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!waitings_.Equals(other.waitings_)) return false;
      if(!watchers_.Equals(other.watchers_)) return false;
      if(!syncStates_.Equals(other.syncStates_)) return false;
      if (RoundId != other.RoundId) return false;
      if (Config != other.Config) return false;
      if (RandSeed != other.RandSeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (ServerId.Length != 0) hash ^= ServerId.GetHashCode();
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (QrUrl.Length != 0) hash ^= QrUrl.GetHashCode();
      if (RoomState != 0) hash ^= RoomState.GetHashCode();
      if (WaitTime != 0L) hash ^= WaitTime.GetHashCode();
      if (RunTime != 0L) hash ^= RunTime.GetHashCode();
      hash ^= star1Awards_.GetHashCode();
      hash ^= star2Awards_.GetHashCode();
      hash ^= star3Awards_.GetHashCode();
      hash ^= star3Players_.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= waitings_.GetHashCode();
      hash ^= watchers_.GetHashCode();
      hash ^= syncStates_.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (Config.Length != 0) hash ^= Config.GetHashCode();
      if (RandSeed != 0L) hash ^= RandSeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (ServerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServerId);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomId);
      }
      if (QrUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(QrUrl);
      }
      if (RoomState != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RoomState);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(WaitTime);
      }
      if (RunTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(RunTime);
      }
      star1Awards_.WriteTo(output, _repeated_star1Awards_codec);
      star2Awards_.WriteTo(output, _repeated_star2Awards_codec);
      star3Awards_.WriteTo(output, _repeated_star3Awards_codec);
      star3Players_.WriteTo(output, _repeated_star3Players_codec);
      players_.WriteTo(output, _repeated_players_codec);
      waitings_.WriteTo(output, _repeated_waitings_codec);
      watchers_.WriteTo(output, _repeated_watchers_codec);
      syncStates_.WriteTo(output, _repeated_syncStates_codec);
      if (RoundId != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(RoundId);
      }
      if (Config.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Config);
      }
      if (RandSeed != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(RandSeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (ServerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServerId);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomId);
      }
      if (QrUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(QrUrl);
      }
      if (RoomState != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RoomState);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(WaitTime);
      }
      if (RunTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(RunTime);
      }
      star1Awards_.WriteTo(ref output, _repeated_star1Awards_codec);
      star2Awards_.WriteTo(ref output, _repeated_star2Awards_codec);
      star3Awards_.WriteTo(ref output, _repeated_star3Awards_codec);
      star3Players_.WriteTo(ref output, _repeated_star3Players_codec);
      players_.WriteTo(ref output, _repeated_players_codec);
      waitings_.WriteTo(ref output, _repeated_waitings_codec);
      watchers_.WriteTo(ref output, _repeated_watchers_codec);
      syncStates_.WriteTo(ref output, _repeated_syncStates_codec);
      if (RoundId != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(RoundId);
      }
      if (Config.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Config);
      }
      if (RandSeed != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(RandSeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (ServerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerId);
      }
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (QrUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QrUrl);
      }
      if (RoomState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomState);
      }
      if (WaitTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WaitTime);
      }
      if (RunTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RunTime);
      }
      size += star1Awards_.CalculateSize(_repeated_star1Awards_codec);
      size += star2Awards_.CalculateSize(_repeated_star2Awards_codec);
      size += star3Awards_.CalculateSize(_repeated_star3Awards_codec);
      size += star3Players_.CalculateSize(_repeated_star3Players_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      size += waitings_.CalculateSize(_repeated_waitings_codec);
      size += watchers_.CalculateSize(_repeated_watchers_codec);
      size += syncStates_.CalculateSize(_repeated_syncStates_codec);
      if (RoundId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (Config.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Config);
      }
      if (RandSeed != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RandSeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResNetCreateSRoom other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.ServerId.Length != 0) {
        ServerId = other.ServerId;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.QrUrl.Length != 0) {
        QrUrl = other.QrUrl;
      }
      if (other.RoomState != 0) {
        RoomState = other.RoomState;
      }
      if (other.WaitTime != 0L) {
        WaitTime = other.WaitTime;
      }
      if (other.RunTime != 0L) {
        RunTime = other.RunTime;
      }
      star1Awards_.Add(other.star1Awards_);
      star2Awards_.Add(other.star2Awards_);
      star3Awards_.Add(other.star3Awards_);
      star3Players_.Add(other.star3Players_);
      players_.Add(other.players_);
      waitings_.Add(other.waitings_);
      watchers_.Add(other.watchers_);
      syncStates_.Add(other.syncStates_);
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.Config.Length != 0) {
        Config = other.Config;
      }
      if (other.RandSeed != 0L) {
        RandSeed = other.RandSeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            ServerId = input.ReadString();
            break;
          }
          case 34: {
            RoomId = input.ReadString();
            break;
          }
          case 42: {
            QrUrl = input.ReadString();
            break;
          }
          case 48: {
            RoomState = input.ReadInt32();
            break;
          }
          case 56: {
            WaitTime = input.ReadInt64();
            break;
          }
          case 64: {
            RunTime = input.ReadInt64();
            break;
          }
          case 74: {
            star1Awards_.AddEntriesFrom(input, _repeated_star1Awards_codec);
            break;
          }
          case 82: {
            star2Awards_.AddEntriesFrom(input, _repeated_star2Awards_codec);
            break;
          }
          case 90: {
            star3Awards_.AddEntriesFrom(input, _repeated_star3Awards_codec);
            break;
          }
          case 98: {
            star3Players_.AddEntriesFrom(input, _repeated_star3Players_codec);
            break;
          }
          case 106: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 114: {
            waitings_.AddEntriesFrom(input, _repeated_waitings_codec);
            break;
          }
          case 122: {
            watchers_.AddEntriesFrom(input, _repeated_watchers_codec);
            break;
          }
          case 130: {
            syncStates_.AddEntriesFrom(input, _repeated_syncStates_codec);
            break;
          }
          case 136: {
            RoundId = input.ReadInt64();
            break;
          }
          case 146: {
            Config = input.ReadString();
            break;
          }
          case 152: {
            RandSeed = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            ServerId = input.ReadString();
            break;
          }
          case 34: {
            RoomId = input.ReadString();
            break;
          }
          case 42: {
            QrUrl = input.ReadString();
            break;
          }
          case 48: {
            RoomState = input.ReadInt32();
            break;
          }
          case 56: {
            WaitTime = input.ReadInt64();
            break;
          }
          case 64: {
            RunTime = input.ReadInt64();
            break;
          }
          case 74: {
            star1Awards_.AddEntriesFrom(ref input, _repeated_star1Awards_codec);
            break;
          }
          case 82: {
            star2Awards_.AddEntriesFrom(ref input, _repeated_star2Awards_codec);
            break;
          }
          case 90: {
            star3Awards_.AddEntriesFrom(ref input, _repeated_star3Awards_codec);
            break;
          }
          case 98: {
            star3Players_.AddEntriesFrom(ref input, _repeated_star3Players_codec);
            break;
          }
          case 106: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 114: {
            waitings_.AddEntriesFrom(ref input, _repeated_waitings_codec);
            break;
          }
          case 122: {
            watchers_.AddEntriesFrom(ref input, _repeated_watchers_codec);
            break;
          }
          case 130: {
            syncStates_.AddEntriesFrom(ref input, _repeated_syncStates_codec);
            break;
          }
          case 136: {
            RoundId = input.ReadInt64();
            break;
          }
          case 146: {
            Config = input.ReadString();
            break;
          }
          case 152: {
            RandSeed = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResNetCreateSRoom message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class RoomState : pb::IMessage<RoomState>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoomState> _parser = new pb::MessageParser<RoomState>(() => new RoomState());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoomState> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateSRoom.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState(RoomState other) : this() {
          uid_ = other.uid_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState Clone() {
          return new RoomState(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 2;
        private pb::ByteString data_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoomState);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoomState other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoomState other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateSRoom.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          isReady_ = other.isReady_;
          have_ = other.have_.Clone();
          select_ = other.select_.Clone();
          gender_ = other.gender_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone() {
          return new PlayerInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isReady" field.</summary>
        public const int IsReadyFieldNumber = 4;
        private bool isReady_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsReady {
          get { return isReady_; }
          set {
            isReady_ = value;
          }
        }

        /// <summary>Field number for the "have" field.</summary>
        public const int HaveFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _repeated_have_codec
            = pb::FieldCodec.ForString(42);
        private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Have {
          get { return have_; }
        }

        /// <summary>Field number for the "select" field.</summary>
        public const int SelectFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_select_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Select {
          get { return select_; }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 7;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (IsReady != other.IsReady) return false;
          if(!have_.Equals(other.have_)) return false;
          if(!select_.Equals(other.select_)) return false;
          if (Gender != other.Gender) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (IsReady != false) hash ^= IsReady.GetHashCode();
          hash ^= have_.GetHashCode();
          hash ^= select_.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(output, _repeated_have_codec);
          select_.WriteTo(output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(ref output, _repeated_have_codec);
          select_.WriteTo(ref output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (IsReady != false) {
            size += 1 + 1;
          }
          size += have_.CalculateSize(_repeated_have_codec);
          size += select_.CalculateSize(_repeated_select_codec);
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.IsReady != false) {
            IsReady = other.IsReady;
          }
          have_.Add(other.have_);
          select_.Add(other.select_);
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(ref input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(ref input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class WatcherInfo : pb::IMessage<WatcherInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WatcherInfo> _parser = new pb::MessageParser<WatcherInfo>(() => new WatcherInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WatcherInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateSRoom.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo(WatcherInfo other) : this() {
          uid_ = other.uid_;
          tarUid_ = other.tarUid_;
          total_ = other.total_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo Clone() {
          return new WatcherInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tarUid" field.</summary>
        public const int TarUidFieldNumber = 2;
        private string tarUid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TarUid {
          get { return tarUid_; }
          set {
            tarUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 3;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 4;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 5;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WatcherInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WatcherInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (TarUid != other.TarUid) return false;
          if (Total != other.Total) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (TarUid.Length != 0) hash ^= TarUid.GetHashCode();
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Total != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Total);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AvaUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Total != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Total);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AvaUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (TarUid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TarUid);
          }
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WatcherInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.TarUid.Length != 0) {
            TarUid = other.TarUid;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Total = input.ReadInt32();
                break;
              }
              case 34: {
                Name = input.ReadString();
                break;
              }
              case 42: {
                AvaUrl = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Total = input.ReadInt32();
                break;
              }
              case 34: {
                Name = input.ReadString();
                break;
              }
              case 42: {
                AvaUrl = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RoomAward : pb::IMessage<RoomAward>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoomAward> _parser = new pb::MessageParser<RoomAward>(() => new RoomAward());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoomAward> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateSRoom.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward(RoomAward other) : this() {
          id_ = other.id_;
          couponName_ = other.couponName_;
          couponImg_ = other.couponImg_;
          couponDesc_ = other.couponDesc_;
          weight_ = other.weight_;
          stock_ = other.stock_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward Clone() {
          return new RoomAward(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponName" field.</summary>
        public const int CouponNameFieldNumber = 2;
        private string couponName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponName {
          get { return couponName_; }
          set {
            couponName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponImg" field.</summary>
        public const int CouponImgFieldNumber = 3;
        private string couponImg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponImg {
          get { return couponImg_; }
          set {
            couponImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponDesc" field.</summary>
        public const int CouponDescFieldNumber = 4;
        private string couponDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponDesc {
          get { return couponDesc_; }
          set {
            couponDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "weight" field.</summary>
        public const int WeightFieldNumber = 5;
        private int weight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Weight {
          get { return weight_; }
          set {
            weight_ = value;
          }
        }

        /// <summary>Field number for the "stock" field.</summary>
        public const int StockFieldNumber = 6;
        private int stock_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Stock {
          get { return stock_; }
          set {
            stock_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoomAward);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoomAward other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (CouponName != other.CouponName) return false;
          if (CouponImg != other.CouponImg) return false;
          if (CouponDesc != other.CouponDesc) return false;
          if (Weight != other.Weight) return false;
          if (Stock != other.Stock) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (CouponName.Length != 0) hash ^= CouponName.GetHashCode();
          if (CouponImg.Length != 0) hash ^= CouponImg.GetHashCode();
          if (CouponDesc.Length != 0) hash ^= CouponDesc.GetHashCode();
          if (Weight != 0) hash ^= Weight.GetHashCode();
          if (Stock != 0) hash ^= Stock.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CouponName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CouponName);
          }
          if (CouponImg.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CouponDesc);
          }
          if (Weight != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Weight);
          }
          if (Stock != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Stock);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CouponName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CouponName);
          }
          if (CouponImg.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CouponDesc);
          }
          if (Weight != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Weight);
          }
          if (Stock != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Stock);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (CouponName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponName);
          }
          if (CouponImg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponDesc);
          }
          if (Weight != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
          }
          if (Stock != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stock);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoomAward other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.CouponName.Length != 0) {
            CouponName = other.CouponName;
          }
          if (other.CouponImg.Length != 0) {
            CouponImg = other.CouponImg;
          }
          if (other.CouponDesc.Length != 0) {
            CouponDesc = other.CouponDesc;
          }
          if (other.Weight != 0) {
            Weight = other.Weight;
          }
          if (other.Stock != 0) {
            Stock = other.Stock;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                CouponName = input.ReadString();
                break;
              }
              case 26: {
                CouponImg = input.ReadString();
                break;
              }
              case 34: {
                CouponDesc = input.ReadString();
                break;
              }
              case 40: {
                Weight = input.ReadInt32();
                break;
              }
              case 48: {
                Stock = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                CouponName = input.ReadString();
                break;
              }
              case 26: {
                CouponImg = input.ReadString();
                break;
              }
              case 34: {
                CouponDesc = input.ReadString();
                break;
              }
              case 40: {
                Weight = input.ReadInt32();
                break;
              }
              case 48: {
                Stock = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Star3Player : pb::IMessage<Star3Player>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Star3Player> _parser = new pb::MessageParser<Star3Player>(() => new Star3Player());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Star3Player> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetCreateSRoom.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Star3Player() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Star3Player(Star3Player other) : this() {
          nickName_ = other.nickName_;
          avatarUrl_ = other.avatarUrl_;
          itemName_ = other.itemName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Star3Player Clone() {
          return new Star3Player(this);
        }

        /// <summary>Field number for the "nickName" field.</summary>
        public const int NickNameFieldNumber = 1;
        private string nickName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NickName {
          get { return nickName_; }
          set {
            nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatarUrl" field.</summary>
        public const int AvatarUrlFieldNumber = 2;
        private string avatarUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvatarUrl {
          get { return avatarUrl_; }
          set {
            avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "itemName" field.</summary>
        public const int ItemNameFieldNumber = 3;
        private string itemName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ItemName {
          get { return itemName_; }
          set {
            itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Star3Player);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Star3Player other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NickName != other.NickName) return false;
          if (AvatarUrl != other.AvatarUrl) return false;
          if (ItemName != other.ItemName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NickName.Length != 0) hash ^= NickName.GetHashCode();
          if (AvatarUrl.Length != 0) hash ^= AvatarUrl.GetHashCode();
          if (ItemName.Length != 0) hash ^= ItemName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NickName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NickName);
          }
          if (AvatarUrl.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AvatarUrl);
          }
          if (ItemName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ItemName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NickName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NickName);
          }
          if (AvatarUrl.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AvatarUrl);
          }
          if (ItemName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ItemName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NickName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
          }
          if (AvatarUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
          }
          if (ItemName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Star3Player other) {
          if (other == null) {
            return;
          }
          if (other.NickName.Length != 0) {
            NickName = other.NickName;
          }
          if (other.AvatarUrl.Length != 0) {
            AvatarUrl = other.AvatarUrl;
          }
          if (other.ItemName.Length != 0) {
            ItemName = other.ItemName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                NickName = input.ReadString();
                break;
              }
              case 18: {
                AvatarUrl = input.ReadString();
                break;
              }
              case 26: {
                ItemName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                NickName = input.ReadString();
                break;
              }
              case 18: {
                AvatarUrl = input.ReadString();
                break;
              }
              case 26: {
                ItemName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///玩家进入状态同步房间
  /// </summary>
  public sealed partial class ResNetEnterSRoom : pb::IMessage<ResNetEnterSRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResNetEnterSRoom> _parser = new pb::MessageParser<ResNetEnterSRoom>(() => new ResNetEnterSRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResNetEnterSRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterSRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterSRoom(ResNetEnterSRoom other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      roomState_ = other.roomState_;
      waitTime_ = other.waitTime_;
      runTime_ = other.runTime_;
      have_ = other.have_.Clone();
      select_ = other.select_.Clone();
      players_ = other.players_.Clone();
      watchers_ = other.watchers_.Clone();
      syncStates_ = other.syncStates_.Clone();
      config_ = other.config_;
      randSeed_ = other.randSeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterSRoom Clone() {
      return new ResNetEnterSRoom(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomState" field.</summary>
    public const int RoomStateFieldNumber = 3;
    private int roomState_;
    /// <summary>
    /// 1准备阶段2已经准备3游戏中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomState {
      get { return roomState_; }
      set {
        roomState_ = value;
      }
    }

    /// <summary>Field number for the "waitTime" field.</summary>
    public const int WaitTimeFieldNumber = 4;
    private long waitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    /// <summary>Field number for the "runTime" field.</summary>
    public const int RunTimeFieldNumber = 5;
    private long runTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RunTime {
      get { return runTime_; }
      set {
        runTime_ = value;
      }
    }

    /// <summary>Field number for the "have" field.</summary>
    public const int HaveFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_have_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Have {
      get { return have_; }
    }

    /// <summary>Field number for the "select" field.</summary>
    public const int SelectFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_select_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Select {
      get { return select_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterSRoom.Types.PlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(66, global::Gopb.ResNetEnterSRoom.Types.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.PlayerInfo> players_ = new pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.PlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "watchers" field.</summary>
    public const int WatchersFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterSRoom.Types.WatcherInfo> _repeated_watchers_codec
        = pb::FieldCodec.ForMessage(74, global::Gopb.ResNetEnterSRoom.Types.WatcherInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.WatcherInfo> watchers_ = new pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.WatcherInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.WatcherInfo> Watchers {
      get { return watchers_; }
    }

    /// <summary>Field number for the "syncStates" field.</summary>
    public const int SyncStatesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterSRoom.Types.RoomState> _repeated_syncStates_codec
        = pb::FieldCodec.ForMessage(82, global::Gopb.ResNetEnterSRoom.Types.RoomState.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.RoomState> syncStates_ = new pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.RoomState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterSRoom.Types.RoomState> SyncStates {
      get { return syncStates_; }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 11;
    private string config_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Config {
      get { return config_; }
      set {
        config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "randSeed" field.</summary>
    public const int RandSeedFieldNumber = 12;
    private long randSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RandSeed {
      get { return randSeed_; }
      set {
        randSeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResNetEnterSRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResNetEnterSRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (RoomState != other.RoomState) return false;
      if (WaitTime != other.WaitTime) return false;
      if (RunTime != other.RunTime) return false;
      if(!have_.Equals(other.have_)) return false;
      if(!select_.Equals(other.select_)) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!watchers_.Equals(other.watchers_)) return false;
      if(!syncStates_.Equals(other.syncStates_)) return false;
      if (Config != other.Config) return false;
      if (RandSeed != other.RandSeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (RoomState != 0) hash ^= RoomState.GetHashCode();
      if (WaitTime != 0L) hash ^= WaitTime.GetHashCode();
      if (RunTime != 0L) hash ^= RunTime.GetHashCode();
      hash ^= have_.GetHashCode();
      hash ^= select_.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= watchers_.GetHashCode();
      hash ^= syncStates_.GetHashCode();
      if (Config.Length != 0) hash ^= Config.GetHashCode();
      if (RandSeed != 0L) hash ^= RandSeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (RoomState != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomState);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(WaitTime);
      }
      if (RunTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RunTime);
      }
      have_.WriteTo(output, _repeated_have_codec);
      select_.WriteTo(output, _repeated_select_codec);
      players_.WriteTo(output, _repeated_players_codec);
      watchers_.WriteTo(output, _repeated_watchers_codec);
      syncStates_.WriteTo(output, _repeated_syncStates_codec);
      if (Config.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Config);
      }
      if (RandSeed != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(RandSeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (RoomState != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomState);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(WaitTime);
      }
      if (RunTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RunTime);
      }
      have_.WriteTo(ref output, _repeated_have_codec);
      select_.WriteTo(ref output, _repeated_select_codec);
      players_.WriteTo(ref output, _repeated_players_codec);
      watchers_.WriteTo(ref output, _repeated_watchers_codec);
      syncStates_.WriteTo(ref output, _repeated_syncStates_codec);
      if (Config.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Config);
      }
      if (RandSeed != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(RandSeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (RoomState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomState);
      }
      if (WaitTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WaitTime);
      }
      if (RunTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RunTime);
      }
      size += have_.CalculateSize(_repeated_have_codec);
      size += select_.CalculateSize(_repeated_select_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      size += watchers_.CalculateSize(_repeated_watchers_codec);
      size += syncStates_.CalculateSize(_repeated_syncStates_codec);
      if (Config.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Config);
      }
      if (RandSeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RandSeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResNetEnterSRoom other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.RoomState != 0) {
        RoomState = other.RoomState;
      }
      if (other.WaitTime != 0L) {
        WaitTime = other.WaitTime;
      }
      if (other.RunTime != 0L) {
        RunTime = other.RunTime;
      }
      have_.Add(other.have_);
      select_.Add(other.select_);
      players_.Add(other.players_);
      watchers_.Add(other.watchers_);
      syncStates_.Add(other.syncStates_);
      if (other.Config.Length != 0) {
        Config = other.Config;
      }
      if (other.RandSeed != 0L) {
        RandSeed = other.RandSeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            RoomState = input.ReadInt32();
            break;
          }
          case 32: {
            WaitTime = input.ReadInt64();
            break;
          }
          case 40: {
            RunTime = input.ReadInt64();
            break;
          }
          case 50: {
            have_.AddEntriesFrom(input, _repeated_have_codec);
            break;
          }
          case 58: {
            select_.AddEntriesFrom(input, _repeated_select_codec);
            break;
          }
          case 66: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 74: {
            watchers_.AddEntriesFrom(input, _repeated_watchers_codec);
            break;
          }
          case 82: {
            syncStates_.AddEntriesFrom(input, _repeated_syncStates_codec);
            break;
          }
          case 90: {
            Config = input.ReadString();
            break;
          }
          case 96: {
            RandSeed = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            RoomState = input.ReadInt32();
            break;
          }
          case 32: {
            WaitTime = input.ReadInt64();
            break;
          }
          case 40: {
            RunTime = input.ReadInt64();
            break;
          }
          case 50: {
            have_.AddEntriesFrom(ref input, _repeated_have_codec);
            break;
          }
          case 58: {
            select_.AddEntriesFrom(ref input, _repeated_select_codec);
            break;
          }
          case 66: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 74: {
            watchers_.AddEntriesFrom(ref input, _repeated_watchers_codec);
            break;
          }
          case 82: {
            syncStates_.AddEntriesFrom(ref input, _repeated_syncStates_codec);
            break;
          }
          case 90: {
            Config = input.ReadString();
            break;
          }
          case 96: {
            RandSeed = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResNetEnterSRoom message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class RoomState : pb::IMessage<RoomState>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoomState> _parser = new pb::MessageParser<RoomState>(() => new RoomState());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoomState> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterSRoom.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState(RoomState other) : this() {
          uid_ = other.uid_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState Clone() {
          return new RoomState(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 2;
        private pb::ByteString data_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoomState);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoomState other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoomState other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterSRoom.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          isReady_ = other.isReady_;
          have_ = other.have_.Clone();
          select_ = other.select_.Clone();
          gender_ = other.gender_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone() {
          return new PlayerInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isReady" field.</summary>
        public const int IsReadyFieldNumber = 4;
        private bool isReady_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsReady {
          get { return isReady_; }
          set {
            isReady_ = value;
          }
        }

        /// <summary>Field number for the "have" field.</summary>
        public const int HaveFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _repeated_have_codec
            = pb::FieldCodec.ForString(42);
        private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Have {
          get { return have_; }
        }

        /// <summary>Field number for the "select" field.</summary>
        public const int SelectFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_select_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Select {
          get { return select_; }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 7;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (IsReady != other.IsReady) return false;
          if(!have_.Equals(other.have_)) return false;
          if(!select_.Equals(other.select_)) return false;
          if (Gender != other.Gender) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (IsReady != false) hash ^= IsReady.GetHashCode();
          hash ^= have_.GetHashCode();
          hash ^= select_.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(output, _repeated_have_codec);
          select_.WriteTo(output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(ref output, _repeated_have_codec);
          select_.WriteTo(ref output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (IsReady != false) {
            size += 1 + 1;
          }
          size += have_.CalculateSize(_repeated_have_codec);
          size += select_.CalculateSize(_repeated_select_codec);
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.IsReady != false) {
            IsReady = other.IsReady;
          }
          have_.Add(other.have_);
          select_.Add(other.select_);
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(ref input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(ref input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class WatcherInfo : pb::IMessage<WatcherInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WatcherInfo> _parser = new pb::MessageParser<WatcherInfo>(() => new WatcherInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WatcherInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterSRoom.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo(WatcherInfo other) : this() {
          uid_ = other.uid_;
          tarUid_ = other.tarUid_;
          total_ = other.total_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WatcherInfo Clone() {
          return new WatcherInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tarUid" field.</summary>
        public const int TarUidFieldNumber = 2;
        private string tarUid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TarUid {
          get { return tarUid_; }
          set {
            tarUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 3;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 4;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 5;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WatcherInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WatcherInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (TarUid != other.TarUid) return false;
          if (Total != other.Total) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (TarUid.Length != 0) hash ^= TarUid.GetHashCode();
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Total != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Total);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AvaUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (TarUid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TarUid);
          }
          if (Total != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Total);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AvaUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (TarUid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TarUid);
          }
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WatcherInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.TarUid.Length != 0) {
            TarUid = other.TarUid;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Total = input.ReadInt32();
                break;
              }
              case 34: {
                Name = input.ReadString();
                break;
              }
              case 42: {
                AvaUrl = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                TarUid = input.ReadString();
                break;
              }
              case 24: {
                Total = input.ReadInt32();
                break;
              }
              case 34: {
                Name = input.ReadString();
                break;
              }
              case 42: {
                AvaUrl = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///--------------client proto--------------
  /// </summary>
  public sealed partial class ResSyncPlayerData : pb::IMessage<ResSyncPlayerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResSyncPlayerData> _parser = new pb::MessageParser<ResSyncPlayerData>(() => new ResSyncPlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResSyncPlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSyncPlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSyncPlayerData(ResSyncPlayerData other) : this() {
      uid_ = other.uid_;
      boxCount_ = other.boxCount_;
      score_ = other.score_;
      popularity_ = other.popularity_;
      leftGameTime_ = other.leftGameTime_;
      maxPopularityUid_ = other.maxPopularityUid_;
      playerIndex_ = other.playerIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSyncPlayerData Clone() {
      return new ResSyncPlayerData(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boxCount" field.</summary>
    public const int BoxCountFieldNumber = 2;
    private int boxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoxCount {
      get { return boxCount_; }
      set {
        boxCount_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "popularity" field.</summary>
    public const int PopularityFieldNumber = 4;
    private int popularity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Popularity {
      get { return popularity_; }
      set {
        popularity_ = value;
      }
    }

    /// <summary>Field number for the "leftGameTime" field.</summary>
    public const int LeftGameTimeFieldNumber = 5;
    private int leftGameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftGameTime {
      get { return leftGameTime_; }
      set {
        leftGameTime_ = value;
      }
    }

    /// <summary>Field number for the "maxPopularityUid" field.</summary>
    public const int MaxPopularityUidFieldNumber = 6;
    private string maxPopularityUid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxPopularityUid {
      get { return maxPopularityUid_; }
      set {
        maxPopularityUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerIndex" field.</summary>
    public const int PlayerIndexFieldNumber = 7;
    private int playerIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerIndex {
      get { return playerIndex_; }
      set {
        playerIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResSyncPlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResSyncPlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (BoxCount != other.BoxCount) return false;
      if (Score != other.Score) return false;
      if (Popularity != other.Popularity) return false;
      if (LeftGameTime != other.LeftGameTime) return false;
      if (MaxPopularityUid != other.MaxPopularityUid) return false;
      if (PlayerIndex != other.PlayerIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (BoxCount != 0) hash ^= BoxCount.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Popularity != 0) hash ^= Popularity.GetHashCode();
      if (LeftGameTime != 0) hash ^= LeftGameTime.GetHashCode();
      if (MaxPopularityUid.Length != 0) hash ^= MaxPopularityUid.GetHashCode();
      if (PlayerIndex != 0) hash ^= PlayerIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (BoxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoxCount);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Popularity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Popularity);
      }
      if (LeftGameTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PlayerIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (BoxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoxCount);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Popularity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Popularity);
      }
      if (LeftGameTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PlayerIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (BoxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoxCount);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Popularity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Popularity);
      }
      if (LeftGameTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResSyncPlayerData other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.BoxCount != 0) {
        BoxCount = other.BoxCount;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Popularity != 0) {
        Popularity = other.Popularity;
      }
      if (other.LeftGameTime != 0) {
        LeftGameTime = other.LeftGameTime;
      }
      if (other.MaxPopularityUid.Length != 0) {
        MaxPopularityUid = other.MaxPopularityUid;
      }
      if (other.PlayerIndex != 0) {
        PlayerIndex = other.PlayerIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            BoxCount = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Popularity = input.ReadInt32();
            break;
          }
          case 40: {
            LeftGameTime = input.ReadInt32();
            break;
          }
          case 50: {
            MaxPopularityUid = input.ReadString();
            break;
          }
          case 56: {
            PlayerIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            BoxCount = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Popularity = input.ReadInt32();
            break;
          }
          case 40: {
            LeftGameTime = input.ReadInt32();
            break;
          }
          case 50: {
            MaxPopularityUid = input.ReadString();
            break;
          }
          case 56: {
            PlayerIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResGamRandomAward : pb::IMessage<ResGamRandomAward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResGamRandomAward> _parser = new pb::MessageParser<ResGamRandomAward>(() => new ResGamRandomAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResGamRandomAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGamRandomAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGamRandomAward(ResGamRandomAward other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      id_ = other.id_;
      couponName_ = other.couponName_;
      couponImg_ = other.couponImg_;
      couponDesc_ = other.couponDesc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGamRandomAward Clone() {
      return new ResGamRandomAward(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "couponName" field.</summary>
    public const int CouponNameFieldNumber = 4;
    private string couponName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CouponName {
      get { return couponName_; }
      set {
        couponName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "couponImg" field.</summary>
    public const int CouponImgFieldNumber = 5;
    private string couponImg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CouponImg {
      get { return couponImg_; }
      set {
        couponImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "couponDesc" field.</summary>
    public const int CouponDescFieldNumber = 6;
    private string couponDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CouponDesc {
      get { return couponDesc_; }
      set {
        couponDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResGamRandomAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResGamRandomAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (Id != other.Id) return false;
      if (CouponName != other.CouponName) return false;
      if (CouponImg != other.CouponImg) return false;
      if (CouponDesc != other.CouponDesc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (CouponName.Length != 0) hash ^= CouponName.GetHashCode();
      if (CouponImg.Length != 0) hash ^= CouponImg.GetHashCode();
      if (CouponDesc.Length != 0) hash ^= CouponDesc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (CouponName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CouponName);
      }
      if (CouponImg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CouponImg);
      }
      if (CouponDesc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CouponDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (CouponName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CouponName);
      }
      if (CouponImg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CouponImg);
      }
      if (CouponDesc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CouponDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (CouponName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponName);
      }
      if (CouponImg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponImg);
      }
      if (CouponDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponDesc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResGamRandomAward other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.CouponName.Length != 0) {
        CouponName = other.CouponName;
      }
      if (other.CouponImg.Length != 0) {
        CouponImg = other.CouponImg;
      }
      if (other.CouponDesc.Length != 0) {
        CouponDesc = other.CouponDesc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            CouponName = input.ReadString();
            break;
          }
          case 42: {
            CouponImg = input.ReadString();
            break;
          }
          case 50: {
            CouponDesc = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            CouponName = input.ReadString();
            break;
          }
          case 42: {
            CouponImg = input.ReadString();
            break;
          }
          case 50: {
            CouponDesc = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResNetEnterTRoom : pb::IMessage<ResNetEnterTRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResNetEnterTRoom> _parser = new pb::MessageParser<ResNetEnterTRoom>(() => new ResNetEnterTRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResNetEnterTRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ResReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterTRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterTRoom(ResNetEnterTRoom other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      waitTime_ = other.waitTime_;
      runTime_ = other.runTime_;
      have_ = other.have_.Clone();
      select_ = other.select_.Clone();
      players_ = other.players_.Clone();
      syncStates_ = other.syncStates_.Clone();
      config_ = other.config_;
      star1Awards_ = other.star1Awards_.Clone();
      star2Awards_ = other.star2Awards_.Clone();
      star3Awards_ = other.star3Awards_.Clone();
      randSeed_ = other.randSeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResNetEnterTRoom Clone() {
      return new ResNetEnterTRoom(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "waitTime" field.</summary>
    public const int WaitTimeFieldNumber = 3;
    private long waitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    /// <summary>Field number for the "runTime" field.</summary>
    public const int RunTimeFieldNumber = 4;
    private long runTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RunTime {
      get { return runTime_; }
      set {
        runTime_ = value;
      }
    }

    /// <summary>Field number for the "have" field.</summary>
    public const int HaveFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_have_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Have {
      get { return have_; }
    }

    /// <summary>Field number for the "select" field.</summary>
    public const int SelectFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_select_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Select {
      get { return select_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterTRoom.Types.PlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(58, global::Gopb.ResNetEnterTRoom.Types.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.PlayerInfo> players_ = new pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.PlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "syncStates" field.</summary>
    public const int SyncStatesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterTRoom.Types.RoomState> _repeated_syncStates_codec
        = pb::FieldCodec.ForMessage(66, global::Gopb.ResNetEnterTRoom.Types.RoomState.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomState> syncStates_ = new pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomState> SyncStates {
      get { return syncStates_; }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 9;
    private string config_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Config {
      get { return config_; }
      set {
        config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "star1Awards" field.</summary>
    public const int Star1AwardsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterTRoom.Types.RoomAward> _repeated_star1Awards_codec
        = pb::FieldCodec.ForMessage(82, global::Gopb.ResNetEnterTRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward> star1Awards_ = new pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward> Star1Awards {
      get { return star1Awards_; }
    }

    /// <summary>Field number for the "star2Awards" field.</summary>
    public const int Star2AwardsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterTRoom.Types.RoomAward> _repeated_star2Awards_codec
        = pb::FieldCodec.ForMessage(90, global::Gopb.ResNetEnterTRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward> star2Awards_ = new pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward> Star2Awards {
      get { return star2Awards_; }
    }

    /// <summary>Field number for the "star3Awards" field.</summary>
    public const int Star3AwardsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Gopb.ResNetEnterTRoom.Types.RoomAward> _repeated_star3Awards_codec
        = pb::FieldCodec.ForMessage(98, global::Gopb.ResNetEnterTRoom.Types.RoomAward.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward> star3Awards_ = new pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ResNetEnterTRoom.Types.RoomAward> Star3Awards {
      get { return star3Awards_; }
    }

    /// <summary>Field number for the "randSeed" field.</summary>
    public const int RandSeedFieldNumber = 13;
    private long randSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RandSeed {
      get { return randSeed_; }
      set {
        randSeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResNetEnterTRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResNetEnterTRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      if (WaitTime != other.WaitTime) return false;
      if (RunTime != other.RunTime) return false;
      if(!have_.Equals(other.have_)) return false;
      if(!select_.Equals(other.select_)) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!syncStates_.Equals(other.syncStates_)) return false;
      if (Config != other.Config) return false;
      if(!star1Awards_.Equals(other.star1Awards_)) return false;
      if(!star2Awards_.Equals(other.star2Awards_)) return false;
      if(!star3Awards_.Equals(other.star3Awards_)) return false;
      if (RandSeed != other.RandSeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (WaitTime != 0L) hash ^= WaitTime.GetHashCode();
      if (RunTime != 0L) hash ^= RunTime.GetHashCode();
      hash ^= have_.GetHashCode();
      hash ^= select_.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= syncStates_.GetHashCode();
      if (Config.Length != 0) hash ^= Config.GetHashCode();
      hash ^= star1Awards_.GetHashCode();
      hash ^= star2Awards_.GetHashCode();
      hash ^= star3Awards_.GetHashCode();
      if (RandSeed != 0L) hash ^= RandSeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WaitTime);
      }
      if (RunTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RunTime);
      }
      have_.WriteTo(output, _repeated_have_codec);
      select_.WriteTo(output, _repeated_select_codec);
      players_.WriteTo(output, _repeated_players_codec);
      syncStates_.WriteTo(output, _repeated_syncStates_codec);
      if (Config.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Config);
      }
      star1Awards_.WriteTo(output, _repeated_star1Awards_codec);
      star2Awards_.WriteTo(output, _repeated_star2Awards_codec);
      star3Awards_.WriteTo(output, _repeated_star3Awards_codec);
      if (RandSeed != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(RandSeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (WaitTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WaitTime);
      }
      if (RunTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RunTime);
      }
      have_.WriteTo(ref output, _repeated_have_codec);
      select_.WriteTo(ref output, _repeated_select_codec);
      players_.WriteTo(ref output, _repeated_players_codec);
      syncStates_.WriteTo(ref output, _repeated_syncStates_codec);
      if (Config.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Config);
      }
      star1Awards_.WriteTo(ref output, _repeated_star1Awards_codec);
      star2Awards_.WriteTo(ref output, _repeated_star2Awards_codec);
      star3Awards_.WriteTo(ref output, _repeated_star3Awards_codec);
      if (RandSeed != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(RandSeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (WaitTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WaitTime);
      }
      if (RunTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RunTime);
      }
      size += have_.CalculateSize(_repeated_have_codec);
      size += select_.CalculateSize(_repeated_select_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      size += syncStates_.CalculateSize(_repeated_syncStates_codec);
      if (Config.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Config);
      }
      size += star1Awards_.CalculateSize(_repeated_star1Awards_codec);
      size += star2Awards_.CalculateSize(_repeated_star2Awards_codec);
      size += star3Awards_.CalculateSize(_repeated_star3Awards_codec);
      if (RandSeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RandSeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResNetEnterTRoom other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.WaitTime != 0L) {
        WaitTime = other.WaitTime;
      }
      if (other.RunTime != 0L) {
        RunTime = other.RunTime;
      }
      have_.Add(other.have_);
      select_.Add(other.select_);
      players_.Add(other.players_);
      syncStates_.Add(other.syncStates_);
      if (other.Config.Length != 0) {
        Config = other.Config;
      }
      star1Awards_.Add(other.star1Awards_);
      star2Awards_.Add(other.star2Awards_);
      star3Awards_.Add(other.star3Awards_);
      if (other.RandSeed != 0L) {
        RandSeed = other.RandSeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            WaitTime = input.ReadInt64();
            break;
          }
          case 32: {
            RunTime = input.ReadInt64();
            break;
          }
          case 42: {
            have_.AddEntriesFrom(input, _repeated_have_codec);
            break;
          }
          case 50: {
            select_.AddEntriesFrom(input, _repeated_select_codec);
            break;
          }
          case 58: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 66: {
            syncStates_.AddEntriesFrom(input, _repeated_syncStates_codec);
            break;
          }
          case 74: {
            Config = input.ReadString();
            break;
          }
          case 82: {
            star1Awards_.AddEntriesFrom(input, _repeated_star1Awards_codec);
            break;
          }
          case 90: {
            star2Awards_.AddEntriesFrom(input, _repeated_star2Awards_codec);
            break;
          }
          case 98: {
            star3Awards_.AddEntriesFrom(input, _repeated_star3Awards_codec);
            break;
          }
          case 104: {
            RandSeed = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            WaitTime = input.ReadInt64();
            break;
          }
          case 32: {
            RunTime = input.ReadInt64();
            break;
          }
          case 42: {
            have_.AddEntriesFrom(ref input, _repeated_have_codec);
            break;
          }
          case 50: {
            select_.AddEntriesFrom(ref input, _repeated_select_codec);
            break;
          }
          case 58: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 66: {
            syncStates_.AddEntriesFrom(ref input, _repeated_syncStates_codec);
            break;
          }
          case 74: {
            Config = input.ReadString();
            break;
          }
          case 82: {
            star1Awards_.AddEntriesFrom(ref input, _repeated_star1Awards_codec);
            break;
          }
          case 90: {
            star2Awards_.AddEntriesFrom(ref input, _repeated_star2Awards_codec);
            break;
          }
          case 98: {
            star3Awards_.AddEntriesFrom(ref input, _repeated_star3Awards_codec);
            break;
          }
          case 104: {
            RandSeed = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResNetEnterTRoom message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class RoomState : pb::IMessage<RoomState>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoomState> _parser = new pb::MessageParser<RoomState>(() => new RoomState());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoomState> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterTRoom.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState(RoomState other) : this() {
          uid_ = other.uid_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomState Clone() {
          return new RoomState(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 2;
        private pb::ByteString data_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoomState);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoomState other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoomState other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterTRoom.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this() {
          uid_ = other.uid_;
          name_ = other.name_;
          avaUrl_ = other.avaUrl_;
          isReady_ = other.isReady_;
          have_ = other.have_.Clone();
          select_ = other.select_.Clone();
          gender_ = other.gender_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone() {
          return new PlayerInfo(this);
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;
        private string uid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uid {
          get { return uid_; }
          set {
            uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avaUrl" field.</summary>
        public const int AvaUrlFieldNumber = 3;
        private string avaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvaUrl {
          get { return avaUrl_; }
          set {
            avaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isReady" field.</summary>
        public const int IsReadyFieldNumber = 4;
        private bool isReady_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsReady {
          get { return isReady_; }
          set {
            isReady_ = value;
          }
        }

        /// <summary>Field number for the "have" field.</summary>
        public const int HaveFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _repeated_have_codec
            = pb::FieldCodec.ForString(42);
        private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Have {
          get { return have_; }
        }

        /// <summary>Field number for the "select" field.</summary>
        public const int SelectFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_select_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Select {
          get { return select_; }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 7;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uid != other.Uid) return false;
          if (Name != other.Name) return false;
          if (AvaUrl != other.AvaUrl) return false;
          if (IsReady != other.IsReady) return false;
          if(!have_.Equals(other.have_)) return false;
          if(!select_.Equals(other.select_)) return false;
          if (Gender != other.Gender) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uid.Length != 0) hash ^= Uid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (AvaUrl.Length != 0) hash ^= AvaUrl.GetHashCode();
          if (IsReady != false) hash ^= IsReady.GetHashCode();
          hash ^= have_.GetHashCode();
          hash ^= select_.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(output, _repeated_have_codec);
          select_.WriteTo(output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Uid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Uid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (AvaUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvaUrl);
          }
          if (IsReady != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsReady);
          }
          have_.WriteTo(ref output, _repeated_have_codec);
          select_.WriteTo(ref output, _repeated_select_codec);
          if (Gender != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Gender);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (AvaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvaUrl);
          }
          if (IsReady != false) {
            size += 1 + 1;
          }
          size += have_.CalculateSize(_repeated_have_codec);
          size += select_.CalculateSize(_repeated_select_codec);
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Uid.Length != 0) {
            Uid = other.Uid;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.AvaUrl.Length != 0) {
            AvaUrl = other.AvaUrl;
          }
          if (other.IsReady != false) {
            IsReady = other.IsReady;
          }
          have_.Add(other.have_);
          select_.Add(other.select_);
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Uid = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                AvaUrl = input.ReadString();
                break;
              }
              case 32: {
                IsReady = input.ReadBool();
                break;
              }
              case 42: {
                have_.AddEntriesFrom(ref input, _repeated_have_codec);
                break;
              }
              case 50: {
                select_.AddEntriesFrom(ref input, _repeated_select_codec);
                break;
              }
              case 56: {
                Gender = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RoomAward : pb::IMessage<RoomAward>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoomAward> _parser = new pb::MessageParser<RoomAward>(() => new RoomAward());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoomAward> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gopb.ResNetEnterTRoom.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward(RoomAward other) : this() {
          id_ = other.id_;
          couponName_ = other.couponName_;
          couponImg_ = other.couponImg_;
          couponDesc_ = other.couponDesc_;
          weight_ = other.weight_;
          stock_ = other.stock_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomAward Clone() {
          return new RoomAward(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponName" field.</summary>
        public const int CouponNameFieldNumber = 2;
        private string couponName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponName {
          get { return couponName_; }
          set {
            couponName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponImg" field.</summary>
        public const int CouponImgFieldNumber = 3;
        private string couponImg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponImg {
          get { return couponImg_; }
          set {
            couponImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "couponDesc" field.</summary>
        public const int CouponDescFieldNumber = 4;
        private string couponDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CouponDesc {
          get { return couponDesc_; }
          set {
            couponDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "weight" field.</summary>
        public const int WeightFieldNumber = 5;
        private int weight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Weight {
          get { return weight_; }
          set {
            weight_ = value;
          }
        }

        /// <summary>Field number for the "stock" field.</summary>
        public const int StockFieldNumber = 6;
        private int stock_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Stock {
          get { return stock_; }
          set {
            stock_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoomAward);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoomAward other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (CouponName != other.CouponName) return false;
          if (CouponImg != other.CouponImg) return false;
          if (CouponDesc != other.CouponDesc) return false;
          if (Weight != other.Weight) return false;
          if (Stock != other.Stock) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (CouponName.Length != 0) hash ^= CouponName.GetHashCode();
          if (CouponImg.Length != 0) hash ^= CouponImg.GetHashCode();
          if (CouponDesc.Length != 0) hash ^= CouponDesc.GetHashCode();
          if (Weight != 0) hash ^= Weight.GetHashCode();
          if (Stock != 0) hash ^= Stock.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CouponName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CouponName);
          }
          if (CouponImg.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CouponDesc);
          }
          if (Weight != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Weight);
          }
          if (Stock != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Stock);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CouponName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CouponName);
          }
          if (CouponImg.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CouponDesc);
          }
          if (Weight != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Weight);
          }
          if (Stock != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Stock);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (CouponName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponName);
          }
          if (CouponImg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponImg);
          }
          if (CouponDesc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponDesc);
          }
          if (Weight != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
          }
          if (Stock != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stock);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoomAward other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.CouponName.Length != 0) {
            CouponName = other.CouponName;
          }
          if (other.CouponImg.Length != 0) {
            CouponImg = other.CouponImg;
          }
          if (other.CouponDesc.Length != 0) {
            CouponDesc = other.CouponDesc;
          }
          if (other.Weight != 0) {
            Weight = other.Weight;
          }
          if (other.Stock != 0) {
            Stock = other.Stock;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                CouponName = input.ReadString();
                break;
              }
              case 26: {
                CouponImg = input.ReadString();
                break;
              }
              case 34: {
                CouponDesc = input.ReadString();
                break;
              }
              case 40: {
                Weight = input.ReadInt32();
                break;
              }
              case 48: {
                Stock = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                CouponName = input.ReadString();
                break;
              }
              case 26: {
                CouponImg = input.ReadString();
                break;
              }
              case 34: {
                CouponDesc = input.ReadString();
                break;
              }
              case 40: {
                Weight = input.ReadInt32();
                break;
              }
              case 48: {
                Stock = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
