// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: req.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gopb {

  /// <summary>Holder for reflection information generated from req.proto</summary>
  public static partial class ReqReflection {

    #region Descriptor
    /// <summary>File descriptor for req.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReqReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglyZXEucHJvdG8SBGdvcGIiMQoLUmVxTmV0TG9naW4SEAoIdXNlcm5hbWUY",
            "ASABKAkSEAoIcGFzc3dvcmQYAiABKAkiJgoVUmVxTmV0RW50ZXJNYXRjaFF1",
            "ZXVlEg0KBWxldmVsGAEgASgFIksKEFJlcUdhbWVTeW5jU3RhdGUSDQoFc1R5",
            "cGUYASABKAUSDAoEZGF0YRgCIAEoDBINCgVyb3V0ZRgDIAEoCRILCgN0YWcY",
            "BCABKAUiZgoTUmVxR2FtZVN5bmNGQ29tbWFuZBIPCgdleEZyYW1lGAEgASgF",
            "Eg8KB2VwRnJhbWUYAiABKAUSCwoDdWlkGAMgASgJEg0KBWN0eXBlGAQgASgF",
            "EhEKCXBhcmFtTGlzdBgFIAMoBSJVChBSZXFOZXRDcmVhdGVSb29tEgsKA21h",
            "YxgBIAEoCRIPCgdwbGF5TW9kGAIgASgJEhMKC2ZpbmdlclByaW50GAMgASgJ",
            "Eg4KBml0ZW1JZBgEIAEoBSIyCg9SZXFOZXRFbnRlclJvb20SDQoFdG9rZW4Y",
            "ASABKAkSEAoIZGV2aWNlSWQYAiABKAkihwEKFVJlcU5ldEVudGVyUm9vbVNl",
            "cnZlchIOCgZyb29tSWQYASABKAkSCwoDdWlkGAIgASgJEhAKCG5pY2tOYW1l",
            "GAMgASgJEhEKCWF2YXRhclVybBgEIAEoCRIMCgRoYXZlGAUgAygJEg4KBnNl",
            "bGVjdBgGIAMoCRIOCgZnZW5kZXIYByABKAUiNQoTUmVxR2FtZUZQbGF5ZXJS",
            "ZWRheRIOCgZzZWxlY3QYASADKAkSDgoGZ2VuZGVyGAIgASgFImMKDFJlcUNv",
            "bW1vbkFyZxIPCgdzdHJWYWwxGAEgASgJEg8KB3N0clZhbDIYAiABKAkSDwoH",
            "aW50VmFsMRgDIAEoBRIPCgdpbnRWYWwyGAQgASgFEg8KB2ludFZhbDMYBSAB",
            "KAUiMQoNUmVxQ29tbW9uQXJncxIgCgRhcmdzGAEgAygLMhIuZ29wYi5SZXFD",
            "b21tb25BcmciLQoPUmVxU3luY1NuYWtlQ21kEgsKA3VpZBgBIAEoCRINCgVh",
            "bmdsZRgCIAEoBSI1ChFSZXFTeW5jU25ha2VTdGF0ZRIgCgZzdGF0ZXMYASAD",
            "KAsyEC5nb3BiLlNuYWtlU3RhdGUiXAoKU25ha2VTdGF0ZRIPCgdhaUluZGV4",
            "GAEgASgFEgsKA3VpZBgCIAEoCRINCgVzY29yZRgDIAEoBRIMCgRyYW5rGAQg",
            "ASgFEhMKC3NuYWtlTGVuZ3RoGAUgASgFIsgBChZSZXFTa2lwU3luY0NvbW1h",
            "bmREYXRhEgsKA3VpZBgBIAEoCRINCgVjdHlwZRgCIAEoCRIJCgF4GAMgASgF",
            "EgkKAXkYBCABKAUSCwoDZGlyGAUgASgFEg0KBXN0YXRlGAYgASgFEhAKCGJv",
            "eFNwZWVkGAcgASgFEg0KBXNjb3JlGAggASgFEgwKBHRpbWUYCSABKAUSDQoF",
            "cmVxSUQYCiABKAUSEAoIanVtcFRpbWUYCyABKAUSEAoIc3RvcFRpbWUYDCAB",
            "KAUimgEKEVJlcVN5bmNQbGF5ZXJEYXRhEgsKA3VpZBgBIAEoCRIQCghib3hD",
            "b3VudBgCIAEoBRINCgVzY29yZRgDIAEoBRISCgpwb3B1bGFyaXR5GAQgASgF",
            "EhQKDGxlZnRHYW1lVGltZRgFIAEoBRIYChBtYXhQb3B1bGFyaXR5VWlkGAYg",
            "ASgJEhMKC3BsYXllckluZGV4GAcgASgFIjEKEVJlcUdhbVJhbmRvbUF3YXJk",
            "Eg0KBXN0YXJ0GAEgASgFEg0KBXN0ZXBzGAIgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqNetLogin), global::Gopb.ReqNetLogin.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqNetEnterMatchQueue), global::Gopb.ReqNetEnterMatchQueue.Parser, new[]{ "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqGameSyncState), global::Gopb.ReqGameSyncState.Parser, new[]{ "SType", "Data", "Route", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqGameSyncFCommand), global::Gopb.ReqGameSyncFCommand.Parser, new[]{ "ExFrame", "EpFrame", "Uid", "Ctype", "ParamList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqNetCreateRoom), global::Gopb.ReqNetCreateRoom.Parser, new[]{ "Mac", "PlayMod", "FingerPrint", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqNetEnterRoom), global::Gopb.ReqNetEnterRoom.Parser, new[]{ "Token", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqNetEnterRoomServer), global::Gopb.ReqNetEnterRoomServer.Parser, new[]{ "RoomId", "Uid", "NickName", "AvatarUrl", "Have", "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqGameFPlayerReday), global::Gopb.ReqGameFPlayerReday.Parser, new[]{ "Select", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqCommonArg), global::Gopb.ReqCommonArg.Parser, new[]{ "StrVal1", "StrVal2", "IntVal1", "IntVal2", "IntVal3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqCommonArgs), global::Gopb.ReqCommonArgs.Parser, new[]{ "Args" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqSyncSnakeCmd), global::Gopb.ReqSyncSnakeCmd.Parser, new[]{ "Uid", "Angle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqSyncSnakeState), global::Gopb.ReqSyncSnakeState.Parser, new[]{ "States" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.SnakeState), global::Gopb.SnakeState.Parser, new[]{ "AiIndex", "Uid", "Score", "Rank", "SnakeLength" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqSkipSyncCommandData), global::Gopb.ReqSkipSyncCommandData.Parser, new[]{ "Uid", "Ctype", "X", "Y", "Dir", "State", "BoxSpeed", "Score", "Time", "ReqID", "JumpTime", "StopTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqSyncPlayerData), global::Gopb.ReqSyncPlayerData.Parser, new[]{ "Uid", "BoxCount", "Score", "Popularity", "LeftGameTime", "MaxPopularityUid", "PlayerIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gopb.ReqGamRandomAward), global::Gopb.ReqGamRandomAward.Parser, new[]{ "Start", "Steps" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Net
  /// </summary>
  public sealed partial class ReqNetLogin : pb::IMessage<ReqNetLogin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqNetLogin> _parser = new pb::MessageParser<ReqNetLogin>(() => new ReqNetLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqNetLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetLogin(ReqNetLogin other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetLogin Clone() {
      return new ReqNetLogin(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqNetLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqNetLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqNetLogin other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqNetEnterMatchQueue : pb::IMessage<ReqNetEnterMatchQueue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqNetEnterMatchQueue> _parser = new pb::MessageParser<ReqNetEnterMatchQueue>(() => new ReqNetEnterMatchQueue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqNetEnterMatchQueue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterMatchQueue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterMatchQueue(ReqNetEnterMatchQueue other) : this() {
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterMatchQueue Clone() {
      return new ReqNetEnterMatchQueue(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqNetEnterMatchQueue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqNetEnterMatchQueue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqNetEnterMatchQueue other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///同步状态 data是二进制数据，需要再次解proto
  /// </summary>
  public sealed partial class ReqGameSyncState : pb::IMessage<ReqGameSyncState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqGameSyncState> _parser = new pb::MessageParser<ReqGameSyncState>(() => new ReqGameSyncState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqGameSyncState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameSyncState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameSyncState(ReqGameSyncState other) : this() {
      sType_ = other.sType_;
      data_ = other.data_;
      route_ = other.route_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameSyncState Clone() {
      return new ReqGameSyncState(this);
    }

    /// <summary>Field number for the "sType" field.</summary>
    public const int STypeFieldNumber = 1;
    private int sType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SType {
      get { return sType_; }
      set {
        sType_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "route" field.</summary>
    public const int RouteFieldNumber = 3;
    private string route_ = "";
    /// <summary>
    ///客户端定义命令的时候需要使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Route {
      get { return route_; }
      set {
        route_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 4;
    private int tag_;
    /// <summary>
    /// 1表示状态2表示命令（命令服务端不存储）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqGameSyncState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqGameSyncState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SType != other.SType) return false;
      if (Data != other.Data) return false;
      if (Route != other.Route) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SType != 0) hash ^= SType.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Route.Length != 0) hash ^= Route.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SType);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Route.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Route);
      }
      if (Tag != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SType);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Route.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Route);
      }
      if (Tag != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SType);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Route.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Route);
      }
      if (Tag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqGameSyncState other) {
      if (other == null) {
        return;
      }
      if (other.SType != 0) {
        SType = other.SType;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Route.Length != 0) {
        Route = other.Route;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SType = input.ReadInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            Route = input.ReadString();
            break;
          }
          case 32: {
            Tag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SType = input.ReadInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            Route = input.ReadString();
            break;
          }
          case 32: {
            Tag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqGameSyncFCommand : pb::IMessage<ReqGameSyncFCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqGameSyncFCommand> _parser = new pb::MessageParser<ReqGameSyncFCommand>(() => new ReqGameSyncFCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqGameSyncFCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameSyncFCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameSyncFCommand(ReqGameSyncFCommand other) : this() {
      exFrame_ = other.exFrame_;
      epFrame_ = other.epFrame_;
      uid_ = other.uid_;
      ctype_ = other.ctype_;
      paramList_ = other.paramList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameSyncFCommand Clone() {
      return new ReqGameSyncFCommand(this);
    }

    /// <summary>Field number for the "exFrame" field.</summary>
    public const int ExFrameFieldNumber = 1;
    private int exFrame_;
    /// <summary>
    ///期望执行帧
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExFrame {
      get { return exFrame_; }
      set {
        exFrame_ = value;
      }
    }

    /// <summary>Field number for the "epFrame" field.</summary>
    public const int EpFrameFieldNumber = 2;
    private int epFrame_;
    /// <summary>
    ///最终执行帧
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EpFrame {
      get { return epFrame_; }
      set {
        epFrame_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ctype" field.</summary>
    public const int CtypeFieldNumber = 4;
    private int ctype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ctype {
      get { return ctype_; }
      set {
        ctype_ = value;
      }
    }

    /// <summary>Field number for the "paramList" field.</summary>
    public const int ParamListFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_paramList_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> paramList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ParamList {
      get { return paramList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqGameSyncFCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqGameSyncFCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExFrame != other.ExFrame) return false;
      if (EpFrame != other.EpFrame) return false;
      if (Uid != other.Uid) return false;
      if (Ctype != other.Ctype) return false;
      if(!paramList_.Equals(other.paramList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExFrame != 0) hash ^= ExFrame.GetHashCode();
      if (EpFrame != 0) hash ^= EpFrame.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Ctype != 0) hash ^= Ctype.GetHashCode();
      hash ^= paramList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExFrame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ExFrame);
      }
      if (EpFrame != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EpFrame);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (Ctype != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ctype);
      }
      paramList_.WriteTo(output, _repeated_paramList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExFrame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ExFrame);
      }
      if (EpFrame != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EpFrame);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (Ctype != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ctype);
      }
      paramList_.WriteTo(ref output, _repeated_paramList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExFrame);
      }
      if (EpFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EpFrame);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Ctype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ctype);
      }
      size += paramList_.CalculateSize(_repeated_paramList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqGameSyncFCommand other) {
      if (other == null) {
        return;
      }
      if (other.ExFrame != 0) {
        ExFrame = other.ExFrame;
      }
      if (other.EpFrame != 0) {
        EpFrame = other.EpFrame;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Ctype != 0) {
        Ctype = other.Ctype;
      }
      paramList_.Add(other.paramList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExFrame = input.ReadInt32();
            break;
          }
          case 16: {
            EpFrame = input.ReadInt32();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            Ctype = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            paramList_.AddEntriesFrom(input, _repeated_paramList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ExFrame = input.ReadInt32();
            break;
          }
          case 16: {
            EpFrame = input.ReadInt32();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            Ctype = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            paramList_.AddEntriesFrom(ref input, _repeated_paramList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqNetCreateRoom : pb::IMessage<ReqNetCreateRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqNetCreateRoom> _parser = new pb::MessageParser<ReqNetCreateRoom>(() => new ReqNetCreateRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqNetCreateRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetCreateRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetCreateRoom(ReqNetCreateRoom other) : this() {
      mac_ = other.mac_;
      playMod_ = other.playMod_;
      fingerPrint_ = other.fingerPrint_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetCreateRoom Clone() {
      return new ReqNetCreateRoom(this);
    }

    /// <summary>Field number for the "mac" field.</summary>
    public const int MacFieldNumber = 1;
    private string mac_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mac {
      get { return mac_; }
      set {
        mac_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playMod" field.</summary>
    public const int PlayModFieldNumber = 2;
    private string playMod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayMod {
      get { return playMod_; }
      set {
        playMod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fingerPrint" field.</summary>
    public const int FingerPrintFieldNumber = 3;
    private string fingerPrint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FingerPrint {
      get { return fingerPrint_; }
      set {
        fingerPrint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 4;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqNetCreateRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqNetCreateRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mac != other.Mac) return false;
      if (PlayMod != other.PlayMod) return false;
      if (FingerPrint != other.FingerPrint) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mac.Length != 0) hash ^= Mac.GetHashCode();
      if (PlayMod.Length != 0) hash ^= PlayMod.GetHashCode();
      if (FingerPrint.Length != 0) hash ^= FingerPrint.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mac.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mac);
      }
      if (PlayMod.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayMod);
      }
      if (FingerPrint.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FingerPrint);
      }
      if (ItemId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mac.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mac);
      }
      if (PlayMod.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayMod);
      }
      if (FingerPrint.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FingerPrint);
      }
      if (ItemId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mac.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mac);
      }
      if (PlayMod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayMod);
      }
      if (FingerPrint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FingerPrint);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqNetCreateRoom other) {
      if (other == null) {
        return;
      }
      if (other.Mac.Length != 0) {
        Mac = other.Mac;
      }
      if (other.PlayMod.Length != 0) {
        PlayMod = other.PlayMod;
      }
      if (other.FingerPrint.Length != 0) {
        FingerPrint = other.FingerPrint;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Mac = input.ReadString();
            break;
          }
          case 18: {
            PlayMod = input.ReadString();
            break;
          }
          case 26: {
            FingerPrint = input.ReadString();
            break;
          }
          case 32: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Mac = input.ReadString();
            break;
          }
          case 18: {
            PlayMod = input.ReadString();
            break;
          }
          case 26: {
            FingerPrint = input.ReadString();
            break;
          }
          case 32: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqNetEnterRoom : pb::IMessage<ReqNetEnterRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqNetEnterRoom> _parser = new pb::MessageParser<ReqNetEnterRoom>(() => new ReqNetEnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqNetEnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterRoom(ReqNetEnterRoom other) : this() {
      token_ = other.token_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterRoom Clone() {
      return new ReqNetEnterRoom(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqNetEnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqNetEnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqNetEnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///从服务端进房间
  /// </summary>
  public sealed partial class ReqNetEnterRoomServer : pb::IMessage<ReqNetEnterRoomServer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqNetEnterRoomServer> _parser = new pb::MessageParser<ReqNetEnterRoomServer>(() => new ReqNetEnterRoomServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqNetEnterRoomServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterRoomServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterRoomServer(ReqNetEnterRoomServer other) : this() {
      roomId_ = other.roomId_;
      uid_ = other.uid_;
      nickName_ = other.nickName_;
      avatarUrl_ = other.avatarUrl_;
      have_ = other.have_.Clone();
      select_ = other.select_.Clone();
      gender_ = other.gender_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqNetEnterRoomServer Clone() {
      return new ReqNetEnterRoomServer(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 3;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarUrl" field.</summary>
    public const int AvatarUrlFieldNumber = 4;
    private string avatarUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvatarUrl {
      get { return avatarUrl_; }
      set {
        avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "have" field.</summary>
    public const int HaveFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_have_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> have_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Have {
      get { return have_; }
    }

    /// <summary>Field number for the "select" field.</summary>
    public const int SelectFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_select_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Select {
      get { return select_; }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 7;
    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqNetEnterRoomServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqNetEnterRoomServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (Uid != other.Uid) return false;
      if (NickName != other.NickName) return false;
      if (AvatarUrl != other.AvatarUrl) return false;
      if(!have_.Equals(other.have_)) return false;
      if(!select_.Equals(other.select_)) return false;
      if (Gender != other.Gender) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (AvatarUrl.Length != 0) hash ^= AvatarUrl.GetHashCode();
      hash ^= have_.GetHashCode();
      hash ^= select_.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (AvatarUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AvatarUrl);
      }
      have_.WriteTo(output, _repeated_have_codec);
      select_.WriteTo(output, _repeated_select_codec);
      if (Gender != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (AvatarUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AvatarUrl);
      }
      have_.WriteTo(ref output, _repeated_have_codec);
      select_.WriteTo(ref output, _repeated_select_codec);
      if (Gender != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (AvatarUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
      }
      size += have_.CalculateSize(_repeated_have_codec);
      size += select_.CalculateSize(_repeated_select_codec);
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqNetEnterRoomServer other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.AvatarUrl.Length != 0) {
        AvatarUrl = other.AvatarUrl;
      }
      have_.Add(other.have_);
      select_.Add(other.select_);
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 34: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 42: {
            have_.AddEntriesFrom(input, _repeated_have_codec);
            break;
          }
          case 50: {
            select_.AddEntriesFrom(input, _repeated_select_codec);
            break;
          }
          case 56: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 34: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 42: {
            have_.AddEntriesFrom(ref input, _repeated_have_codec);
            break;
          }
          case 50: {
            select_.AddEntriesFrom(ref input, _repeated_select_codec);
            break;
          }
          case 56: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqGameFPlayerReday : pb::IMessage<ReqGameFPlayerReday>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqGameFPlayerReday> _parser = new pb::MessageParser<ReqGameFPlayerReday>(() => new ReqGameFPlayerReday());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqGameFPlayerReday> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameFPlayerReday() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameFPlayerReday(ReqGameFPlayerReday other) : this() {
      select_ = other.select_.Clone();
      gender_ = other.gender_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGameFPlayerReday Clone() {
      return new ReqGameFPlayerReday(this);
    }

    /// <summary>Field number for the "select" field.</summary>
    public const int SelectFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_select_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> select_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Select {
      get { return select_; }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 2;
    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqGameFPlayerReday);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqGameFPlayerReday other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!select_.Equals(other.select_)) return false;
      if (Gender != other.Gender) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= select_.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      select_.WriteTo(output, _repeated_select_codec);
      if (Gender != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      select_.WriteTo(ref output, _repeated_select_codec);
      if (Gender != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += select_.CalculateSize(_repeated_select_codec);
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqGameFPlayerReday other) {
      if (other == null) {
        return;
      }
      select_.Add(other.select_);
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            select_.AddEntriesFrom(input, _repeated_select_codec);
            break;
          }
          case 16: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            select_.AddEntriesFrom(ref input, _repeated_select_codec);
            break;
          }
          case 16: {
            Gender = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///通用
  /// </summary>
  public sealed partial class ReqCommonArg : pb::IMessage<ReqCommonArg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqCommonArg> _parser = new pb::MessageParser<ReqCommonArg>(() => new ReqCommonArg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqCommonArg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCommonArg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCommonArg(ReqCommonArg other) : this() {
      strVal1_ = other.strVal1_;
      strVal2_ = other.strVal2_;
      intVal1_ = other.intVal1_;
      intVal2_ = other.intVal2_;
      intVal3_ = other.intVal3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCommonArg Clone() {
      return new ReqCommonArg(this);
    }

    /// <summary>Field number for the "strVal1" field.</summary>
    public const int StrVal1FieldNumber = 1;
    private string strVal1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrVal1 {
      get { return strVal1_; }
      set {
        strVal1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "strVal2" field.</summary>
    public const int StrVal2FieldNumber = 2;
    private string strVal2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrVal2 {
      get { return strVal2_; }
      set {
        strVal2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "intVal1" field.</summary>
    public const int IntVal1FieldNumber = 3;
    private int intVal1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal1 {
      get { return intVal1_; }
      set {
        intVal1_ = value;
      }
    }

    /// <summary>Field number for the "intVal2" field.</summary>
    public const int IntVal2FieldNumber = 4;
    private int intVal2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal2 {
      get { return intVal2_; }
      set {
        intVal2_ = value;
      }
    }

    /// <summary>Field number for the "intVal3" field.</summary>
    public const int IntVal3FieldNumber = 5;
    private int intVal3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal3 {
      get { return intVal3_; }
      set {
        intVal3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqCommonArg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqCommonArg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StrVal1 != other.StrVal1) return false;
      if (StrVal2 != other.StrVal2) return false;
      if (IntVal1 != other.IntVal1) return false;
      if (IntVal2 != other.IntVal2) return false;
      if (IntVal3 != other.IntVal3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StrVal1.Length != 0) hash ^= StrVal1.GetHashCode();
      if (StrVal2.Length != 0) hash ^= StrVal2.GetHashCode();
      if (IntVal1 != 0) hash ^= IntVal1.GetHashCode();
      if (IntVal2 != 0) hash ^= IntVal2.GetHashCode();
      if (IntVal3 != 0) hash ^= IntVal3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StrVal1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StrVal1);
      }
      if (StrVal2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StrVal2);
      }
      if (IntVal1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IntVal1);
      }
      if (IntVal2 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IntVal2);
      }
      if (IntVal3 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IntVal3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StrVal1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StrVal1);
      }
      if (StrVal2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StrVal2);
      }
      if (IntVal1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IntVal1);
      }
      if (IntVal2 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IntVal2);
      }
      if (IntVal3 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IntVal3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StrVal1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrVal1);
      }
      if (StrVal2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrVal2);
      }
      if (IntVal1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal1);
      }
      if (IntVal2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal2);
      }
      if (IntVal3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqCommonArg other) {
      if (other == null) {
        return;
      }
      if (other.StrVal1.Length != 0) {
        StrVal1 = other.StrVal1;
      }
      if (other.StrVal2.Length != 0) {
        StrVal2 = other.StrVal2;
      }
      if (other.IntVal1 != 0) {
        IntVal1 = other.IntVal1;
      }
      if (other.IntVal2 != 0) {
        IntVal2 = other.IntVal2;
      }
      if (other.IntVal3 != 0) {
        IntVal3 = other.IntVal3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StrVal1 = input.ReadString();
            break;
          }
          case 18: {
            StrVal2 = input.ReadString();
            break;
          }
          case 24: {
            IntVal1 = input.ReadInt32();
            break;
          }
          case 32: {
            IntVal2 = input.ReadInt32();
            break;
          }
          case 40: {
            IntVal3 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StrVal1 = input.ReadString();
            break;
          }
          case 18: {
            StrVal2 = input.ReadString();
            break;
          }
          case 24: {
            IntVal1 = input.ReadInt32();
            break;
          }
          case 32: {
            IntVal2 = input.ReadInt32();
            break;
          }
          case 40: {
            IntVal3 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqCommonArgs : pb::IMessage<ReqCommonArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqCommonArgs> _parser = new pb::MessageParser<ReqCommonArgs>(() => new ReqCommonArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqCommonArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCommonArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCommonArgs(ReqCommonArgs other) : this() {
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCommonArgs Clone() {
      return new ReqCommonArgs(this);
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gopb.ReqCommonArg> _repeated_args_codec
        = pb::FieldCodec.ForMessage(10, global::Gopb.ReqCommonArg.Parser);
    private readonly pbc::RepeatedField<global::Gopb.ReqCommonArg> args_ = new pbc::RepeatedField<global::Gopb.ReqCommonArg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.ReqCommonArg> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqCommonArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqCommonArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      args_.WriteTo(ref output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqCommonArgs other) {
      if (other == null) {
        return;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            args_.AddEntriesFrom(ref input, _repeated_args_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///--------------client proto--------------
  /// </summary>
  public sealed partial class ReqSyncSnakeCmd : pb::IMessage<ReqSyncSnakeCmd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqSyncSnakeCmd> _parser = new pb::MessageParser<ReqSyncSnakeCmd>(() => new ReqSyncSnakeCmd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqSyncSnakeCmd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncSnakeCmd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncSnakeCmd(ReqSyncSnakeCmd other) : this() {
      uid_ = other.uid_;
      angle_ = other.angle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncSnakeCmd Clone() {
      return new ReqSyncSnakeCmd(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 2;
    private int angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqSyncSnakeCmd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqSyncSnakeCmd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Angle != other.Angle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Angle != 0) hash ^= Angle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Angle != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Angle != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Angle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Angle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqSyncSnakeCmd other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Angle != 0) {
        Angle = other.Angle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            Angle = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            Angle = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqSyncSnakeState : pb::IMessage<ReqSyncSnakeState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqSyncSnakeState> _parser = new pb::MessageParser<ReqSyncSnakeState>(() => new ReqSyncSnakeState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqSyncSnakeState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncSnakeState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncSnakeState(ReqSyncSnakeState other) : this() {
      states_ = other.states_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncSnakeState Clone() {
      return new ReqSyncSnakeState(this);
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gopb.SnakeState> _repeated_states_codec
        = pb::FieldCodec.ForMessage(10, global::Gopb.SnakeState.Parser);
    private readonly pbc::RepeatedField<global::Gopb.SnakeState> states_ = new pbc::RepeatedField<global::Gopb.SnakeState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gopb.SnakeState> States {
      get { return states_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqSyncSnakeState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqSyncSnakeState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!states_.Equals(other.states_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= states_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      states_.WriteTo(output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      states_.WriteTo(ref output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += states_.CalculateSize(_repeated_states_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqSyncSnakeState other) {
      if (other == null) {
        return;
      }
      states_.Add(other.states_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            states_.AddEntriesFrom(ref input, _repeated_states_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SnakeState : pb::IMessage<SnakeState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SnakeState> _parser = new pb::MessageParser<SnakeState>(() => new SnakeState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SnakeState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnakeState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnakeState(SnakeState other) : this() {
      aiIndex_ = other.aiIndex_;
      uid_ = other.uid_;
      score_ = other.score_;
      rank_ = other.rank_;
      snakeLength_ = other.snakeLength_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnakeState Clone() {
      return new SnakeState(this);
    }

    /// <summary>Field number for the "aiIndex" field.</summary>
    public const int AiIndexFieldNumber = 1;
    private int aiIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AiIndex {
      get { return aiIndex_; }
      set {
        aiIndex_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 4;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "snakeLength" field.</summary>
    public const int SnakeLengthFieldNumber = 5;
    private int snakeLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SnakeLength {
      get { return snakeLength_; }
      set {
        snakeLength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SnakeState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SnakeState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AiIndex != other.AiIndex) return false;
      if (Uid != other.Uid) return false;
      if (Score != other.Score) return false;
      if (Rank != other.Rank) return false;
      if (SnakeLength != other.SnakeLength) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AiIndex != 0) hash ^= AiIndex.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (SnakeLength != 0) hash ^= SnakeLength.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AiIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AiIndex);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Rank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Rank);
      }
      if (SnakeLength != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SnakeLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AiIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AiIndex);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Rank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Rank);
      }
      if (SnakeLength != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SnakeLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AiIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AiIndex);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (SnakeLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SnakeLength);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SnakeState other) {
      if (other == null) {
        return;
      }
      if (other.AiIndex != 0) {
        AiIndex = other.AiIndex;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.SnakeLength != 0) {
        SnakeLength = other.SnakeLength;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AiIndex = input.ReadInt32();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Rank = input.ReadInt32();
            break;
          }
          case 40: {
            SnakeLength = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AiIndex = input.ReadInt32();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Rank = input.ReadInt32();
            break;
          }
          case 40: {
            SnakeLength = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqSkipSyncCommandData : pb::IMessage<ReqSkipSyncCommandData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqSkipSyncCommandData> _parser = new pb::MessageParser<ReqSkipSyncCommandData>(() => new ReqSkipSyncCommandData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqSkipSyncCommandData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSkipSyncCommandData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSkipSyncCommandData(ReqSkipSyncCommandData other) : this() {
      uid_ = other.uid_;
      ctype_ = other.ctype_;
      x_ = other.x_;
      y_ = other.y_;
      dir_ = other.dir_;
      state_ = other.state_;
      boxSpeed_ = other.boxSpeed_;
      score_ = other.score_;
      time_ = other.time_;
      reqID_ = other.reqID_;
      jumpTime_ = other.jumpTime_;
      stopTime_ = other.stopTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSkipSyncCommandData Clone() {
      return new ReqSkipSyncCommandData(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ctype" field.</summary>
    public const int CtypeFieldNumber = 2;
    private string ctype_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ctype {
      get { return ctype_; }
      set {
        ctype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 5;
    private int dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "boxSpeed" field.</summary>
    public const int BoxSpeedFieldNumber = 7;
    private int boxSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoxSpeed {
      get { return boxSpeed_; }
      set {
        boxSpeed_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 8;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 9;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "reqID" field.</summary>
    public const int ReqIDFieldNumber = 10;
    private int reqID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqID {
      get { return reqID_; }
      set {
        reqID_ = value;
      }
    }

    /// <summary>Field number for the "jumpTime" field.</summary>
    public const int JumpTimeFieldNumber = 11;
    private int jumpTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JumpTime {
      get { return jumpTime_; }
      set {
        jumpTime_ = value;
      }
    }

    /// <summary>Field number for the "stopTime" field.</summary>
    public const int StopTimeFieldNumber = 12;
    private int stopTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StopTime {
      get { return stopTime_; }
      set {
        stopTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqSkipSyncCommandData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqSkipSyncCommandData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Ctype != other.Ctype) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Dir != other.Dir) return false;
      if (State != other.State) return false;
      if (BoxSpeed != other.BoxSpeed) return false;
      if (Score != other.Score) return false;
      if (Time != other.Time) return false;
      if (ReqID != other.ReqID) return false;
      if (JumpTime != other.JumpTime) return false;
      if (StopTime != other.StopTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Ctype.Length != 0) hash ^= Ctype.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Dir != 0) hash ^= Dir.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (BoxSpeed != 0) hash ^= BoxSpeed.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (ReqID != 0) hash ^= ReqID.GetHashCode();
      if (JumpTime != 0) hash ^= JumpTime.GetHashCode();
      if (StopTime != 0) hash ^= StopTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Ctype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ctype);
      }
      if (X != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (Dir != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Dir);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(State);
      }
      if (BoxSpeed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BoxSpeed);
      }
      if (Score != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Score);
      }
      if (Time != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Time);
      }
      if (ReqID != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ReqID);
      }
      if (JumpTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(JumpTime);
      }
      if (StopTime != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(StopTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Ctype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ctype);
      }
      if (X != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (Dir != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Dir);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(State);
      }
      if (BoxSpeed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BoxSpeed);
      }
      if (Score != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Score);
      }
      if (Time != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Time);
      }
      if (ReqID != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ReqID);
      }
      if (JumpTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(JumpTime);
      }
      if (StopTime != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(StopTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Ctype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ctype);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Dir != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dir);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (BoxSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoxSpeed);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (ReqID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqID);
      }
      if (JumpTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JumpTime);
      }
      if (StopTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StopTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqSkipSyncCommandData other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Ctype.Length != 0) {
        Ctype = other.Ctype;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Dir != 0) {
        Dir = other.Dir;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.BoxSpeed != 0) {
        BoxSpeed = other.BoxSpeed;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.ReqID != 0) {
        ReqID = other.ReqID;
      }
      if (other.JumpTime != 0) {
        JumpTime = other.JumpTime;
      }
      if (other.StopTime != 0) {
        StopTime = other.StopTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Ctype = input.ReadString();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Dir = input.ReadInt32();
            break;
          }
          case 48: {
            State = input.ReadInt32();
            break;
          }
          case 56: {
            BoxSpeed = input.ReadInt32();
            break;
          }
          case 64: {
            Score = input.ReadInt32();
            break;
          }
          case 72: {
            Time = input.ReadInt32();
            break;
          }
          case 80: {
            ReqID = input.ReadInt32();
            break;
          }
          case 88: {
            JumpTime = input.ReadInt32();
            break;
          }
          case 96: {
            StopTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Ctype = input.ReadString();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Dir = input.ReadInt32();
            break;
          }
          case 48: {
            State = input.ReadInt32();
            break;
          }
          case 56: {
            BoxSpeed = input.ReadInt32();
            break;
          }
          case 64: {
            Score = input.ReadInt32();
            break;
          }
          case 72: {
            Time = input.ReadInt32();
            break;
          }
          case 80: {
            ReqID = input.ReadInt32();
            break;
          }
          case 88: {
            JumpTime = input.ReadInt32();
            break;
          }
          case 96: {
            StopTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReqSyncPlayerData : pb::IMessage<ReqSyncPlayerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqSyncPlayerData> _parser = new pb::MessageParser<ReqSyncPlayerData>(() => new ReqSyncPlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqSyncPlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncPlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncPlayerData(ReqSyncPlayerData other) : this() {
      uid_ = other.uid_;
      boxCount_ = other.boxCount_;
      score_ = other.score_;
      popularity_ = other.popularity_;
      leftGameTime_ = other.leftGameTime_;
      maxPopularityUid_ = other.maxPopularityUid_;
      playerIndex_ = other.playerIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSyncPlayerData Clone() {
      return new ReqSyncPlayerData(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boxCount" field.</summary>
    public const int BoxCountFieldNumber = 2;
    private int boxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoxCount {
      get { return boxCount_; }
      set {
        boxCount_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "popularity" field.</summary>
    public const int PopularityFieldNumber = 4;
    private int popularity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Popularity {
      get { return popularity_; }
      set {
        popularity_ = value;
      }
    }

    /// <summary>Field number for the "leftGameTime" field.</summary>
    public const int LeftGameTimeFieldNumber = 5;
    private int leftGameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftGameTime {
      get { return leftGameTime_; }
      set {
        leftGameTime_ = value;
      }
    }

    /// <summary>Field number for the "maxPopularityUid" field.</summary>
    public const int MaxPopularityUidFieldNumber = 6;
    private string maxPopularityUid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxPopularityUid {
      get { return maxPopularityUid_; }
      set {
        maxPopularityUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerIndex" field.</summary>
    public const int PlayerIndexFieldNumber = 7;
    private int playerIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerIndex {
      get { return playerIndex_; }
      set {
        playerIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqSyncPlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqSyncPlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (BoxCount != other.BoxCount) return false;
      if (Score != other.Score) return false;
      if (Popularity != other.Popularity) return false;
      if (LeftGameTime != other.LeftGameTime) return false;
      if (MaxPopularityUid != other.MaxPopularityUid) return false;
      if (PlayerIndex != other.PlayerIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (BoxCount != 0) hash ^= BoxCount.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Popularity != 0) hash ^= Popularity.GetHashCode();
      if (LeftGameTime != 0) hash ^= LeftGameTime.GetHashCode();
      if (MaxPopularityUid.Length != 0) hash ^= MaxPopularityUid.GetHashCode();
      if (PlayerIndex != 0) hash ^= PlayerIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (BoxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoxCount);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Popularity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Popularity);
      }
      if (LeftGameTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PlayerIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (BoxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoxCount);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Popularity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Popularity);
      }
      if (LeftGameTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PlayerIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (BoxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoxCount);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Popularity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Popularity);
      }
      if (LeftGameTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftGameTime);
      }
      if (MaxPopularityUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxPopularityUid);
      }
      if (PlayerIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqSyncPlayerData other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.BoxCount != 0) {
        BoxCount = other.BoxCount;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Popularity != 0) {
        Popularity = other.Popularity;
      }
      if (other.LeftGameTime != 0) {
        LeftGameTime = other.LeftGameTime;
      }
      if (other.MaxPopularityUid.Length != 0) {
        MaxPopularityUid = other.MaxPopularityUid;
      }
      if (other.PlayerIndex != 0) {
        PlayerIndex = other.PlayerIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            BoxCount = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Popularity = input.ReadInt32();
            break;
          }
          case 40: {
            LeftGameTime = input.ReadInt32();
            break;
          }
          case 50: {
            MaxPopularityUid = input.ReadString();
            break;
          }
          case 56: {
            PlayerIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            BoxCount = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Popularity = input.ReadInt32();
            break;
          }
          case 40: {
            LeftGameTime = input.ReadInt32();
            break;
          }
          case 50: {
            MaxPopularityUid = input.ReadString();
            break;
          }
          case 56: {
            PlayerIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///为了兼容线上只能在最后面加
  /// </summary>
  public sealed partial class ReqGamRandomAward : pb::IMessage<ReqGamRandomAward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqGamRandomAward> _parser = new pb::MessageParser<ReqGamRandomAward>(() => new ReqGamRandomAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqGamRandomAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gopb.ReqReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGamRandomAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGamRandomAward(ReqGamRandomAward other) : this() {
      start_ = other.start_;
      steps_ = other.steps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGamRandomAward Clone() {
      return new ReqGamRandomAward(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "steps" field.</summary>
    public const int StepsFieldNumber = 2;
    private int steps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Steps {
      get { return steps_; }
      set {
        steps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqGamRandomAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqGamRandomAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (Steps != other.Steps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (Steps != 0) hash ^= Steps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Start);
      }
      if (Steps != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Steps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Start);
      }
      if (Steps != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Steps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
      }
      if (Steps != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Steps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqGamRandomAward other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.Steps != 0) {
        Steps = other.Steps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadInt32();
            break;
          }
          case 16: {
            Steps = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Start = input.ReadInt32();
            break;
          }
          case 16: {
            Steps = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
